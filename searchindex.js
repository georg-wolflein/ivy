Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/less_equal","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/less_equal.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[767,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[365,0,0,"-"],creation_functions:[366,0,0,"-"],data_type_functions:[367,0,0,"-"],data_types:[371,0,0,"-"],elementwise_functions:[372,0,0,"-"],function_and_method_signatures:[374,0,0,"-"],linear_algebra_extension:[375,0,0,"-"],linear_algebra_functions:[376,0,0,"-"],manipulation_functions:[377,0,0,"-"],searching_functions:[378,0,0,"-"],set_functions:[379,0,0,"-"],sorting_functions:[380,0,0,"-"],statistical_functions:[381,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[367,1,1,""],finfo:[369,2,1,""],iinfo:[370,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[367,3,1,""],bits:[367,3,1,""],eps:[367,3,1,""],max:[367,3,1,""],min:[367,3,1,""],smallest_normal:[367,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[373,2,1,""]},"ivy.functional.ivy":{array_api:[768,0,0,"-"],core:[787,0,0,"-"],nn:[1135,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[769,0,0,"-"],creation_functions:[770,0,0,"-"],data_type_functions:[771,0,0,"-"],data_types:[774,0,0,"-"],elementwise_functions:[775,0,0,"-"],function_and_method_signatures:[777,0,0,"-"],linear_algebra_extension:[778,0,0,"-"],linear_algebra_functions:[779,0,0,"-"],manipulation_functions:[780,0,0,"-"],searching_functions:[781,0,0,"-"],set_functions:[782,0,0,"-"],sorting_functions:[783,0,0,"-"],statistical_functions:[784,0,0,"-"],utility_functions:[785,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[772,2,1,""],iinfo:[773,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[776,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[786,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[788,0,0,"-"],compilation:[827,0,0,"-"],device:[829,0,0,"-"],dtype:[879,0,0,"-"],general:[903,0,0,"-"],gradients:[1006,0,0,"-"],image:[1022,0,0,"-"],linalg:[1029,0,0,"-"],logic:[1037,0,0,"-"],math:[1041,0,0,"-"],meta:[1059,0,0,"-"],multi_node:[1063,0,0,"-"],nest:[1107,0,0,"-"],random:[1119,0,0,"-"],reductions:[1126,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[789,2,1,""],builtin_add:[790,2,1,""],builtin_and:[791,2,1,""],builtin_bool:[792,2,1,""],builtin_contains:[793,2,1,""],builtin_deepcopy:[794,2,1,""],builtin_dir:[795,2,1,""],builtin_eq:[796,2,1,""],builtin_float:[797,2,1,""],builtin_floordiv:[798,2,1,""],builtin_ge:[799,2,1,""],builtin_getattr:[800,2,1,""],builtin_getattribute:[801,2,1,""],builtin_getitem:[802,2,1,""],builtin_gt:[803,2,1,""],builtin_int:[804,2,1,""],builtin_invert:[805,2,1,""],builtin_le:[806,2,1,""],builtin_lt:[807,2,1,""],builtin_mul:[808,2,1,""],builtin_ne:[809,2,1,""],builtin_neg:[810,2,1,""],builtin_or:[811,2,1,""],builtin_pos:[812,2,1,""],builtin_pow:[813,2,1,""],builtin_radd:[814,2,1,""],builtin_rand:[815,2,1,""],builtin_rfloordiv:[816,2,1,""],builtin_rmul:[817,2,1,""],builtin_ror:[818,2,1,""],builtin_rpow:[819,2,1,""],builtin_rsub:[820,2,1,""],builtin_rtruediv:[821,2,1,""],builtin_rxor:[822,2,1,""],builtin_setitem:[823,2,1,""],builtin_sub:[824,2,1,""],builtin_truediv:[825,2,1,""],builtin_xor:[826,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[828,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[829,1,1,""],DevClonedItem:[831,1,1,""],DevClonedIter:[832,1,1,""],DevClonedNest:[833,1,1,""],DevDistItem:[834,1,1,""],DevDistIter:[835,1,1,""],DevDistNest:[836,1,1,""],DevManager:[829,1,1,""],DevMapper:[838,1,1,""],DevMapperMultiProc:[839,1,1,""],MultiDev:[829,1,1,""],MultiDevItem:[841,1,1,""],MultiDevIter:[842,1,1,""],MultiDevNest:[843,1,1,""],Profiler:[844,1,1,""],clear_mem_on_dev:[845,2,1,""],default_device:[846,2,1,""],dev:[847,2,1,""],dev_clone:[848,2,1,""],dev_clone_array:[849,2,1,""],dev_clone_iter:[850,2,1,""],dev_clone_nest:[851,2,1,""],dev_dist:[852,2,1,""],dev_dist_array:[853,2,1,""],dev_dist_iter:[854,2,1,""],dev_dist_nest:[855,2,1,""],dev_from_str:[856,2,1,""],dev_to_str:[857,2,1,""],dev_unify:[858,2,1,""],dev_unify_array:[859,2,1,""],dev_unify_iter:[860,2,1,""],dev_unify_nest:[861,2,1,""],dev_util:[862,2,1,""],get_all_arrays_on_dev:[863,2,1,""],gpu_is_available:[864,2,1,""],num_arrays_on_dev:[865,2,1,""],num_cpu_cores:[866,2,1,""],num_gpus:[867,2,1,""],percent_used_mem_on_dev:[868,2,1,""],print_all_arrays_on_dev:[869,2,1,""],set_default_device:[870,2,1,""],set_split_factor:[871,2,1,""],split_factor:[872,2,1,""],split_func_call:[873,2,1,""],to_dev:[874,2,1,""],total_mem_on_dev:[875,2,1,""],tpu_is_available:[876,2,1,""],unset_default_device:[877,2,1,""],used_mem_on_dev:[878,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[829,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[829,3,1,""],da_tune_step:[829,3,1,""],dim_size:[829,3,1,""],ds_tune_step:[829,3,1,""],map:[829,3,1,""],repeated_config_check:[829,3,1,""],tune_step:[829,3,1,""],tuned:[829,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[838,3,1,""],map:[838,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[839,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[829,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[841,3,1,""],items:[841,3,1,""],keys:[841,3,1,""],shape:[841,3,1,""],values:[841,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[842,3,1,""],at_dev:[842,3,1,""],at_devs:[842,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[843,3,1,""],at_dev:[843,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[844,3,1,""],start:[844,3,1,""],stop:[844,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[879,1,1,""],DefaultFloatDtype:[879,1,1,""],DefaultIntDtype:[879,1,1,""],astype:[879,2,1,""],cast:[883,2,1,""],closest_valid_dtype:[884,2,1,""],convert_dtype:[885,2,1,""],default_dtype:[886,2,1,""],default_float_dtype:[887,2,1,""],default_int_dtype:[888,2,1,""],dtype:[889,2,1,""],dtype_bits:[890,2,1,""],dtype_from_str:[891,2,1,""],dtype_to_str:[892,2,1,""],invalid_dtype:[893,2,1,""],is_float_dtype:[894,2,1,""],is_int_dtype:[895,2,1,""],set_default_dtype:[896,2,1,""],set_default_float_dtype:[897,2,1,""],set_default_int_dtype:[898,2,1,""],unset_default_dtype:[899,2,1,""],unset_default_float_dtype:[900,2,1,""],unset_default_int_dtype:[901,2,1,""],valid_dtype:[902,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[879,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[879,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[879,3,1,""]},"ivy.functional.ivy.core.general":{"default":[929,2,1,""],abs:[904,2,1,""],all_equal:[905,2,1,""],arange:[906,2,1,""],arg_names:[907,2,1,""],argmax:[908,2,1,""],argmin:[909,2,1,""],argsort:[910,2,1,""],array:[911,2,1,""],array_equal:[912,2,1,""],arrays_equal:[913,2,1,""],asarray:[903,2,1,""],assert_supports_inplace:[914,2,1,""],broadcast_to:[915,2,1,""],cache_fn:[916,2,1,""],ceil:[917,2,1,""],clip:[918,2,1,""],clip_matrix_norm:[919,2,1,""],clip_vector_norm:[920,2,1,""],concatenate:[921,2,1,""],constant_pad:[922,2,1,""],container_types:[923,2,1,""],copy_array:[924,2,1,""],cross:[925,2,1,""],cumprod:[926,2,1,""],cumsum:[927,2,1,""],current_framework_str:[928,2,1,""],einops_rearrange:[930,2,1,""],einops_reduce:[931,2,1,""],einops_repeat:[932,2,1,""],equal:[933,2,1,""],exists:[934,2,1,""],expand_dims:[935,2,1,""],flip:[936,2,1,""],floor:[937,2,1,""],floormod:[938,2,1,""],fourier_encode:[939,2,1,""],full:[940,2,1,""],gather:[941,2,1,""],gather_nd:[942,2,1,""],get_all_arrays_in_memory:[943,2,1,""],get_min_base:[944,2,1,""],get_min_denominator:[945,2,1,""],get_num_dims:[946,2,1,""],get_referrers_recursive:[947,2,1,""],has_nans:[948,2,1,""],identity:[949,2,1,""],indices_where:[950,2,1,""],inplace_arrays_supported:[951,2,1,""],inplace_decrement:[952,2,1,""],inplace_increment:[953,2,1,""],inplace_update:[954,2,1,""],inplace_variables_supported:[955,2,1,""],is_array:[956,2,1,""],isinf:[957,2,1,""],isnan:[958,2,1,""],less_equal:[959,2,1,""],linear_resample:[960,2,1,""],linspace:[961,2,1,""],logspace:[962,2,1,""],match_kwargs:[963,2,1,""],matmul:[964,2,1,""],maximum:[965,2,1,""],meshgrid:[966,2,1,""],minimum:[967,2,1,""],multiprocessing:[968,2,1,""],num_arrays_in_memory:[969,2,1,""],one_hot:[970,2,1,""],ones:[971,2,1,""],ones_like:[972,2,1,""],print_all_arrays_in_memory:[973,2,1,""],queue_timeout:[974,2,1,""],repeat:[975,2,1,""],reshape:[976,2,1,""],round:[977,2,1,""],scatter_flat:[978,2,1,""],scatter_nd:[979,2,1,""],set_min_base:[980,2,1,""],set_min_denominator:[981,2,1,""],set_queue_timeout:[982,2,1,""],set_tmp_dir:[983,2,1,""],shape:[984,2,1,""],shape_to_tuple:[985,2,1,""],split:[986,2,1,""],squeeze:[987,2,1,""],stable_divide:[988,2,1,""],stable_pow:[989,2,1,""],stack:[990,2,1,""],supports_inplace:[991,2,1,""],swapaxes:[992,2,1,""],tile:[993,2,1,""],tmp_dir:[994,2,1,""],to_list:[995,2,1,""],to_numpy:[996,2,1,""],to_scalar:[997,2,1,""],transpose:[998,2,1,""],try_else_none:[999,2,1,""],unstack:[1000,2,1,""],value_is_nan:[1001,2,1,""],where:[1002,2,1,""],zero_pad:[1003,2,1,""],zeros:[1004,2,1,""],zeros_like:[1005,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1006,1,1,""],adam_step:[1008,2,1,""],adam_update:[1009,2,1,""],execute_with_gradients:[1010,2,1,""],gradient_descent_update:[1011,2,1,""],is_variable:[1012,2,1,""],lamb_update:[1013,2,1,""],lars_update:[1014,2,1,""],optimizer_update:[1015,2,1,""],set_with_grads:[1016,2,1,""],stop_gradient:[1017,2,1,""],unset_with_grads:[1018,2,1,""],variable:[1019,2,1,""],variable_data:[1020,2,1,""],with_grads:[1021,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1006,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1023,2,1,""],float_img_to_uint8_img:[1024,2,1,""],gradient_image:[1025,2,1,""],random_crop:[1026,2,1,""],stack_images:[1027,2,1,""],uint8_img_to_float_img:[1028,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1030,2,1,""],inv:[1031,2,1,""],matrix_norm:[1032,2,1,""],pinv:[1033,2,1,""],svd:[1034,2,1,""],vector_norm:[1035,2,1,""],vector_to_skew_symmetric_matrix:[1036,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1038,2,1,""],logical_not:[1039,2,1,""],logical_or:[1040,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1042,2,1,""],acosh:[1043,2,1,""],asin:[1044,2,1,""],asinh:[1045,2,1,""],atan2:[1047,2,1,""],atan:[1046,2,1,""],atanh:[1048,2,1,""],cos:[1049,2,1,""],cosh:[1050,2,1,""],divide:[1051,2,1,""],erf:[1052,2,1,""],exp:[1053,2,1,""],log:[1054,2,1,""],sin:[1055,2,1,""],sinh:[1056,2,1,""],tan:[1057,2,1,""],tanh:[1058,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1060,2,1,""],maml_step:[1061,2,1,""],reptile_step:[1062,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1063,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1108,2,1,""],copy_nest:[1109,2,1,""],index_nest:[1110,2,1,""],map:[1111,2,1,""],map_nest_at_index:[1112,2,1,""],map_nest_at_indices:[1113,2,1,""],multi_index_nest:[1114,2,1,""],nested_indices_where:[1115,2,1,""],nested_map:[1116,2,1,""],set_nest_at_index:[1117,2,1,""],set_nest_at_indices:[1118,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1120,2,1,""],randint:[1121,2,1,""],random_normal:[1122,2,1,""],random_uniform:[1123,2,1,""],seed:[1124,2,1,""],shuffle:[1125,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1127,2,1,""],reduce_max:[1128,2,1,""],reduce_mean:[1129,2,1,""],reduce_min:[1130,2,1,""],reduce_prod:[1131,2,1,""],reduce_std:[1132,2,1,""],reduce_sum:[1133,2,1,""],reduce_var:[1134,2,1,""]},"ivy.functional.ivy.nn":{activations:[1136,0,0,"-"],layers:[1144,0,0,"-"],losses:[1157,0,0,"-"],norms:[1161,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1137,2,1,""],leaky_relu:[1138,2,1,""],relu:[1139,2,1,""],sigmoid:[1140,2,1,""],softmax:[1141,2,1,""],softplus:[1142,2,1,""],tanh:[1143,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1145,2,1,""],conv1d_transpose:[1146,2,1,""],conv2d:[1147,2,1,""],conv2d_transpose:[1148,2,1,""],conv3d:[1149,2,1,""],conv3d_transpose:[1150,2,1,""],depthwise_conv2d:[1151,2,1,""],dropout:[1152,2,1,""],linear:[1153,2,1,""],lstm_update:[1154,2,1,""],multi_head_attention:[1155,2,1,""],scaled_dot_product_attention:[1156,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1158,2,1,""],cross_entropy:[1159,2,1,""],sparse_cross_entropy:[1160,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1162,2,1,""]},"ivy.graph_compiler":{compiler:[1163,0,0,"-"],globals:[1166,0,0,"-"],graph:[1169,0,0,"-"],helpers:[1171,0,0,"-"],op_logging:[1172,0,0,"-"],param:[1173,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1164,2,1,""],show_graph:[1165,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1167,2,1,""],log_global_inference_rel_times:[1168,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1169,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1169,3,1,""],add_fn_to_dict:[1169,3,1,""],add_param:[1169,3,1,""],compiled:[1169,3,1,""],connect:[1169,3,1,""],debug_info:[1169,3,1,""],get_param:[1169,3,1,""],get_param_recursive:[1169,3,1,""],include_generators:[1169,3,1,""],increment_param_count:[1169,3,1,""],log_all_ops:[1169,3,1,""],params_all_empty:[1169,3,1,""],save_debug_info:[1169,3,1,""],set_param:[1169,3,1,""],show:[1169,3,1,""],show_debug_info:[1169,3,1,""],update_inference_times:[1169,3,1,""],with_array_caching:[1169,3,1,""]},"ivy.graph_compiler.param":{Param:[1173,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1173,3,1,""],count:[1173,3,1,""],depth:[1173,3,1,""],get:[1173,3,1,""],is_var:[1173,3,1,""],ptype:[1173,3,1,""],set:[1173,3,1,""],set_count:[1173,3,1,""],shape:[1173,3,1,""]},"ivy.stateful":{activations:[1178,0,0,"-"],converters:[1181,0,0,"-"],initializers:[1183,0,0,"-"],layers:[1192,0,0,"-"],module:[1204,0,0,"-"],norms:[1206,0,0,"-"],optimizers:[1208,0,0,"-"],sequential:[1214,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1179,1,1,""],GELU:[1180,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1179,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1180,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1182,2,1,""]},"ivy.stateful.initializers":{Constant:[1183,1,1,""],FirstLayerSiren:[1185,1,1,""],GlorotUniform:[1186,1,1,""],KaimingNormal:[1183,1,1,""],Ones:[1188,1,1,""],Siren:[1189,1,1,""],Uniform:[1183,1,1,""],Zeros:[1191,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1185,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1191,3,1,""]},"ivy.stateful.layers":{Conv1D:[1193,1,1,""],Conv1DTranspose:[1194,1,1,""],Conv2D:[1195,1,1,""],Conv2DTranspose:[1196,1,1,""],Conv3D:[1197,1,1,""],Conv3DTranspose:[1198,1,1,""],DepthwiseConv2D:[1199,1,1,""],Dropout:[1200,1,1,""],LSTM:[1201,1,1,""],Linear:[1202,1,1,""],MultiHeadAttention:[1203,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1200,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1201,3,1,""],get_initial_state:[1201,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1202,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1203,3,1,""]},"ivy.stateful.module":{Module:[1205,1,1,""]},"ivy.stateful.module.Module":{__init__:[1205,3,1,""],build:[1205,3,1,""],build_mode:[1205,3,1,""],built:[1205,3,1,""],check_submod_rets:[1205,3,1,""],compile_graph:[1205,3,1,""],compile_on_next_step:[1205,3,1,""],get_mod_key:[1205,3,1,""],mod_depth:[1205,3,1,""],mod_height:[1205,3,1,""],mod_with_top_mod_key_chain:[1205,3,1,""],save_weights:[1205,3,1,""],show_graph:[1205,3,1,""],show_mod_in_top_mod:[1205,3,1,""],show_structure:[1205,3,1,""],show_v_in_top_v:[1205,3,1,""],sub_mods:[1205,3,1,""],track_submod_call_order:[1205,3,1,""],track_submod_rets:[1205,3,1,""],v_with_top_v_key_chains:[1205,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1207,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1207,3,1,""]},"ivy.stateful.optimizers":{Adam:[1209,1,1,""],LAMB:[1210,1,1,""],LARS:[1211,1,1,""],Optimizer:[1212,1,1,""],SGD:[1213,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1209,3,1,""],set_state:[1209,3,1,""],state:[1209,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],state:[1210,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1212,3,1,""],compile_graph:[1212,3,1,""],compile_on_next_step:[1212,3,1,""],set_state:[1212,3,1,""],show_graph:[1212,3,1,""],step:[1212,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.sequential":{Sequential:[1215,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1215,3,1,""]},"ivy.verbosity":{cprint:[1220,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1219,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1208,1209,1210],"02886":1175,"100":[1063,1175,1217],"2021":1175,"2102":1175,"360":[1041,1049,1055,1057],"754":[771,772],"999":[1006,1008,1009,1013,1208,1209,1210],"abstract":[829,844,1175,1208,1212],"boolean":[40,41,829,864,876,879,893,902,903,905,912,913,948,950,951,955,956,957,958,991,1001,1006,1012,1037,1038,1039,1040,1059,1060,1061,1063],"break":43,"case":[15,18,19,40,41,42,43,829,868,875,878,903,906,976,978,979,1029,1032,1035,1063,1107,1110,1114,1175,1192,1203,1204,1205,1208,1212,1221],"catch":[903,929],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,367,771,773,829,831,832,833,834,835,836,838,839,841,842,843,844,856,857,879,903,907,963,971,1006,1020,1063,1107,1109,1116,1157,1159,1160,1169,1173,1175,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],"default":[15,18,19,40,41,42,43,785,786,827,828,829,838,839,846,847,851,852,853,854,855,858,859,860,861,868,871,872,873,878,879,886,887,888,889,903,905,906,908,909,910,919,920,921,922,925,926,927,936,939,940,941,946,948,949,960,962,963,966,968,971,974,975,978,979,982,984,986,988,989,998,1000,1001,1004,1006,1009,1011,1012,1013,1014,1015,1017,1021,1029,1032,1035,1059,1060,1061,1062,1063,1107,1108,1109,1111,1115,1116,1119,1120,1122,1123,1126,1128,1129,1130,1131,1132,1133,1134,1136,1137,1141,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],"final":[40,41,903,939,961,962,1063,1192,1203,1218],"float":[40,41,42,43,771,772,788,813,829,838,839,862,868,871,875,878,879,887,894,903,906,919,920,922,939,940,944,945,962,980,981,982,988,989,1006,1008,1009,1011,1013,1014,1015,1022,1024,1028,1041,1051,1059,1060,1061,1062,1063,1119,1122,1123,1136,1138,1144,1152,1155,1156,1157,1158,1159,1160,1161,1162,1192,1200,1203,1206,1207,1208,1209,1210,1211,1212,1213],"function":[15,40,41,43,369,370,373,772,773,776,786,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1175,1178,1179,1180,1208,1211,1212,1213,1217,1218,1221],"import":[43,1175,1218,1221],"int":[40,41,42,43,771,772,773,785,786,788,813,827,828,829,851,852,853,854,855,858,859,860,861,866,867,873,879,888,890,895,903,908,909,910,915,921,922,926,927,930,931,932,935,936,939,940,941,946,949,960,961,962,970,971,975,976,978,979,984,985,986,987,990,992,993,998,1000,1003,1004,1006,1008,1009,1013,1022,1026,1027,1029,1032,1035,1059,1060,1061,1062,1063,1107,1116,1119,1120,1121,1123,1124,1126,1128,1129,1130,1131,1132,1133,1134,1136,1141,1144,1145,1146,1147,1148,1149,1150,1151,1155,1157,1159,1160,1161,1162,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1206,1207],"long":[1144,1154],"new":[40,41,43,879,883,903,904,915,930,931,932,935,939,940,941,942,971,976,978,979,980,981,988,989,990,1004,1006,1009,1011,1013,1014,1015,1022,1024,1026,1028,1041,1043,1045,1048,1050,1056,1058,1063,1107,1117,1118,1119,1120,1161,1162,1175,1181,1182,1192,1202,1206,1207,1208,1209,1210,1211,1212,1213,1218,1221],"public":[903,923],"return":[15,16,17,18,19,40,41,42,43,771,772,773,775,776,785,786,788,813,827,828,829,838,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,867,868,872,873,874,875,876,878,879,883,884,885,886,887,888,889,890,891,892,893,894,895,902,903,904,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,975,976,977,978,979,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1107,1108,1109,1111,1115,1116,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1175,1181,1182,1192,1201,1202,1208,1212,1217,1218,1221],"short":[1144,1154,1175,1221],"static":[40,41,827,828],"super":1063,"true":[40,41,42,775,776,785,786,827,828,829,903,905,914,916,934,939,948,950,1001,1002,1006,1009,1011,1012,1013,1014,1015,1017,1029,1032,1035,1059,1060,1061,1062,1063,1107,1108,1115,1119,1120,1126,1128,1129,1130,1131,1132,1133,1134,1136,1137,1144,1152,1157,1158,1159,1160,1163,1164,1165,1169,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],"try":[40,41,903,999,1063],"var":[40,41,1059,1060,1061,1221],"while":[40,41,42,1063],AND:[785,786,1037,1038],But:1221,For:[43,903,906,918,990,1006,1012,1020,1041,1042,1175,1181,1182,1218,1221],Its:[1041,1046],NOT:[1037,1039],One:[40,41,903,931,976,1119,1121,1221],Ones:[1175,1183],Such:[903,923],That:1218,The:[15,16,17,18,19,40,41,42,43,775,776,785,786,788,813,827,828,829,838,839,845,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,868,871,872,873,874,875,878,879,883,884,885,890,891,892,893,902,903,906,910,911,912,915,916,919,920,921,922,924,925,928,929,933,936,939,941,942,949,952,953,954,956,959,960,962,964,966,968,971,972,975,976,978,979,980,981,982,985,986,987,988,989,990,993,1001,1004,1005,1006,1008,1009,1011,1013,1014,1015,1017,1020,1022,1024,1026,1028,1029,1032,1034,1041,1042,1044,1046,1049,1051,1052,1053,1054,1055,1057,1059,1060,1061,1062,1063,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1218,1221],There:[43,1175,1218],These:[43,1175],Used:[1107,1108,1115,1204,1205],Using:[1175,1176,1221],With:[40,41,1029,1032,1035,1126,1128,1129,1130,1131,1132,1133,1134,1175,1217,1221],__array__:[903,911],__call__:[1192,1203,1204,1205],__del__:1063,__dict__:[1063,1218],__enter__:1063,__exit__:1063,__getitem__:1063,__getstate__:1063,__init__:[40,41,42,43,59,60,79,194,367,368,475,588,829,830,837,838,839,840,841,842,843,844,879,880,881,882,1006,1007,1063,1067,1074,1169,1170,1173,1174,1175,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],__iter__:1063,__len__:1063,__next__:1063,__pow__:43,__repr__:1063,_assign_vari:1217,_axi:1063,_base:[1107,1108,1115],_compute_node_da_ratio:1063,_compute_node_strs_da:1063,_concat_unify_arrai:1063,_counter:1063,_cur_framework:[43,1063],_da_direct:1063,_da_directions_flip:1063,_da_step_tim:1063,_da_tim:1063,_da_tune_count:1063,_data:1063,_delta_da_dim_s:1063,_delta_sf:1063,_dict:1063,_dim_siz:1063,_first_da_tune_step:1063,_first_ns_tune_step:1063,_fn:1063,_forward:[1175,1217],_get_kalman_param:1221,_get_prior:1221,_get_some_model:1221,_handle_flat_arrays_in_out:43,_index:[1107,1108,1115],_input_queu:1063,_length:1063,_max_depth:1063,_max_node_dim_step_ratio:1063,_max_node_dim_step_s:1063,_max_split_factor_step_s:1063,_mean_unify_arrai:1063,_min_bas:[903,989,1161,1162,1206,1207],_min_denomin:[903,988],_min_node_dim_s:1063,_min_sf_tune_step:1063,_min_unit_node_tune_step:1063,_model:1221,_native_wrapp:43,_node_mapp:1063,_node_percent_mem:1063,_node_str:1063,_node_str_da_ratio:1063,_node_strs_da:1063,_node_strs_kei:1063,_node_strs_n:1063,_node_util:1063,_ns_step_tim:1063,_ns_time:1063,_ns_tune_count:1063,_num_nod:1063,_num_work:1063,_observed_config:1063,_output_queu:1063,_paramet:1217,_percent_mem_inc_per_sf:1063,_percent_mem_inc_per_unit_da_dim:1063,_percent_util_inc_per_unit_da_dim:1063,_ret_fn:1063,_safety_factor:1063,_save_dir:1063,_shift_da_split:1063,_shift_n:1063,_slice:1063,_step:[1208,1212],_sum_unify_arrai:1063,_timeout:1063,_tune:1063,_tune_da:1063,_tune_n:1063,_tune_step:1063,_unit_da_tune_count:1063,_unroll_step:1221,_with_node_mappig:1063,_worker:1063,_worker_class:1063,_worker_fn:1063,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,829,838,844,1063,1204,1205,1208,1212],abil:1175,abl:[40,41],about:[771,772,773],abov:[43,1119,1121],above_height:[40,41],abs:[265,508,622,903,1063],absolut:[40,41,903,904],abstractmethod:1063,accept:[15,43,1175],access:[40,41,1218],accord:[40,41,771,772,903,922,941,978,979,998,1003],accordingli:[785,786],accur:[59,367,829,841,842,843,844,879,1006,1169,1173,1183,1185,1186,1188,1189,1191],aco:[715,1041],acosh:[715,1041],across:[40,41,829,838,839,848,849,851,852,853,854,855,861,871,872,903,908,909,912,913,1063,1107,1111],activ:[1137,1138,1139,1140,1141,1142,1143,1175,1179,1180],actual:1218,adam:[1006,1008,1009,1013,1175,1208,1210,1217],adam_step:1006,adam_upd:1006,adapt:[1006,1014,1208,1211],add:[40,41,43,1063,1157,1158,1159,1160,1161,1162,1175,1206,1207,1218],add_fn_to_dict:1169,add_param:1169,added:[43,903,988,989,1214,1215],adding:[903,915],addit:[40,41,43,903,930,931,932,1161,1162,1192,1202],adher:43,adjac:[903,906],adopt:[903,923],affect:[903,906],affin:[1206,1207],after:[903,960,1006,1009,1010,1011,1013,1014,1015,1022,1023,1161,1162,1208,1209,1210,1211,1212,1213,1221],after_1:[903,922,1003],after_n:[903,922,1003],again:43,against:[40,41,1029,1032,1035,1126,1128,1129,1130,1131,1132,1133,1134],agnost:[43,1175,1217,1218],aim:1221,algebra:1029,algorithm:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199,1221],align:[40,41,43,903,915],aliv:[829,863,865,869,903,943,969,973],all:[15,16,17,18,19,40,41,43,93,208,382,489,602,785,827,828,829,838,863,869,903,904,905,912,913,923,936,943,949,973,987,1059,1060,1061,1062,1063,1107,1108,1109,1115,1116,1119,1120,1123,1126,1128,1129,1130,1131,1132,1133,1134,1144,1154,1175,1218,1221],all_depth:[40,41],all_equ:903,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1107,all_tru:[40,41],alloc:[829,1063],allow:[903,961,962,963,1204,1205],allow_dupl:[903,963],alon:[829,868,878,1063,1175],along:[40,41,43,785,786,829,852,853,854,855,858,859,860,861,873,903,910,921,926,927,936,941,960,961,962,975,986,990,993,1000,1029,1032,1035,1059,1060,1061,1062,1063,1119,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134],alongsid:[1217,1218],alpha:[1136,1138],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,829,1063],also:[40,41,43,903,906,1006,1009,1059,1060,1061,1062,1107,1108,1109,1115,1116,1144,1153,1192,1202,1217],altern:1217,alwai:[40,41,43,1006,1012,1017],among:[40,41],amount:[829,875,1063,1175],angl:[1041,1042,1047],ani:[15,16,17,18,19,40,41,43,827,828,829,831,834,838,839,841,850,851,854,855,860,903,905,906,911,929,930,931,932,933,934,948,956,959,963,988,989,1006,1010,1063,1107,1108,1111,1115,1116,1117,1118,1119,1123,1175,1181,1182,1204,1205,1217,1218,1221],anoth:[40,41,879,885,1175],another_backend:43,anyth:[43,1221],anywai:43,apart:43,api:[1175,1176],appear:[903,935],append:[40,41,1063],appli:[15,18,19,40,41,903,930,931,932,1006,1013,1014,1029,1034,1037,1038,1039,1040,1059,1060,1061,1107,1111,1114,1116,1136,1137,1138,1139,1140,1141,1142,1143,1144,1153,1155,1156,1161,1162,1175,1178,1179,1180,1206,1207],applic:[1107,1111,1116,1144,1155,1156,1175,1221],approxim:[43,788,813,1136,1137],arang:[112,265,396,508,622,903,961,962],arbitrari:[40,41,829,858,859,861,1063],arc:[1041,1047],arcco:[1041,1042],arctan:[1041,1046],area:1175,arg:[15,16,17,40,41,43,59,63,829,838,851,855,861,873,903,930,931,932,979,1063,1163,1164,1165,1169,1181,1182,1204,1205],arg_nam:903,arg_stateful_idx:[1163,1164,1165,1169,1204,1205],argmax:[112,396,508,622,903],argmin:[112,396,508,622,903],args_clon:1063,args_dist:1063,args_to_ivi:[15,1175],args_to_n:[15,1175],args_uni:1063,argsort:[622,903],argument:[15,16,17,18,19,40,41,42,43,59,63,827,828,829,838,839,851,855,861,903,906,907,916,929,963,979,1041,1042,1063,1107,1111,1181,1182,1204,1205],aris:[1175,1221],arithmet:[43,1126,1129,1132,1134],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,112,265,396,508,622,771,772,773,775,776,785,786,813,829,847,848,849,852,853,854,855,858,859,860,861,863,865,869,873,874,879,883,889,894,895,903,904,905,906,908,909,910,912,913,914,915,917,918,919,920,921,922,924,925,926,927,930,931,932,933,935,936,937,938,939,940,941,942,943,946,948,949,950,951,952,953,954,956,957,958,959,960,961,962,964,965,966,967,969,970,971,972,973,975,976,977,978,979,984,986,987,990,991,992,993,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1008,1009,1012,1013,1017,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1063,1107,1109,1116,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1175,1176,1192,1200,1201,1203,1208,1212,1217,1218],arrang:[903,930],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,367,369,370,372,373,771,772,773,775,776,785,786],array_builtin:[43,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826],array_equ:[265,622,903],array_lik:[903,911],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,903],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1175],arraywithgener:[22,1175],arraywithgradi:[24,1175],arraywithimag:[26,1175],arraywithlinalg:[28,1175],arraywithlog:[30,1175],arraywithmath:[32,1175],arraywithmeta:[34,1175],arraywithrandom:[36,1175],arraywithreduct:[38,1175],arriv:[40,41,42],articl:1175,arxiv:1175,as_arrai:[40,41,903,946,984],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[829,847,879,886,887,888,889],as_vari:[40,41],as_zero:[40,41],asarrai:903,asin:[715,1041],asinh:[715,1041],aspect:[1022,1027],assert:[40,41,903,914,1063],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:903,associ:[43,1029,1036],assum:[1218,1221],astyp:879,asynchron:[40,41,42],at_dev:[40,42,829,842,843],at_kei:[40,41],at_key_chain:[40,41],at_nod:1063,atan2:[715,1041],atan:[715,1041],atanh:[715,1041],attent:[1144,1155,1156,1192,1203],attribut:[0,6,40,41,771,772,773,903,972,1005],audienc:[1175,1218],author:1175,avail:[40,41,829,864,866,867,876,903,931,1063],averag:[1006,1008,1009,1013,1059,1060,1061,1126,1129],average_across_step:[1059,1060,1061],avoid:[829,1063,1218],axes:[40,41,43,785,786,829,873,903,908,909,922,935,936,992,998,1003,1029,1032,1035,1063,1126,1128,1129,1130,1131,1132,1133,1134],axes_length:[40,41,903,930,931,932],axi:[40,41,785,786,829,831,834,841,852,853,854,855,858,859,860,861,873,903,908,909,910,921,922,925,926,927,935,936,941,960,961,962,975,986,987,990,992,993,1000,1003,1029,1035,1063,1119,1125,1126,1128,1129,1130,1131,1132,1133,1134,1136,1141,1157,1159,1160],axis0:[40,41,903,992],axis1:[40,41,903,992],back:[1204,1205,1208,1212],backend:[15,17,19,40,41,367,369,370,372,373,829,864,867,876,879,885,893,902,903,951,955,1006,1009,1011,1013,1014,1015,1020,1063,1175,1176,1181,1182,1208,1209,1210,1211,1212,1213,1217,1218,1221],background:[1175,1218],backprop:1221,backward:[785,786,1217],band:[903,939],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,367,788,813,829,831,832,833,834,835,836,838,839,841,842,843,844,879,903,944,962,980,989,1006,1063,1126,1127,1169,1173,1175,1178,1179,1180,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1221],batch:[40,41,829,871,872,903,936,939,949,1022,1026,1029,1034,1059,1060,1061,1062,1063,1144,1153,1161,1162,1206,1207],batch_shap:[903,936,949,970,1022,1023,1024,1025,1026,1027,1028,1029,1036,1119,1120,1144,1154,1155,1156,1192,1201],batch_siz:[1063,1119,1120,1144,1145,1146,1147,1148,1149,1150,1151],bayesian:1221,becaus:[43,903,906],becom:[903,918,1041,1047,1221],been:[903,930,931,932,1119,1120],befor:[40,41,43,829,873,1059,1060,1061,1063,1107,1116,1126,1128,1129,1130,1131,1132,1133,1134,1144,1155,1156,1221],before_1:[903,922,1003],before_n:[903,922,1003],begin:[1107,1108,1115,1218],behaviour:[43,1221],behind:[1006,1009,1011,1013,1014,1015,1175],being:[40,41,43,903,906,974,982,1063],belong:[40,41],below:[43,1175,1218,1221],below_depth:[40,41],benefit:1175,bernoul:[1144,1152,1192,1200],best:[903,963,1175],beta1:[1006,1008,1009,1013,1208,1209,1210],beta2:[1006,1008,1009,1013,1208,1209,1210],beta:[1161,1162],between:[40,41,42,771,772,903,906,1107,1111,1119,1121,1157,1159,1160,1208,1210],bia:[1144,1153,1154,1192,1193,1194,1195,1196,1197,1198,1199,1202],bias_initi:[1192,1193,1194,1195,1196,1197,1198,1199,1202],bilinear:[1022,1023],bilinear_resampl:[151,324,438,554,700,1022],bilinearli:[1022,1023],binari:[1157,1158],binary_cross_entropi:1157,bit:[367,771,772,773,879,890,1022,1024,1028,1175],bitwise_oper:[0,7,8],block:[1175,1218],bool:[15,18,19,40,41,42,43,775,776,785,786,827,828,829,847,860,864,868,873,876,878,879,889,903,905,912,913,926,929,933,934,939,946,948,956,959,963,984,986,1000,1001,1002,1006,1009,1010,1011,1012,1013,1014,1015,1017,1029,1032,1035,1059,1060,1061,1062,1063,1107,1108,1109,1111,1115,1116,1119,1120,1126,1128,1129,1130,1131,1132,1133,1134,1136,1137,1144,1152,1181,1182,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],both:[43,903,925],bottom:1175,boundari:[40,41,1119,1123],branch:[827,828],brittl:43,broadcast:[40,41,43,785,786,788,813,903,915,933,959,965,966,967,975,1029,1032,1035,1041,1047,1051,1126,1128,1129,1130,1131,1132,1133,1134],broadcast_to:[265,622,903],build:[1063,1175,1192,1203,1204,1205],build_mod:[1192,1203,1204,1205],builder:1175,built:[829,903,906,1063,1192,1203,1204,1205],builtin:43,builtin_ab:[220,788],builtin_add:[220,788],builtin_and:[220,788],builtin_bool:[220,788],builtin_contain:[220,788],builtin_deepcopi:[220,788],builtin_dir:[220,788],builtin_eq:[220,788],builtin_float:[220,788],builtin_floordiv:[220,788],builtin_g:[220,788],builtin_getattr:[220,788],builtin_getattribut:[220,788],builtin_getitem:[220,788],builtin_gt:[220,788],builtin_int:[220,788],builtin_invert:[220,788],builtin_l:[220,788],builtin_lt:[220,788],builtin_mul:[220,788],builtin_n:[220,788],builtin_neg:[220,788],builtin_or:[220,788],builtin_po:[220,788],builtin_pow:[43,220,788],builtin_radd:[220,788],builtin_rand:[220,788],builtin_rfloordiv:[220,788],builtin_rmul:[220,788],builtin_ror:[220,788],builtin_rpow:[220,788],builtin_rsub:[220,788],builtin_rtruediv:[220,788],builtin_rxor:[220,788],builtin_setitem:[220,788],builtin_some_op:43,builtin_sub:[220,788],builtin_truediv:[220,788],builtin_xor:[220,788],bypass:1218,cach:[829,845,903,916],cache_fn:903,calcul:[40,41,42,43,788,813,1041,1051],call:[43,829,873,903,974,982,999,1006,1010,1063,1107,1108,1111,1115,1192,1203,1204,1205,1208,1212,1218,1221],callabl:[40,41,827,828,829,838,839,873,903,916,929,931,963,999,1059,1060,1061,1062,1063,1107,1111,1112,1113,1115,1116,1144,1155],can:[43,829,871,872,873,903,976,1022,1024,1063,1175,1217,1218,1221],cancel_join_thread:1063,captur:1175,cast:[40,41,112,265,396,508,622,879,903,921,1022,1024,1028],catch_except:[903,929],categori:43,ceil:[265,622,903,906],cell:[1144,1154,1192,1201],certain:[40,41,903,906,961,962],chain:[40,41,1059,1060,1061,1214,1215],chang:[829,903,976,1063,1107,1109,1116,1175,1217],channel:[903,939,1022,1024,1025,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],check:[15,16,17,18,19,40,41,829,868,878,879,884,893,902,903,914,934,948,956,991,1001,1006,1012,1063,1107,1108,1115,1175,1218],check_nest:[1107,1115],check_shap:[40,41],check_submod_ret:[1204,1205],check_typ:[40,41],choic:[1175,1218],choleski:[704,1029],choos:[903,1002,1041,1047,1175],choose_random_framework:59,chosen:[40,41,903,906,1002],chunk:[829,871,872,873,1063],chunk_siz:[829,873,1063],circl:[1041,1042,1044],clark:1175,clear:[829,845,1063],clear_framework_stack:59,clear_mem_on_dev:[614,829],click:1175,clip:[40,41,265,622,903,919,920,965,967,1175],clip_matrix_norm:903,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,903],clipped_delta:1063,clone:[40,41,829,848,849,850,851,1063],clone_arrai:1063,clone_it:1063,clone_nest:1063,clonedit:1063,cloneditem:1063,clonednest:1063,close:[43,1022,1027,1041,1044,1063,1221],closest:[879,884],closest_valid_dtyp:879,code:[40,41,42,43,1175,1176,1217,1218],codebas:[829,871,872,1063,1175,1218,1221],collect:[15,40,41,788,827,829,879,903,1006,1022,1029,1037,1041,1063,1107,1119,1126,1136,1144,1157,1161,1178,1192,1206,1208],color:[40,41,42,1219,1220],column:[903,949],combin:[40,41,42,1022,1027,1175,1221],combined_batch_s:1063,come:1218,command:1175,commit:1221,common:[40,41,1041,1047],common_key_chain:[40,41],commun:[1175,1218],compar:[40,41,903,905,912,913],comparison_oper:[0,9,10],compat:[43,785,786,788,813,903,933,959,976,1041,1051,1175,1221],compil:[265,396,622,1164,1165,1169,1175,1204,1205,1208,1209,1210,1211,1212,1213],compile_graph:[1163,1175,1204,1205,1208,1212],compile_on_next_step:[1204,1205,1208,1209,1210,1211,1212,1213],complet:[40,41,1063],complex:[1218,1221],compon:[903,925],composit:43,comput:[40,41,829,873,903,919,920,926,927,933,959,964,1006,1008,1009,1010,1011,1013,1014,1015,1017,1019,1022,1025,1029,1030,1031,1032,1033,1035,1037,1038,1039,1040,1041,1042,1044,1046,1047,1049,1052,1053,1054,1055,1057,1107,1111,1126,1127,1128,1129,1130,1131,1132,1133,1134,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1157,1158,1159,1160],concat:[40,41,829,858,859,860,861,873,903,939,1063],concaten:[40,41,112,265,396,508,622,903,939,1063,1175],concatten:[40,41,829,858,859,860,861,873,1063],condit:[827,828,903,1002,1107,1115],conditon:[1107,1115],config:[40,41,1063],config_list:1063,configur:[40,41],conjunct:1218,connect:[1169,1192,1202,1203],consid:[40,41,1029,1035,1217,1221],consist:[40,41,829,861,1063,1126,1127,1204,1205,1218],constant:[829,838,839,903,922,1063,1107,1111,1157,1158,1159,1160,1161,1162,1183,1184,1188,1191,1204,1205,1206,1207,1218],constant_kwarg:1063,constant_pad:[265,508,622,903],constitu:[40,41],construct:[903,993,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],constructor:[40,41,42,903,907,1214,1215],consum:[829,1063],cont_feat_dim:[1144,1155],contaienr:[40,41],contain:[15,18,19,42,43,775,776,785,786,788,813,829,848,852,873,879,883,903,904,908,909,910,918,919,920,923,933,948,959,965,967,977,988,989,1006,1008,1009,1011,1013,1014,1015,1041,1051,1059,1060,1061,1062,1063,1119,1120,1126,1128,1129,1130,1132,1134,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[622,903],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[903,968,1144,1155,1192,1203],context_dim:[1192,1203],contextmanag:[59,60],continu:[43,1063,1218],contract:[40,41,1126,1127],contribut:[1175,1176],contributor:1175,control:1175,conv1d:[181,355,462,759,1144,1175,1192],conv1d_transpos:[181,355,462,759,1144],conv1dtranspos:[1175,1192],conv2d:[181,355,462,579,759,1144,1175,1192],conv2d_transpos:[181,355,462,759,1144],conv2dtranspos:[1175,1192],conv3d:[181,355,462,579,759,1144,1175,1192],conv3d_transpos:[181,355,462,759,1144],conv3dtranspos:[1175,1192],convent:[40,41,1126,1127],conver:[829,845,856,868,875,878,1063],convers:[16,17,18,19,40,41,1063,1175],convert:[15,16,17,18,19,40,41,43,829,856,857,879,885,891,892,903,985,996,997,1022,1024,1028,1029,1036,1063,1107,1109,1116,1175,1182],convert_dtyp:879,convolut:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],cool:43,cooler:43,coordin:[903,966,1041,1042,1044,1047],copi:[40,41,903,924,1063,1107,1109],copy_arrai:[622,903],copy_nest:1107,core:[788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1175],correct:[43,1175,1218],correctli:[40,41,1029,1032,1035,1041,1047,1126,1128,1129,1130,1131,1132,1133,1134],correspond:[40,41,43,788,813,903,921,1119,1120],cos:[715,903,939,1041,1042,1057,1218],cosh:[715,1041],cosin:[1041,1042,1043,1049,1050],cost:[1006,1008,1009,1011,1013,1014,1015,1059,1060,1061,1062],cost_fn:[1059,1062],could:1221,count:[40,41,785,786,1063,1126,1131,1133,1173],cprint:1219,cpu:[40,41,43,829,866,868,874,875,878,903,906,911,941,942,949,961,962,970,971,972,978,979,1004,1005,1063,1119,1120,1121,1122,1123,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1217,1218],creat:[40,41,829,838,839,903,906,911,940,941,942,949,961,962,970,971,972,978,979,995,1004,1005,1006,1019,1063,1119,1120,1121,1122,1123,1175,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],create_if_abs:[40,41],create_vari:1183,creation:[40,41,42,43],crop:[1022,1026],crop_siz:[1022,1026],cross:[265,622,903,1157,1158,1159,1160],cross_entropi:1157,cuda:[40,41,829,838,857,874,903,906,911,941,942,949,961,962,970,971,972,978,979,1004,1005,1063,1119,1120,1121,1122,1123,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],cumprod:[112,265,396,622,903],cumsum:[622,903],cumul:[903,926,927],current:[40,41,42,43,829,838,862,863,865,869,879,885,893,902,903,928,943,951,955,969,973,1063,1107,1108,1115,1175,1221],current_framework:59,current_framework_str:[622,903,1063],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1169,d_in:[1144,1145,1146,1147,1148,1149,1150],d_out:[1144,1145,1146,1147,1148,1149,1150],da_can_termin:1063,da_dim_s:[829,1063],da_direct:1063,da_tune_step:[829,1063],dai:1221,daniel:1175,data:[40,41,42,43,772,773,775,776,785,786,788,813,829,831,832,833,834,835,836,841,842,843,857,879,883,884,885,889,890,891,892,893,894,895,902,903,906,911,933,940,949,956,959,971,972,976,987,991,1004,1005,1006,1012,1020,1041,1051,1063,1144,1153,1175],data_format:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],data_type_funct:[367,369,370,771,772,773],dataset:[40,41],datatyp:[40,41,879,884,894,895],dcdw:[1006,1008,1009,1011,1013,1014],debug_info:1169,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1006,1013,1014,1208,1210,1211],decay_lambda:[1006,1013,1014,1208,1210,1211],decid:[40,41,1221],decompos:[1029,1030],decomposit:[1029,1030,1034],decor:43,decrement:[903,952],dedic:[1006,1020,1181,1182],deep:[40,41,1175],deep_copi:[40,41],deeper:[829,851,855,861,1063,1107,1116,1175],deepli:[1107,1109],def:[43,60,79,194,368,475,588,830,837,840,880,881,882,1007,1063,1067,1074,1170,1174,1175,1184,1187,1190,1217,1218,1221],default_dev:43,default_devic:829,default_dtyp:[43,879],default_float_dtyp:879,default_int_dtyp:879,default_key_color:[40,41,42],default_nod:1063,default_v:[903,929],defaultdevic:[829,830],defaultdtyp:[879,880],defaultfloatdtyp:[879,881],defaultintdtyp:[879,882],defer:43,defin:[43,903,925,970,972,1005,1119,1121],degre:[1041,1049,1055,1057],del:1063,delta:[1006,1008,1063,1169],delta_dim_s:1063,delta_percent_mem:1063,delta_sf:1063,delta_util:1063,demo:1175,denomin:[903,938,945,981,988,989,1161,1162,1206,1207],dens:[1192,1202],depend:[43,788,813,903,1002,1029,1034,1175],depth:[40,41,829,851,855,861,903,947,970,1063,1107,1116,1169,1173,1204,1205],depth_cutoff:[40,41],depthwis:[1144,1151,1192,1199],depthwise_conv2d:[181,355,462,579,759,1144],depthwiseconv2d:[1175,1192],deriv:[1006,1008,1009,1011,1013,1014,1015,1107,1109,1116,1175,1204,1208,1212,1214],descend:[1029,1034],descent:[1006,1011,1208,1213],describ:[40,41,1126,1127],design:[1175,1176],desir:[40,41,829,874,879,883,903,906,911,949,950,971,972,1004,1005,1022,1027,1063,1126,1128,1129,1130,1132,1134],desired_aspect_ratio:[1022,1027],desired_percent_increas:1063,detail:1221,detect:[40,41,1107,1108,1115],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,775,776,785,786,788,813,829,864,866,867,876,879,883,884,890,893,894,895,902,903,905,906,911,912,913,948,951,955,956,991,1001,1006,1012,1041,1051,1059,1060,1061,1062,1063,1144,1155],dev:[40,41,42,43,105,259,501,614,829,832,833,835,836,838,839,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,868,869,870,871,872,873,874,875,878,903,906,911,941,942,949,961,962,970,971,972,978,979,1004,1005,1006,1021,1119,1120,1121,1122,1123,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],dev_clon:[40,41,829],dev_clone_arrai:829,dev_clone_it:829,dev_clone_nest:829,dev_dist:[40,41,829],dev_dist_arrai:829,dev_dist_it:829,dev_dist_nest:829,dev_from_str:[43,105,259,501,614,829],dev_mapp:829,dev_str:[40,41],dev_to_str:[105,259,501,614,829],dev_unifi:829,dev_unify_arrai:829,dev_unify_it:829,dev_unify_nest:829,dev_util:829,devclonedit:829,devcloneditem:829,devclonednest:829,devdistit:829,devdistitem:829,devdistnest:829,develop:[1175,1218,1221],deviat:[40,41,1119,1122,1126,1132,1161,1162,1206,1207],devic:[21,40,41,43,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,903,906,911,940,941,942,949,961,962,970,971,972,978,979,1004,1005,1006,1021,1119,1120,1121,1122,1123,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],devmanag:[829,837],devmapp:[829,839],devmappermultiproc:829,diag:[1029,1034],diagon:[903,949],dict:[15,16,17,18,19,40,41,42,829,831,834,838,839,841,851,852,853,854,855,903,930,931,932,963,1059,1060,1061,1063,1107,1109,1110,1111,1114,1116,1181,1182],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,771,772,829,848,849,852,853,1063,1144,1153,1175,1218,1221],differenti:[1175,1218],dilat:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],dim:[40,41,43,903,970,1022,1023,1027,1029,1034,1063,1192,1203],dim_siz:[40,41,829,1063],dimens:[40,41,42,785,786,829,860,903,915,921,925,930,931,932,935,939,946,960,970,975,976,986,987,990,998,1000,1022,1026,1029,1032,1034,1035,1059,1060,1061,1062,1063,1119,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1141,1144,1145,1146,1147,1148,1149,1150,1151,1154,1157,1159,1160,1192,1193,1194,1195,1196,1197,1198,1199,1202,1203],dimension:[40,41,785,786,903,986,987,1029,1034],direct:1063,directli:[43,1107,1116,1218,1221],directori:[903,983,994],discret:[1157,1159],disk:[40,41,1022,1024],distanc:[903,906],distribut:[40,41,829,848,852,853,854,855,1063,1119,1120,1121,1122,1123,1144,1152,1192,1200,1204,1205],distribute_nest:1063,distributedarrai:[40,41],distrubt:[1157,1159],dive:[1175,1218],divid:[40,41,903,986,988,1041],dividend:[1041,1051],divis:[903,938,945,981,988,989,1006,1008,1009,1013,1041,1051,1208,1209,1210],divisor:[1006,1008,1009,1013,1041,1051,1208,1209,1210],doc:1175,docstr:43,doe:[40,41,43,903,906,986,1217],doesn:1175,doing:43,domain:[1041,1042],don:1175,door:1221,dot:[1029,1031,1144,1155,1156,1192,1203],down:1217,downscal:[903,919,920],drag:[1175,1221],draw:[1119,1120,1122,1123],drawn:[1119,1120,1121,1122,1123],drop:[1175,1221],dropout:[1144,1175,1192,1203],dropout_r:[1192,1203],ds_tune_step:829,dtype:[40,41,43,112,265,367,369,370,396,508,622,771,772,773,883,884,885,886,887,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,906,911,940,949,970,971,972,1004,1005],dtype_bit:[112,265,396,508,622,879],dtype_from_str:[43,112,265,396,508,622,879],dtype_in:[879,885,890,891,892,893,894,895,902],dtype_to_str:[112,265,396,508,622,879],duplic:[40,41],dure:[40,41,43,827,828,903,999,1006,1008,1009,1013,1059,1060,1061,1062,1204,1205,1208,1209,1210,1212],dynam:[827,828],each:[40,41,42,43,775,776,788,813,829,838,839,848,849,850,851,852,853,854,860,872,873,903,904,905,910,922,933,959,975,986,990,993,1003,1006,1009,1011,1013,1014,1015,1022,1025,1029,1034,1041,1044,1051,1053,1054,1063,1107,1111,1119,1120,1126,1127,1144,1145,1146,1147,1148,1149,1150,1151,1152,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1218],eager:1218,easi:1221,easili:1175,econom:1221,ecosystem:1175,edg:[903,918,922,1003],effect:[1006,1015],effective_grad:[1006,1015],effici:1221,einop:[40,41,903,930,931,932],einops_rearrang:[40,41,903],einops_reduc:[40,41,903],einops_repeat:[40,41,903],einstein:[40,41,1126,1127],einsum:[40,41,167,343,450,569,739,1126],either:[40,41,903,929,963,966,968,1059,1060,1061,1062,1063,1192,1203,1204,1205,1218],eleg:1063,element:[40,41,43,775,776,785,786,788,813,829,850,854,860,879,883,903,904,906,908,909,910,912,913,917,918,919,920,926,927,933,936,937,938,949,950,959,965,967,975,977,986,997,1002,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1063,1126,1127,1129,1131,1133,1136,1137,1138,1139,1140,1141,1142,1143,1144,1152,1192,1200],elementwis:[40,41],elementwise_affin:[1206,1207],elementwise_funct:[372,373,775,776],elemtn:[1119,1120],elif:1063,els:[903,914,929,934,1063],elsewher:[903,1002],emphas:1175,empti:[40,41,1063],enabl:[40,41,42,1175],encapsul:[771,773],encod:[903,939,1022,1024],end:[903,906,1175,1218],ensur:43,entir:[40,41,785,786,829,873,1063,1175,1192,1201],entri:[40,41,903,936,961,962,986,987],entropi:[1157,1158,1159,1160],enumer:1063,environ:1175,eps:[367,771,772],epsilon:[1006,1008,1009,1013,1157,1158,1159,1160,1161,1162,1206,1207,1208,1209,1210],equal:[40,41,775,776,903,905,912,913,922,986,1003,1041,1049,1055,1057,1119,1123],equality_matrix:[903,905],equat:[40,41,1126,1127],equival:[903,906,1041,1057],erf:[446,715,1041],error:[40,41,829,903,987,1041,1052,1063,1136,1137,1204,1205,1208,1212],essenti:43,etc:[40,41,43,829,874,903,906,911,941,942,949,961,962,970,971,972,978,979,1004,1005,1063,1119,1120,1121,1122,1123,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1221],evalu:[40,41,785,786,903,966,1107,1108,1115],even:1221,evenli:[40,41,903,906,961,962,986],everi:[903,905,1221],exact:[40,41],exampl:[43,827,828,903,918,990,1175,1217,1218,1221],example_input:[827,828],exc_tb:1063,exc_typ:1063,exc_val:1063,exce:[903,967],except:[40,41,44,47,785,786,903,906,914,921,929,999,1063],excess_s:1063,excit:[1175,1218],exclud:[59,61,903,906,1119,1123],exclus:[40,41,903,926,956,1006,1012,1119,1121],execut:[43,903,999,1218],execute_with_gradi:[148,319,433,549,694,1006,1175,1217],exist:[40,41,903,929,1063,1175,1208,1212,1221],exp:[715,1041],expand:[40,41,903,935,939],expand_dim:[40,41,265,622,903,1063],expect:[903,907],explain:1218,explicitli:[1192,1201,1203,1204,1205,1218],expon:[43,788,813,903,989],exponenti:[43,788,813,1041,1052,1053],expos:[903,911,923],express:[903,966],exsit:[40,41],extend:43,extra:[40,41,42,1006,1010],eye:[1029,1031],fabian:1175,fabio:1175,factor:[829,838,871,872,873,1006,1008,1009,1013,1014,1029,1034,1063,1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199,1208,1209,1210,1211],falck:1175,fall:[1204,1205,1208,1212],fallback_to_non_compil:[1204,1205,1208,1212],fals:[15,18,19,40,41,42,59,66,67,68,69,70,775,776,785,786,829,847,860,868,873,878,879,886,887,888,889,903,905,926,929,934,939,946,956,963,984,986,1000,1002,1006,1009,1010,1011,1012,1013,1014,1015,1029,1032,1035,1059,1060,1061,1062,1063,1107,1108,1109,1111,1115,1116,1126,1128,1129,1130,1131,1132,1133,1134,1163,1164,1165,1169,1173,1181,1182,1204,1205,1208,1209,1210,1211,1212,1213],fan_in:1183,fan_mod:1183,fan_out:1183,far:[1107,1108,1115,1217],faster:[827,828],favourit:[1175,1217],feasibl:1221,feat_dim:[1144,1155,1156],fed:[829,873,1063],feed:[829,873,1063],field:1221,file:[40,41,43,903,983,994,1204,1205],filepath:[40,41],fill:[40,41,903,940,971,1004,1119,1121],fill_valu:[903,940],filter:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199,1221],filter_s:[1192,1193,1194],filter_shap:[1192,1195,1196,1197,1198,1199],find:[40,41,1221],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,193,194,367,368,474,475,587,588,771],finish:[1175,1221],finit:[775,776],first:[40,41,827,828,829,860,903,912,921,925,933,959,961,962,990,992,1006,1010,1029,1034,1059,1060,1061,1062,1063,1107,1108,1115,1119,1125,1126,1131,1133,1192,1203,1204,1205,1208,1212,1218,1221],firstlayersiren:[1175,1183],firstli:[1218,1221],fist:[829,873,1063],fit:[40,41,903,975,1022,1027],fkt:1221,flag:[40,41,1006,1012],flat:[40,41,43,903,975,978],flat_list:[40,41],flatten:[40,41,903,939,975,1029,1035,1126,1128,1129,1130,1132,1134],flatten_key_chain:[40,41,1204,1205],flexibl:[1175,1218],flip:[40,41,112,265,396,508,622,903],float32:[43,879,883,891,892,903,906,911,949,971,972,1004,1005],float_dtyp:[879,887,897],float_img_to_uint8_img:1022,floor:[265,622,903,938,1063],floormod:[265,622,903],fluid:1221,fname:[1163,1165,1169,1204,1205],folder:[43,1175],follow:[40,41,43,771,773,829,873,903,952,953,954,988,989,1006,1009,1011,1013,1014,1015,1063,1107,1111,1116,1144,1155,1156,1175,1192,1202,1208,1212],followng:[771,772],fomaml_step:1059,forget:[1006,1008,1009,1013,1208,1209,1210],fork:[903,968],forkserv:[903,968,1063],form:[15,16,17,18,19,40,41,903,911,1006,1009,1011,1013,1014,1015,1107,1109,1116,1144],format:[40,41,43,829,847,879,883,885,889,903,906,911,949,971,972,1004,1005,1063,1126,1127,1175,1217,1218],format_fn:[40,41],format_key_chain:[40,41],forward:[1204,1205,1208,1212,1217],found:[40,41,42],fourier:[903,939],fourier_encod:903,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,161,162,163,164,165,166,168,169,170,171,172,173,174,177,179,180,182,183,184,185,186,187,188,194,195,196,199,209,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,329,330,331,332,334,335,336,339,340,341,342,344,345,346,347,348,349,350,351,354,356,357,358,359,360,361,362,368,369,370,373,383,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,439,440,441,443,444,447,449,451,452,453,454,455,456,457,460,461,463,464,465,466,467,468,469,475,476,477,480,490,502,503,504,505,506,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,550,551,552,553,555,556,557,559,560,561,565,566,567,568,570,571,572,573,574,575,576,580,581,582,588,589,590,593,603,615,616,617,618,619,620,621,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,698,699,701,702,703,705,706,707,708,709,710,712,713,714,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,733,734,735,736,737,738,740,741,742,743,744,745,746,749,750,751,752,753,754,755,757,758,760,761,762,763,764,765,766,772,773,776,786,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1162,1164,1165,1167,1168,1170,1174,1175,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1220,1221],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1063,framewrk:[903,968],freeli:43,frequenc:[903,939],from:[40,41,42,43,785,786,829,838,839,873,879,885,903,929,936,941,942,949,976,987,995,1002,1006,1009,1013,1022,1026,1059,1060,1061,1062,1063,1107,1109,1116,1119,1120,1121,1122,1123,1126,1131,1133,1144,1152,1155,1175,1181,1182,1192,1200,1203,1208,1212,1217,1218],from_cal:[1204,1205],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[112,265,396,508,622,771,772,903,1175],full_matric:[1029,1034],fulli:[43,1175,1192,1202,1203,1217],func:[40,41,827,828,829,873,903,916,1006,1010,1063],further:1221,furthermor:1221,futur:1221,gain:1183,gamma:[1161,1162],gather:[40,41,112,265,396,508,622,903,942],gather_nd:[40,41,112,265,396,508,622,903],gauss:[1041,1052],gaussian:[1136,1137],geglu:[1175,1178],gelu:[353,459,748,1136,1175,1178],gener:[23,40,41,43,827,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1012,1119,1121,1123,1124,1175,1208,1212],geometr:[903,939],get:[40,41,771,772,773,829,838,839,847,862,863,868,872,875,878,879,889,890,903,907,943,944,945,974,1063,1173,1175,1192,1201,1221],get_all_arrays_in_memori:903,get_all_arrays_on_dev:829,get_framework:59,get_initial_st:[1192,1201],get_min_bas:903,get_min_denomin:903,get_mod_kei:[1204,1205],get_num_dim:[622,903],get_param:1169,get_param_recurs:1169,get_referrers_recurs:903,getfullargspec:1063,gist:1175,give:[903,910,976,1218],given:[40,41,43,829,862,868,871,872,873,875,878,879,883,903,906,910,911,918,926,927,936,942,961,962,971,972,975,978,979,986,993,998,1000,1004,1005,1006,1008,1009,1011,1013,1014,1015,1029,1031,1036,1041,1042,1063,1107,1112,1113,1119,1122,1123,1125,1126,1129,1131,1132,1133,1134,1144,1145,1146,1147,1148,1149,1150,1151,1181,1182,1221],global:[40,41,42,829,838,839,846,871,872,873,879,886,887,888,903,928,944,945,974,980,981,982,988,989,1006,1021,1063,1161,1162,1167,1168,1175,1206,1207],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1175,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],got:1175,gpu0:43,gpu2:43,gpu:[829,864,867,1063],gpu_is_avail:[829,1063],grad:[1175,1208,1212,1217],gradient:[25,40,41,829,873,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1025,1059,1060,1061,1062,1175,1208,1209,1210,1211,1212,1213,1217,1221],gradient_descent_upd:[1006,1059,1060,1061,1062],gradient_imag:[151,324,438,554,700,1022],gradienttrack:[1006,1007],graph:[1006,1009,1011,1013,1014,1015,1163,1164,1165,1170,1175,1204,1205],graph_compil:[1163,1164,1165,1166,1167,1168,1169,1173],greater:[40,41,903,906,937,987,1119,1123],green:[40,41,42,1219,1220],grid:[903,966],group:[1022,1027],guid:[1175,1176,1221],gym:1175,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1221,half:[903,906,1063,1119,1123],hand:1175,handl:[40,41,42,43,827,828,829,845,847,856,857,868,875,878,1006,1009,1011,1013,1014,1015,1063,1208,1209,1210,1211,1212,1213],has:[40,41,43,903,990,1041,1046],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,903],hasattr:1063,have:[40,41,43,771,772,775,776,785,786,788,813,903,921,925,930,931,932,933,940,959,990,1006,1012,1020,1029,1034,1041,1051,1063,1175,1217,1218],hdf5:[40,41,1204,1205],head:[1144,1155,1192,1203],head_dim:[1192,1203],height:[1022,1027],height_cutoff:[40,41],help:[59,367,829,841,842,843,844,879,1006,1169,1173,1175,1183,1185,1186,1188,1189,1191],helper:1175,here:[43,1175],hidden:[1144,1154,1192,1201],hierarch:[903,923],hierarchi:[40,41],high:[40,41,1119,1121,1123],higher:[1006,1009,1011,1013,1014,1015,1029,1034],highest:[1119,1121],highest_util:1063,highest_util_nod:1063,highli:1175,highlight:1221,highlight_subgraph:[1163,1165,1169],hint:43,hkt:1221,hold:[879,883,903,906,911,978,979],host:1175,hot:[903,970],how:[1175,1192,1203,1204,1205,1218,1221],howev:[43,1218],http:1221,hyperbol:[1041,1043,1045,1048,1050,1056,1058,1136,1143],hypothet:1221,icon:1175,idea:1175,ident:[40,41,43,112,265,396,508,622,903],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[771,772],if_exist:[40,41],ignor:[40,41,1208,1212],ignore_key_error:[40,41],ignore_miss:[1208,1212],ignore_non:[40,41],iinfo:[78,193,367,474,587,771],imag:[27,903,960,1023,1024,1025,1026,1027,1028,1144,1145,1146,1147,1148,1150,1151,1175,1221],image_dim:[1022,1026],imkkhk:1221,immedi:[1175,1218,1221],implement:[43,788,813,1175,1218,1221],in_featur:[1144,1153],includ:[40,41,43,785,786,903,906,948,988,989,1001,1107,1108,1119,1123,1192,1202,1203,1206,1207,1217],include_deriv:[1107,1109,1116],include_empti:[40,41],include_gener:[1163,1164,1165,1169,1204,1205],include_inf:[40,41,903,948,1001],include_nest:[1107,1108],include_self:[40,41],inclus:[1119,1121],incom:[1144,1153],increas:[829,851,855,861,903,922,935,1003,1063,1107,1116],increasingli:1221,increment:[903,953,1063],increment_param_count:1169,inde:1175,indent:[40,41,42],independ:[1119,1120],index:[40,41,903,908,909,941,942,966,987,990,1107,1110,1112,1113,1114,1117],index_nest:1107,indic:[40,41,903,908,909,910,941,942,950,970,978,979,1107,1108,1110,1112,1113,1114,1115,1117,1118,1119,1120,1136,1141,1144,1145,1146,1147,1148,1149,1150,1151,1161,1162,1192,1193,1194,1195,1196,1197,1198,1199,1204,1205],indices_wher:[112,265,396,622,903],inevit:1221,inf:[40,41,903,948,957,1001,1041,1046],infer:[827,828,903,936,946,949,976,984,1022,1026,1218,1221],infin:[775,776,903,957],inform:[771,772,773,1006,1017],init_c:[1144,1154],init_h:[1144,1154],init_on_first_step:[1208,1212],initi:[40,41,42,59,367,829,841,842,843,844,879,1006,1063,1144,1154,1169,1173,1175,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1208,1212],initialz:[1204,1205],inner:[1059,1060,1061,1062],inner_batch_fn:[1059,1060,1061],inner_batch_shap:[1144,1153],inner_cost_fn:[1059,1060,1061],inner_grad_step:[1059,1060,1061,1062],inner_learning_r:[1059,1060,1061,1062],inner_optimization_step:[1059,1060,1061,1062],inner_v:[1059,1060,1061],inp:1063,inplac:[40,41,903,914,951,955,991,1006,1009,1011,1013,1014,1015,1181,1182,1208,1209,1210,1211,1212,1213],inplace_arrays_support:903,inplace_decr:[112,265,396,508,622,903],inplace_incr:[112,265,396,508,622,903],inplace_oper:[0,11,12],inplace_upd:[40,41,112,265,396,508,622,903,1181,1182],inplace_variables_support:903,input:[15,18,19,40,41,42,43,775,776,785,786,827,828,829,838,839,846,847,848,851,852,855,861,873,874,879,883,884,886,887,888,889,890,894,895,903,904,905,908,909,910,912,913,914,915,917,918,919,920,921,922,924,926,927,929,930,931,932,933,934,935,936,937,938,939,946,948,949,950,952,953,954,956,957,958,959,960,964,965,966,967,975,977,984,985,987,990,991,992,993,995,996,997,998,1000,1001,1003,1006,1010,1012,1017,1021,1022,1023,1024,1025,1026,1028,1029,1032,1034,1035,1037,1038,1039,1040,1041,1043,1045,1046,1048,1049,1050,1051,1055,1056,1057,1058,1059,1060,1061,1062,1063,1119,1120,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1161,1162,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1218],input_ax:[829,873,1063],input_channel:[1192,1193,1194,1195,1196,1197,1198,1201,1202],input_queu:1063,inputs_split:1063,insert:[903,935],insid:43,inspect:1063,inspir:1221,instal:1175,instanc:[15,16,17,18,19,40,41,43,788,813,829,838,1063,1181,1182,1214,1215],instead:[40,41,1126,1128,1129,1130,1131,1132,1133,1134,1221],int32:43,int64:[879,883,903,906,911,949,971,972,1004,1005],int_dtyp:[879,888,898],integ:[40,41,771,773,785,786,879,895,903,906,917,937,977,986,1029,1035,1119,1121,1124],integr:1175,intend:43,inter:1175,interchang:[40,41,903,992],interest:1175,interfac:[903,911,1218],intermedi:[40,41],intern:[40,41,829,1006,1020,1063,1107,1108,1115,1116,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1214,1215],interpol:[903,960],intersect:[1041,1042],interv:[40,41,785,786,903,906,918,961,962,1041,1044,1119,1123],introduc:1221,inv:[704,1029,1221],invalid:[785,786],invalid_dtyp:879,invers:[1029,1031,1033,1041,1042,1043,1044,1045,1046,1048,1221],invert:[1029,1031,1033],invest:1221,invoc:[827,828],irrespect:1175,is_al:1063,is_arrai:[112,265,396,508,622,903,1063],is_float_dtyp:879,is_int_dtyp:879,is_mean:1063,is_sum:1063,is_var:[1169,1173],is_vari:[148,319,433,549,694,1006],isfinit:[83,198,372,479,592,775],isinf:[265,508,622,903],isinst:1063,isnan:[265,508,622,903],isnumer:1063,item:[15,19,40,41,788,800,801,829,838,839,841,848,850,852,854,860,879,886,903,923,947,988,989,1063,1107,1111,1112,1113,1116,1117,1118,1175,1204,1205,1217],iter:[15,16,17,18,19,40,41,42,827,828,829,832,833,835,836,838,839,842,843,850,852,853,854,855,860,873,903,905,915,921,922,936,949,966,971,975,976,979,984,986,990,993,998,1003,1004,1063,1107,1108,1109,1111,1115,1116],iterbal:[829,850,854,860,1063],its:[829,873,903,910,949,976,992,998,1063,1175],itself:[43,1107,1116],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,367,369,370,372,373,771,772,773,775,776,785,786,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1173,1175,1176,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1219,1220],ivy_backend:[40,41],ivy_bay:1221,ivyfcmodel:1217,ivyh:[40,41,42],ivymodul:[178,756],jame:1175,jax:[1006,1012,1175,1221],jax_concat:1175,jnp:1175,join:[40,41,903,921,990,1063],journal:1175,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1175,1192,1201,1221],kaimingnorm:[1183,1187],kalman:1221,kalman_filt:1221,kalman_filter_step:1221,kalman_filter_upd:1221,keep:[40,41,829,874,903,1000,1063,1175,1221],keep_inner_v:[1059,1060,1061],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1059,1060,1061],keepdim:[40,41,785,786,903,1000,1029,1032,1035,1126,1128,1129,1130,1131,1132,1133,1134],kei:[15,16,17,40,41,42,788,793,829,841,903,923,1059,1060,1061,1063,1107,1110,1114,1144,1155,1156,1175,1181,1182,1192,1203,1208,1212],kept:[40,41,42,1059,1060,1061],kera:1221,kernel:[1144,1154],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,829,838,839,851,855,861,903,907,930,931,932,963,1063,1107,1111,1204,1205],keyword_color_dict:[40,41,42],kind:[771,772,773,1221],kwarg:[15,16,17,40,41,42,59,63,829,838,851,855,861,903,963,1063,1163,1164,1165,1169,1181,1182,1204,1205],kwarg_stateful_idx:[1163,1164,1165,1169,1204,1205],kwargs_clon:1063,kwargs_dist:1063,kwargs_uni:1063,label:[1157,1158,1159,1160],lamb:[1006,1013,1175,1208],lamb_upd:1006,lambda:[1063,1208,1211,1213,1217],lar:[1006,1013,1014,1175,1208],larger:[771,772,903,918],largest:[40,41,771,772,773,903,908,937],lars_upd:1006,last:[40,41,785,786,903,906,925,960,986,990,1029,1032,1034,1126,1131,1133,1136,1141,1144,1154,1192,1202],later:[40,41,903,916],latest:[1192,1201],layer:[1006,1009,1011,1013,1015,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1161,1162,1175,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1221],layer_norm:1161,layernorm:[1175,1206],layerwis:[1006,1014,1208,1211],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1107,1108,1115],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1136,1137,1138],leaky_relu:[748,1136],learn:[1006,1009,1011,1013,1014,1015,1059,1060,1061,1062,1119,1125,1175,1208,1209,1210,1211,1212,1213,1218,1221],learnabl:[1161,1162,1206,1207],leav:[15,18,19,40,41,1107,1108,1109,1115,1116],left:[40,41,1029,1032,1035,1126,1128,1129,1130,1131,1132,1133,1134,1175],leftmost:[40,41],len:1063,length:[40,41,42,903,906,976,987,998],lenton2021ivi:1175,lenton:1175,less:[40,41,43,903,917,1063,1119,1123],less_equ:903,less_util_node_str:1063,let:[1218,1221],level:1175,librari:[1175,1217,1221],lightweight:1175,like:[43,1006,1012,1119,1123,1175,1217,1218,1221],limit:[40,41,42,771,772,773,903,918,919,920],linalg:[29,1030,1031,1032,1033,1034,1035,1036,1175],linear0:[1175,1217],linear1:1175,linear2:1217,linear:[903,939,960,1029,1136,1137,1138,1139,1144,1152,1175,1192,1193,1194,1195,1196,1197,1198,1199,1217],linear_resampl:[112,265,396,508,622,903],linearli:[903,939],link:1175,linspac:[112,265,396,508,622,903,906],list:[15,18,19,40,41,43,785,786,829,838,839,848,849,851,852,853,855,858,859,873,903,906,911,913,966,985,986,995,1000,1059,1060,1061,1063,1107,1108,1109,1111,1115,1116,1144,1145,1146,1147,1148,1149,1150,1151,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199],list_join:[40,41,42],list_stack:[40,41],littl:1218,load:[40,41],loaded_kwarg:1063,loader:1175,local_set:[903,947],locat:[43,903,957,958,1119,1120],log:[715,903,962,1041,1063,1157,1158,1159,1160,1175],log_all_op:1169,log_global_inference_abs_tim:[1166,1175],log_global_inference_rel_tim:[1166,1175],logarithm:[1041,1054],logic:[31,785,786,1038,1039,1040,1175],logical_and:[333,711,1037],logical_not:[333,711,1037],logical_or:[333,711,1037],logit:[1157,1160],logspac:[112,265,396,508,622,903],look:[43,1218,1221],loop:[1059,1060,1061,1062],loss:[1158,1159,1160,1175,1217],loss_fn:[1175,1217],lot:1218,low:[40,41,1119,1121,1123],lower:[40,41,903,965,1119,1123],lower_depth:[1204,1205],lowest:[15,18,19,40,41,1107,1116,1119,1121],lstm:[1144,1154,1175,1192],lstm_updat:[43,1144],machin:[771,772,773,1119,1125,1175,1218,1221],mai:[903,906,929,933,959,1175,1218,1221],main:[903,949,1175],mainli:1175,make:[43,829,1063,1175,1218],maml:[1059,1060,1061],maml_step:1059,manag:[829,1063],mani:[40,41,43,903,986,1175],manner:[15,18,19,40,41,43,1107,1116],manual:[1107,1108,1115,1221],map:[40,41,42,829,838,903,957,958,1063,1107,1112,1113,1116,1192,1203,1217],map_cont:[40,41],map_nest_at_index:1107,map_nest_at_indic:1107,map_sequ:[40,41],mapper:[829,838,839,1063],mask:[1144,1155,1156],match:[40,41,903,963],match_kwarg:903,math:[33,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1063,1175],mathbb:[1029,1036],mathbf:[1029,1036],matmul:[43,265,508,622,903,1221],matplotlib:1218,matric:[1144,1153],matrix:[40,41,903,905,919,964,1029,1030,1031,1032,1033,1036,1144,1153,1192,1202],matrix_norm:[40,41,155,328,442,558,704,1029],matter:1175,max:[40,41,367,771,772,773,903,919,920,931,965,978,979,1063,1126,1128,1208,1210],max_batch_s:[40,41],max_chunk_s:[829,873,1063],max_depth:[40,41,829,833,836,843,851,855,861,903,947,1063,1107,1116],max_dev_dim_step_ratio:829,max_freq:[903,939],max_length:[40,41],max_node_dim_step_ratio:1063,max_norm:[40,41,903,919,920],max_split_factor_step_s:[829,1063],max_trust_ratio:[1006,1013,1208,1210],maxim:[1175,1218,1221],maximis:1175,maximum:[40,41,42,622,829,851,855,861,873,903,908,918,919,920,939,1006,1013,1063,1107,1116,1126,1128],mayb:[15,18,19],mdi:1063,mean:[40,41,829,858,859,860,861,873,903,931,1059,1060,1061,1062,1063,1107,1111,1119,1122,1126,1129,1132,1134,1183,1217,1221],measur:[1144,1155,1192,1203],mech:1175,mechan:[1175,1221],medic:1221,memori:[829,845,868,873,875,878,1063,1144,1154,1175],meshgrid:[265,622,903],messag:[1219,1220],meta:[35,1060,1061,1062,1175],method:[40,41,42,43,903,911,923,966,978,979,1006,1013,1014,1063,1107,1108,1115,1116,1175,1192,1203,1204,1205,1218],might:[903,929,1221],min:[40,41,367,771,772,773,903,931,967,978,979,988,1063,1126,1130],min_bas:[903,989],min_denomin:[903,988],min_dev_dim_s:829,min_node_dim_s:1063,min_sf_tune_step:[829,1063],min_unit_dev_tune_step:829,min_unit_node_tune_step:1063,mind:1175,mini:[1161,1162,1206,1207],minimum:[40,41,622,829,879,883,903,906,909,911,918,944,945,980,981,988,989,1063,1126,1130],miss:[1208,1212],ml_framework:[903,906],mod:[903,938],mod_depth:[1204,1205],mod_height:[1204,1205],mod_with_top_mod_key_chain:[1204,1205],mode:[40,41,827,828,829,858,859,860,861,873,1029,1034,1063,1218],model:[1175,1217],modul:[40,41,42,59,903,968,1063,1175,1176,1178,1179,1180,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1214,1215,1221],moment:[1006,1008,1009,1013,1208,1209,1210],more:[43,903,990,1063,1175,1218,1221],more_util_node_str:1063,most:[40,41,43,1175,1221],move:[40,41,43,829,874,1063],much:[1175,1221],multi:[903,968,1144,1155,1192,1203],multi_head_attent:1144,multi_index_nest:1107,multi_map:[40,41],multi_nod:1063,multidev:[829,840,841,842,861],multidevcontain:[40,41],multidevic:[829,838],multidevit:[829,832,835,838,839,843],multidevitem:[829,831,834],multidevnest:[829,833,836],multiheadattent:[1175,1192],multinod:[1063,1067],multinodecontain:1063,multinodeit:1063,multinodeitem:1063,multinodenest:1063,multinomi:[160,338,448,564,732,1119],multipl:[40,41,785,786,903,963,986,1029,1031,1126,1128,1129,1130,1131,1132,1134,1161,1162,1192,1202,1218],multipli:[40,41,903,926,1126,1131],multiprocess:[40,41,42,622,829,838,903,1063],must:[40,41,42,43,775,776,785,786,788,813,829,858,859,860,861,873,903,906,921,923,925,933,959,965,967,979,990,1041,1047,1051,1063,1119,1124,1208,1212],mutabl:[1107,1109,1116],mutlidevic:[829,838],mutlinod:1063,mw_tm1:[1006,1009,1013],mx_concat:1175,mxnet:[43,1175,1221],my_func:43,mymodel:1175,name:[827,828,1163,1164,1165,1169,1217],namespac:[43,1218],nan:[40,41,775,776,903,948,958,1001],nativ:[15,17,18,19,40,41,43,829,845,847,856,857,868,875,878,879,884,891,892,1063,1175,1176,1181,1182],native_modul:[1181,1182],native_module_class:[1181,1182],nativearrai:[15,18,19,43,771,772,773,775,776,785,786,788,813,829,847,873,874,879,883,889,894,895,903,904,905,906,908,909,910,911,912,913,915,917,918,919,920,921,922,924,925,926,927,930,931,932,933,935,936,937,938,939,941,942,946,948,949,950,957,958,959,960,961,962,964,965,966,967,970,971,972,975,976,977,978,979,984,986,987,990,992,993,995,996,997,998,1000,1001,1002,1003,1004,1005,1063,1107,1109,1116],natur:[1041,1054,1221],ncdhw:[1144,1149,1150,1192,1197,1198],nchw:[1144,1147,1148,1151,1192,1195,1196,1199],ncw:[1144,1145,1146,1192,1193,1194],ndarrai:[43,367,369,370,372,373,903,996],ndhwc:[1144,1149,1150,1192,1197,1198],nearest:[903,977],need:[43,903,919,920,1144,1146,1148,1150,1175,1192,1194,1196,1198,1221],neg:[40,41,775,776,785,786,1126,1131,1133,1136,1138],negative_slop:1183,neither:1063,nest:[15,16,17,18,19,40,41,42,829,851,855,861,903,911,995,1059,1060,1061,1063,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1204,1205,1208,1209,1210,1211,1212,1213],nested_indices_wher:1107,nested_map:[1063,1107],network:[1144,1153,1175,1176,1178,1192,1204,1205,1221],neural:[1144,1175,1178,1192,1217],new_node_percent_mem:1063,new_node_util:1063,new_node_utils_kei:1063,new_std:[1161,1162,1206,1207],newli:[827,828,903,915,916],newlin:[40,41,42],newshap:[903,915,976],next:[771,772,1063,1204,1205,1208,1209,1210,1211,1212,1213],nhwc:[1144,1147,1148,1151,1192,1195,1196,1199],node:[40,41,1107,1108,1115],node_clon:1063,node_dist:1063,node_dist_arrai:1063,node_dist_it:1063,node_in:1063,node_mapp:1063,node_str:1063,node_to_str:1063,node_util:1063,nodedistit:1063,nodedistitem:1063,nodedistnest:1063,nodemanag:[1063,1074],nodemapp:1063,nodemappermultiproc:1063,noinspect:[43,830,880,881,882,1007,1063,1170],non:[40,41,785,786,827,828,879,893,1204,1205,1208,1212,1218],none:[40,41,42,43,59,61,64,771,772,773,785,786,827,828,829,838,839,845,846,871,872,873,874,879,886,887,888,903,906,911,928,929,934,936,940,941,942,947,949,951,952,953,954,955,961,962,968,970,971,972,975,978,979,980,981,986,987,988,989,998,999,1004,1005,1006,1009,1011,1013,1014,1015,1021,1022,1026,1029,1032,1035,1059,1060,1061,1062,1063,1107,1108,1111,1115,1116,1119,1120,1121,1122,1123,1126,1128,1129,1130,1131,1132,1133,1134,1144,1146,1148,1150,1153,1154,1155,1156,1161,1162,1163,1164,1165,1169,1173,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],norm:[40,41,903,919,920,1029,1032,1035,1162,1175,1207,1208,1210],normal:[1119,1122,1161,1162,1206,1207],normalized_idx:[1161,1162],normalized_shap:[1206,1207],notat:[40,41,1126,1127],note:43,noth:[40,41,1218],notimplementederror:1063,now:[40,41,829,874,903,904,1063,1175,1192,1203,1204,1205,1217,1218,1221],np_concat:1175,np_finfo:367,ns_tune_step:1063,num:[903,961,962],num_arrai:[40,41],num_arrays_in_memori:903,num_arrays_on_dev:829,num_band:[903,939],num_channel:[1192,1199],num_chunk:1063,num_chunks_floor:1063,num_class:[1119,1120],num_cpu_cor:829,num_gpu:[105,829,1063],num_head:[1144,1155,1192,1203],num_kei:[1144,1155,1156],num_lay:[1192,1201],num_or_size_split:[40,41,903,986],num_output:1063,num_queri:[1144,1155,1156],num_sampl:[903,960,1022,1023,1119,1120],num_task:[1059,1060,1061,1062],number:[40,41,42,771,772,773,785,786,827,828,829,865,866,867,879,890,894,895,903,906,918,922,935,939,946,949,958,960,961,962,965,969,975,986,993,997,1001,1003,1029,1034,1059,1060,1061,1062,1063,1119,1120,1124,1126,1128,1129,1130,1132,1134,1144,1155,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1218,1221],numer:[43,775,776,788,813,903,944,945,980,981,988,989,1041,1051,1183],numhead:[1144,1155],numpi:[40,41,367,369,370,372,373,903,996,1029,1034,1126,1127,1175,1217,1218,1221],nwc:[1144,1145,1146,1192,1193,1194],obj:[40,41],object:[40,41,42,59,367,771,772,773,829,879,883,903,906,911,1006,1107,1110,1112,1113,1114,1117,1118,1119,1125,1169,1173,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205],object_in:[903,911],observ:1063,occupi:[771,772,773,903,978,979],off:[903,906],offer:1175,offset:[1161,1162],often:1218,old:[40,41],on_init:[1192,1203,1204,1205],onc:[829,873,1063,1119,1120,1175],one:[40,41,43,829,858,859,860,861,873,879,885,903,949,963,970,978,979,987,990,1029,1032,1035,1063,1126,1127,1128,1129,1130,1131,1132,1133,1134,1175,1218,1221],one_hot:[112,396,508,622,903],onearrai:[903,935],ones:[40,41,112,265,396,508,622,903,949,970,972,1175],ones_lik:[112,265,396,508,622,903],ongo:43,onli:[40,41,43,829,1063,1107,1108,1109,1115,1208,1209,1210,1211,1212,1213,1217,1218],onlin:1175,onto:[829,858,859,874,1063,1107,1111,1116],oom:[829,1063],open:[903,906,1119,1123,1175,1221],opencv:1218,oper:[40,41,903,914,930,931,932,961,962,991,1006,1009,1011,1013,1014,1015,1037,1038,1039,1040,1144,1145,1146,1147,1148,1149,1150,1151,1153,1175,1176],operand:[40,41,1126,1127],oppos:[903,939],optim:[829,1006,1009,1011,1013,1014,1015,1059,1060,1061,1062,1063,1175,1209,1210,1211,1213,1217,1221],optimizer_upd:1006,option:[15,18,19,40,41,42,43,785,786,827,828,829,838,839,847,851,852,853,854,855,858,859,860,861,868,871,872,873,874,878,879,884,889,893,902,903,905,906,908,909,910,911,919,920,921,926,928,929,936,939,940,941,942,946,948,949,956,960,961,962,963,966,968,970,971,972,975,978,979,982,984,986,987,988,989,990,998,1000,1001,1004,1005,1006,1009,1011,1012,1013,1014,1015,1017,1022,1026,1029,1032,1035,1059,1060,1061,1062,1063,1107,1108,1109,1111,1115,1116,1119,1120,1126,1128,1129,1130,1131,1132,1133,1134,1136,1137,1141,1144,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1218],ord:[903,936,1029,1034],order:[40,41,42,43,903,910,1006,1009,1011,1013,1014,1015,1029,1032,1035,1059,1060,1061,1214,1215],ordered_node_util_kei:1063,org:1221,organ:43,origin:[40,41,42,903,972,976,1005,1029,1032,1035],other:[40,41,43,788,790,791,796,798,799,803,805,806,807,808,809,811,813,814,815,816,817,818,820,821,822,824,825,826,827,828,903,905,906,949,1006,1010,1119,1123,1175,1217,1218,1221],other_i:[43,788,813],otherwis:[15,16,17,18,19,40,41,775,776,785,786,829,846,879,886,887,888,903,914,998,999,1002,1006,1012,1017,1021,1059,1060,1061,1063,1126,1128,1129,1130,1132,1134],our:[1175,1221],out:[903,906,1041,1046,1144,1152,1154,1175,1192,1200],out_feat_dim:[1144,1155],out_featur:[1144,1152,1153],out_i:[775,776],outdat:1221,outer:[1059,1060,1061,1062],outer_batch_fn:[1059,1060,1061],outer_batch_shap:[1144,1153],outer_cost_fn:[1059,1060,1061],outer_v:[1059,1060,1061],outlin:1218,output:[40,41,43,829,838,839,873,903,906,916,940,949,975,993,1006,1010,1041,1047,1063,1119,1121,1122,1123,1144,1146,1148,1150,1152,1154,1155,1156,1175,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203],output_ax:[829,873,1063],output_axi:1063,output_channel:[1192,1193,1194,1195,1196,1197,1198,1201,1202],output_connected_onli:[1163,1165,1169,1204,1205],output_queu:1063,output_shap:[1144,1146,1148,1150,1192,1194,1196,1198],outsid:[903,918],over:[40,41,785,786,903,936,1029,1032,1035,1119,1123,1126,1128,1129,1130,1132,1134,1161,1162,1206,1207],overal:1218,overflow:[903,906],overhead:1218,overrid:[903,970,972,1005],overriden:[1208,1212],overwrit:[40,41,829,873,1063],overwrite_at_key_chain:[40,41],own:[1175,1218,1221],packag:[43,1218],pad:[903,922,939,1003,1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],pad_width:[903,922,1003],page:1175,pair:[1144,1156],parallel:[829,838,839,1063],parallelis:[829,838,839,1063],param:[40,41,42,43,829,873,903,904,941,942,970,971,1004,1063,1174,1175,1204,1205,1217],paramet:[15,16,17,18,19,40,41,42,771,772,773,775,776,785,786,788,813,827,828,829,838,839,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,868,871,872,873,874,875,878,879,883,884,885,889,890,891,892,893,894,895,902,903,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,924,925,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,946,948,949,950,952,953,954,956,957,958,959,960,961,962,963,964,965,966,967,968,971,972,975,976,977,978,979,980,981,982,984,985,986,987,988,989,990,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1017,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],parameter:[1119,1122,1123],params_all_empti:1169,pardo:1175,pars:[903,923],part:[1006,1009,1011,1013,1014,1015,1041,1046,1175,1204,1205,1218],partial:[40,41,1204,1205],particl:1221,particular:1221,pass:[40,41,42,829,838,873,879,884,903,916,1006,1020,1059,1060,1061,1063,1181,1182,1204,1205,1208,1212,1214,1215],pattern:[40,41,903,930,931,932],per:[829,1063,1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],percent_used_mem_on_dev:829,percent_used_mem_on_nod:1063,percentag:[829,868,1063],perf_count:1063,perform:[40,41,43,785,786,829,903,908,909,910,926,930,931,932,952,953,954,960,961,962,1006,1009,1011,1013,1014,1015,1022,1023,1059,1060,1061,1062,1063,1107,1112,1113,1126,1128,1129,1130,1131,1132,1133,1134,1136,1141,1144,1152,1154],permissable_step:1063,permit:43,permut:[903,992,998],perpendicular:[903,925],person:1175,physci:1221,pickl:[40,41,1063],pickle_filepath:[40,41],pid:1169,pinv:[328,704,1029],pip:1175,pipelin:1217,pkk:1221,pkkm1:1221,pkm1km1:1221,place:[40,41,43,829,874,903,935,940,952,953,954,1063,1208,1209,1210,1211,1212,1213],placehold:[1107,1116],point:[771,772,879,894,903,906,1041,1051],popul:[40,41,1119,1120],popular:1221,population_s:[1119,1120],portabl:[1175,1176],posit:[15,16,17,771,772,775,776,829,851,855,861,903,904,906,935,939,1063,1119,1124,1181,1182],possibi:[40,41],possibl:[903,963,995,1022,1027,1221],post:[1161,1162],post_shap:[40,41],power:[43,788,813,819,903,944,980,989,1183],practic:1175,pre:[829,1063,1175],pre_shap:[40,41],precis:[771,772],pred:[1157,1158,1159,1160],predict:[1157,1158,1159,1160,1221],preprint:1175,present:[40,41],preserv:[40,41,42,903,936,1006,1017],preserve_typ:[40,41,1006,1017],press:1175,prevent:[43,1006,1008,1009,1013,1063,1208,1209,1210],previou:[1006,1009,1013],previous:[903,916],prime:1175,print:[40,41,42,829,869,903,973,1175,1217],print_all_arrays_in_memori:903,print_all_arrays_on_dev:829,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1208,1212],prob:[1119,1120,1144,1152,1192,1200],probabl:[1119,1120,1144,1152,1192,1200],problem:[43,1221],process:[43,829,838,839,868,878,903,968,1063],process_specif:[829,868,878,1063],prod:[40,41,903,931],produc:[829,838,839,1063],product:[40,41,903,925,926,964,1126,1127,1144,1155,1156,1192,1203],profil:[105,259,394,501,614,829,1063],project:[1175,1217,1218,1221],promot:[43,788,813,1041,1051],prompt:1175,properli:43,properti:[40,41,367,829,841,1063,1169,1173,1204,1205,1208,1209,1210,1211,1213],provid:[40,41,43,785,786,827,828,829,846,879,886,887,888,893,902,903,929,970,972,979,1005,1006,1009,1011,1013,1014,1015,1021,1063,1175,1192,1201,1208,1209,1210,1211,1212,1213,1218],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1029,1033],ptype:[1169,1173],pure:[40,41,1175,1221],purpos:1221,put:1063,pybroadexcept:1063,pyprotectedmemb:[1063,1170],pyshadowingbuiltin:43,pyshadowingnam:[830,880,881,882,1007,1063],python:[40,41,829,868,878,903,906,1063,1175],pytorch:[1006,1009,1011,1013,1014,1015,1175,1208,1209,1210,1211,1212,1213,1217,1218,1221],pyunresolvedrefer:1063,quadrant:[1041,1047],queri:[40,41,788,802,823,829,862,872,1063,1144,1155,1156,1192,1203],query_dim:[1192,1203],query_kei:[40,41],queue:[40,41,42,829,838,839,903,974,982,1063],queue_class:[829,838,839,1063],queue_load_s:[40,41,42],queue_timeout:[40,41,42,903,1063],quick:1175,quickli:1217,radian:[1041,1042,1044,1047,1049,1055,1057],rai:[1041,1042],rais:[40,41,43,785,786,788,813,903,914,944,980,987,989,999,1063,1204,1205,1208,1212],ram:[829,868,875,878,1063],randint:[160,338,564,732,1119],random:[37,40,41,1120,1121,1122,1123,1124,1125,1175],random_crop:1022,random_norm:[160,338,564,732,1119],random_uniform:[160,338,564,732,1119],randomli:[1022,1026,1144,1152,1192,1200],randomness_factor:[1163,1165,1169,1204,1205],rang:[903,906,961,962,1041,1047,1063,1175,1217,1221],rank:[785,786,903,922,1000,1003],rate:[1006,1009,1011,1013,1014,1015,1059,1060,1061,1062,1192,1203,1208,1209,1210,1211,1212,1213],rather:[40,41,829,873,903,906,956,1006,1012,1063],ratio:[829,1006,1013,1022,1027,1063,1208,1210],raw:[40,41],raw_delta:1063,reach:[829,851,855,861,1063,1107,1116],read:[40,41],readi:[1063,1217],real:[1041,1042,1046],realiti:1218,rearrang:[40,41,903,930,932],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1059,1061],receiv:[829,838,839,903,907,963,1063,1192,1202],receivess:[829,1063],receiving_fn:1169,receivng:[1059,1062],recev:[1059,1060,1061],recognit:1221,recommend:1175,rectifi:[1136,1138,1139],recurr:[1144,1154],recurrent_bia:[1144,1154],recurrent_kernel:[1144,1154],recurs:[40,41,1107,1108,1109,1115,1116],redefin:43,reduc:[40,41,785,786,829,873,903,931,1063,1126,1128,1129,1130,1131,1132,1133,1134],reduce_max:[40,41,167,343,450,569,739,1126],reduce_mean:[40,41,167,343,450,569,739,1126,1175,1217],reduce_min:[40,41,167,343,450,569,739,1126],reduce_prod:[40,41,167,343,450,569,739,1126],reduce_std:[40,41,343,1126],reduce_sum:[40,41,167,343,450,569,739,1063,1126],reduce_var:[40,41,167,343,450,569,739,1126],reduct:[39,40,41,785,786,903,931,978,979,1127,1128,1129,1130,1131,1132,1133,1134,1175],refactor:43,refer:[785,786,1006,1008,1009,1029,1036,1192,1202,1221],reflected_oper:[0,13,14],regard:[829,1063],regardless:[40,41,827,828],register_paramet:1217,reimplement:1221,rel:[1006,1009,1011,1013,1014,1015],rel_slice_obj:1063,relev:[1208,1209,1210,1211,1212,1213],relu:[748,1136,1137,1138,1175,1217],remain:[43,903,976,1107,1111],remaind:[40,41,903,938,986],remov:[40,41,903,987,1059,1060,1061],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,903,936],rep:[903,993],repeat:[40,41,265,622,903,932,993,1063,1218],repeated_config_check:[829,1063],repeatedli:[1107,1114],repetit:[40,41,903,975,993],replac:[40,41,43,903,918,978,979,1119,1120],repo:1175,repres:[43,879,885,890,1144,1153],represent:[40,41,42,43,771,772,773,829,856,857,879,885,891,892,903,985,995,1063],reptil:[1059,1062],reptile_step:1059,requir:[43,827,828,879,883,903,906,911,1181,1182],resampl:[903,960],reshap:[40,41,43,622,903],reshape_lik:[40,41],respect:[903,933,959,1006,1008,1009,1010,1011,1013,1014,1015,1041,1051,1059,1060,1061,1062],respons:1063,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,775,776,785,786,788,813,829,838,903,906,933,959,978,979,990,1029,1032,1035,1037,1038,1039,1040,1041,1051,1063,1126,1128,1129,1130,1131,1132,1133,1134,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1175],ret:1063,ret_dict:1063,ret_fn:[829,838,839,1063],retain:[1006,1010],retain_grad:[1006,1010],retreiv:1063,retrn:[903,985],return_cont:[40,41],return_dict:[40,41],return_graph:[1163,1164,1165],return_inner_v:[1059,1060,1061,1062],return_sequ:[1192,1201],return_st:[1192,1201],rev:[903,929],revers:[40,41,903,929,936,998],right:[40,41],rk_e:1221,robot:1175,ronald:1175,round:[265,622,903,906,1063],row:[903,949,1119,1120],rule:[43,788,813,903,906,1041,1051],run:[829,838,1006,1008,1009,1013,1059,1060,1061,1062,1063,1175,1176,1192,1203,1204,1205],safe:[829,838,1063],safety_factor:[829,1063],same:[15,16,17,40,41,43,829,838,839,873,874,879,883,903,904,917,921,937,938,941,942,970,972,977,978,979,990,1005,1006,1012,1017,1029,1034,1041,1046,1059,1060,1061,1063,1126,1127,1144,1145,1146,1147,1148,1149,1150,1151,1175,1192,1193,1194,1195,1196,1197,1198,1199,1217,1221],same_arrai:[40,41],sampl:[903,960,1022,1023,1119,1120,1122,1123,1144,1152,1175,1192,1200],satisfi:[903,911,1029,1031,1036],save:[40,41,903,983,994,1022,1024,1204,1205],save_debug_info:1169,save_dir:[829,844,1063],save_to_disk:[1163,1165,1169,1204,1205],save_weight:[1204,1205],scalar:[903,918,970,997,1001],scale:[829,871,872,1006,1014,1063,1144,1152,1155,1156,1161,1162,1192,1200,1203,1208,1211],scaled_dot_product_attent:1144,scatter:[903,970,978,979],scatter_flat:[112,265,396,508,622,903],scatter_nd:[112,265,396,508,622,903],scene:[1006,1009,1011,1013,1014,1015],schemat:1175,screen:[40,41],search:[15,18,19,40,41],second:[40,41,829,860,903,912,925,933,959,974,982,992,1006,1008,1009,1013,1059,1061,1063,1208,1209,1210],secondli:1221,see:[43,59,367,785,786,788,813,829,841,842,843,844,879,903,906,961,962,1006,1041,1051,1169,1173,1175,1183,1185,1186,1188,1189,1191],seed:[40,41,160,732,1119],seed_valu:[40,41,1119,1124],seem:1175,seen_set:[903,947],select:[903,911,987,1218,1221],self:[40,41,43,59,367,788,813,829,841,842,843,844,879,1006,1063,1169,1173,1175,1183,1185,1186,1188,1189,1191,1208,1212,1217,1221],sent:1063,seper:[903,939],seq:[40,41,42,1126,1127,1204,1205],sequenc:[15,16,17,40,41,42,43,827,828,829,838,839,848,849,850,851,852,853,854,855,858,859,873,879,883,903,906,911,913,915,921,922,936,949,963,966,971,975,976,979,986,990,993,998,1003,1004,1006,1010,1022,1026,1027,1029,1032,1035,1063,1107,1118,1119,1121,1123,1126,1128,1129,1130,1131,1132,1133,1134,1144,1145,1146,1147,1148,1149,1150,1151,1161,1162,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1204,1205,1206,1207,1208,1212,1214,1215],sequenti:1175,set:[15,18,19,40,41,829,858,859,871,872,873,903,905,928,949,980,981,982,983,1006,1009,1011,1012,1013,1014,1015,1029,1032,1035,1063,1107,1108,1115,1117,1118,1119,1120,1124,1126,1128,1129,1130,1131,1132,1133,1134,1173,1175,1192,1201,1208,1209,1210,1211,1212,1213,1218,1221],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1173,set_debug_mod:44,set_default_devic:829,set_default_dtyp:879,set_default_float_dtyp:879,set_default_int_dtyp:879,set_default_nod:1063,set_exception_debug_mod:44,set_framework:[40,41,59,1063,1175,1217,1218,1221],set_ivy_backend:[40,41],set_min_bas:903,set_min_denomin:903,set_nest_at_index:1107,set_nest_at_indic:1107,set_param:1169,set_queue_timeout:903,set_split_factor:[829,1063],set_stat:[1208,1209,1210,1211,1212,1213],set_tmp_dir:903,set_with_grad:1006,setter:1063,sever:1221,sgd:[1175,1208],shape0:1063,shape:[40,41,43,622,829,841,879,883,903,904,915,917,921,922,935,936,937,938,940,942,946,949,970,971,972,975,976,977,978,979,985,987,990,1003,1004,1005,1022,1026,1029,1031,1041,1046,1047,1063,1119,1121,1122,1123,1126,1127,1144,1146,1148,1150,1169,1173,1192,1194,1195,1196,1197,1198,1199,1206,1207],shape_slic:[40,41],shape_to_tupl:903,share:[40,41,1175,1218],shift:1063,should:[40,41,42,43,775,776,788,813,827,828,829,903,915,916,923,970,976,1006,1009,1011,1013,1014,1015,1041,1051,1063,1126,1127,1175],show:[40,41,1169,1175,1221],show_debug_info:1169,show_graph:[1163,1175,1204,1205,1208,1212],show_mod_in_top_mod:[1204,1205],show_structur:[1204,1205],show_sub_contain:[40,41],show_v:[1204,1205],show_v_in_top_v:[1204,1205],shown:[40,41],shp:1063,shuffl:[40,41,160,732,1119],shuffle_h5_fil:[40,41],sigmoid:[748,1136,1175,1217],signatur:[43,59,367,829,841,842,843,844,879,1006,1169,1173,1183,1185,1186,1188,1189,1191],signific:1221,similar:[43,1144,1155,1192,1203],simpl:[43,903,934,1175,1218,1221],simplest:1218,simpli:[40,41,43,1175,1218,1221],simultan:1175,sin:[715,903,939,1041,1057,1218],sinco:1218,sine:[1041,1044,1045,1055,1056],singl:[40,41,827,828,829,838,839,858,859,860,861,903,987,997,1001,1022,1027,1063,1119,1122,1123,1126,1128,1129,1130,1131,1132,1133,1134,1175,1218,1221],singleton:[785,786],singular:[1029,1034],sinh:[715,1041],siren:[1175,1183],size:[40,41,42,829,852,853,854,855,871,872,873,903,906,915,961,962,978,986,1022,1026,1029,1032,1034,1035,1063,1119,1120,1122,1123,1126,1128,1129,1130,1131,1132,1133,1134,1192,1193,1194],size_ordered_arrai:[40,41],skew:[1029,1036],skinv:1221,skip:[40,41],slice:[40,41,903,910,941,942,1063,1107,1114],slice_kei:[40,41],slice_obj:[40,41,1063],slice_via_kei:[40,41],slide:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],slope:[1136,1138],small:[1157,1158,1159,1160,1161,1162,1175,1206,1207,1218],smaller:[903,918],smallest:[40,41,771,772,773,903,909,917],smallest_norm:[367,771,772],softmax:[176,459,748,1136,1144,1155,1156],softplu:[748,1136],solv:1221,some:[40,41,43,903,906,1006,1008,1009,1011,1013,1014,1015,1020,1144,1152,1175,1192,1200,1218,1221],some_backend:43,some_namespac:43,someth:[43,1221],something_cool:43,somewher:[40,41],sort:[40,41,42,903,910,1029,1034,1063],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,367,369,370,372,373,771,772,773,775,776,785,786,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1173,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1219,1220,1221],space:[903,906,939,961,962],spars:[1157,1160],sparse_cross_entropi:1157,spawn:[903,968],specif:[40,41,43,829,871,903,923,930,931,932,968,1059,1060,1061,1062,1063,1119,1125,1175,1204,1205,1217,1218],specifc:[1119,1120],specifi:[40,41,43,785,786,829,848,849,850,851,852,853,854,855,858,859,863,865,869,872,873,874,879,883,885,903,906,908,909,911,918,921,922,940,941,942,948,961,962,990,1000,1003,1029,1032,1035,1063,1107,1112,1113,1117,1118,1126,1127,1128,1129,1130,1131,1132,1133,1134],split:[40,41,112,265,396,508,622,829,838,852,853,854,855,871,872,873,903,963,1063],split_arg:1063,split_factor:[829,838,1063],split_func_cal:[829,1063],split_siz:1063,spread:[829,861,1063],squar:[903,949,1029,1031],squeez:[112,265,396,508,622,903],stabil:[903,988,989],stabl:[903,944,945,980,981,988,989],stable_divid:903,stable_pow:903,stack:[40,41,265,622,903,1022,1027,1107,1108,1115,1192,1201],stack_imag:[151,324,438,554,700,1022],stacked_dim_s:1063,stage:43,standard:[40,41,43,771,772,1119,1122,1126,1132,1161,1162,1206,1207],start:[40,41,829,844,903,906,961,962,1063,1175,1218],starting_index:[40,41],starting_split_factor:[829,1063],state:[1063,1144,1154,1163,1164,1165,1169,1175,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],statement:1218,static_argnam:[827,828],static_argnum:[827,828],std:[1119,1122],step:[40,41,829,903,906,961,962,1006,1008,1009,1011,1013,1014,1015,1059,1060,1061,1062,1063,1175,1208,1209,1210,1211,1212,1213,1217,1221],stephen:1175,stick:1175,still:[40,41],stochast:[1208,1213],stop:[40,41,829,844,873,903,906,961,962,1006,1009,1011,1013,1014,1015,1017,1059,1060,1061,1062,1063,1208,1209,1210,1211,1212,1213],stop_gradi:[40,41,319,433,549,694,829,873,1006,1009,1011,1013,1014,1015,1059,1060,1061,1062,1063,1208,1209,1210,1211,1212,1213],stopiter:1063,store:[40,41,903,939,986,1006,1020,1204,1205],store_var:[1204,1205],str:[15,16,17,40,41,42,43,367,369,370,771,772,773,827,828,829,838,839,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,873,879,884,885,890,891,892,893,894,895,902,903,911,928,930,931,932,966,968,971,978,979,1029,1032,1035,1059,1060,1061,1062,1063,1107,1111,1126,1127,1181,1182,1192,1203,1204,1205],str_to_nod:1063,straight:1218,strength:[1175,1221],stride:[1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],string:[40,41,43,829,845,847,856,857,862,868,874,875,878,879,883,889,891,892,893,902,903,906,911,928,949,971,972,1004,1005,1063,1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199,1204,1205],structur:[40,41,42,43,903,923],structural_diff:[40,41],sub:[40,41,829,852,853,858,859,860,861,903,986,1059,1060,1061,1062,1063],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1063,sub_mod:[1204,1205],sub_modul:[1214,1215],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1175,1176,1206,1207,1214,1215],subsequ:43,subset:43,substr:[40,41],suggest:1175,suitabl:[1022,1027],sum:[40,41,829,858,859,860,861,873,903,927,931,978,979,1063,1126,1127,1133],summat:[40,41,1126,1127],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,161,162,163,164,165,166,168,169,170,171,172,173,174,177,179,180,182,183,184,185,186,187,188,194,195,196,199,209,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,329,330,331,332,334,335,336,339,340,341,342,344,345,346,347,348,349,350,351,354,356,357,358,359,360,361,362,368,369,370,373,383,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,439,440,441,443,444,447,449,451,452,453,454,455,456,457,460,461,463,464,465,466,467,468,469,475,476,477,480,490,502,503,504,505,506,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,550,551,552,553,555,556,557,559,560,561,565,566,567,568,570,571,572,573,574,575,576,580,581,582,588,589,590,593,603,615,616,617,618,619,620,621,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,698,699,701,702,703,705,706,707,708,709,710,712,713,714,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,733,734,735,736,737,738,740,741,742,743,744,745,746,749,750,751,752,753,754,755,757,758,760,761,762,763,764,765,766,772,773,776,786,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,828,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1162,1164,1165,1167,1168,1170,1174,1175,1179,1180,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1220,1221],supports_inplac:903,suppos:1221,svd:[328,558,704,1029],swap:[40,41,903,992],swapax:[40,41,508,622,903,1221],symmetr:[1029,1036],tab:1175,take:[903,960],taken:[1126,1128,1129,1130,1132,1134],tan:[715,1041,1046],tangent:[1041,1046,1047,1048,1057,1058,1136,1143],tanh:[715,748,1041,1136],target:[40,41,829,845,848,849,850,851,852,853,854,855,858,859,860,861,874,1063,1175],target_dict:[40,41],task:[1059,1060,1061,1062],team:1221,templat:1175,temporari:[903,983,994],tensor:[40,41,43,829,847,879,889,903,906,908,909,910,915,961,962,965,967,970,971,972,976,978,979,986,1004,1005,1063,1119,1120,1121,1144,1152,1154,1175,1192,1200,1202,1208,1209,1210,1211,1212,1213,1217,1218],tensorflow:[1144,1146,1148,1150,1175,1192,1194,1196,1198,1218,1221],term:[40,41,1144,1154,1175,1192,1202],termcolor:[40,41,42],termin:[40,41,42,1063],test:[775,776,785,786,879,894,895],tf_concat:1175,than:[40,41,771,772,829,873,903,906,917,918,937,956,965,987,990,1006,1012,1063,1119,1123,1175,1218],thei:[40,41,43,1041,1047,1059,1060,1061,1119,1120,1175,1214,1215,1218],them:[1175,1221],themselv:[1107,1108],therefor:43,thi:[40,41,42,43,829,851,855,861,868,873,878,903,906,939,974,976,982,1006,1009,1011,1012,1013,1014,1015,1020,1029,1032,1035,1063,1107,1111,1116,1126,1128,1129,1130,1131,1132,1133,1134,1144,1153,1175,1204,1205,1208,1209,1210,1211,1212,1213,1217,1218,1221],thing:[43,1175],those:[40,41,903,918,1006,1020,1029,1034,1063],though:43,threshold:[903,965,967],through:[40,41],tile:[265,508,622,903],time:[903,993,1006,1009,1013,1059,1060,1061,1062,1063,1119,1120,1144,1154,1192,1203,1204,1205,1221],time_chronolog:[1163,1164,1169],time_infer:[1163,1164],timeout:[40,41,42,829,838,839,903,974,982,1063],timestep:[1144,1154,1192,1201],timing_fnam:[1163,1164],titl:1175,tmp_dir:903,tmp_dr:[903,983],to_appli:[40,41],to_clon:[829,1063],to_dev:[40,41,105,259,501,614,829],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[829,1063],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1175],to_ivy_modul:[178,756,1175,1181],to_json:[40,41],to_kv_fn:[1144,1155],to_kv_v:[1144,1155],to_list:[40,41,622,903],to_multi_dev:[40,41],to_mut:[1107,1109,1116],to_n:[15,40,41,1175],to_nod:1063,to_numpi:[40,41,622,903,1175,1217],to_out_fn:[1144,1155],to_out_v:[1144,1155],to_q_fn:[1144,1155],to_q_v:[1144,1155],to_raw:[40,41],to_scalar:[622,903],todo:1063,togeth:[40,41,1214,1215],tool:[1175,1218],top_mod:[1204,1205],topic:1221,torch:[43,827,828,1175,1217,1218,1221],torch_concat:1175,torchfcmodel:1217,total:[40,41,42,829,875,1063],total_mem_on_dev:829,total_mem_on_nod:1063,tpu:[829,876,1063],tpu_is_avail:[501,614,829,1063],tpye:[879,890],trace:[40,41,903,956],track:[829,1063,1107,1116,1204,1205],track_submod_call_ord:[1204,1205],track_submod_ret:[1204,1205],trail:[1206,1207],train:[1006,1008,1009,1013,1175,1176],trainabl:[1006,1012,1175,1176,1181,1182,1204,1205,1214],trainer:1175,tran:1221,transform:[1144,1152,1153],transpos:[40,41,112,265,396,622,829,860,903,1063,1144,1146,1148,1150,1192,1194,1196,1198],travers:[15,18,19,40,41,1107,1116],treat:[40,41,827,828],tree_depth:1173,tree_height:1169,tri:[40,41],trigonometr:[1041,1042,1046,1049,1055],trim_kei:[40,41],trust:[1006,1013,1208,1210],truth:[903,933,959,1037,1038,1039,1040],try_else_non:903,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[829,1063],tune_dev_alloc:829,tune_dev_split:829,tune_node_alloc:1063,tune_node_split:1063,tune_step:[829,1063],tupl:[15,16,17,18,19,40,41,43,785,786,827,828,903,922,939,940,985,1003,1063,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1121,1126,1128,1129,1130,1131,1132,1133,1134],two:[40,41,903,906,912,925,964,992,1029,1032,1034],type:[15,18,40,41,42,43,59,369,370,772,773,775,776,785,786,788,813,829,841,842,843,844,856,857,861,873,879,883,884,885,889,890,891,892,893,894,895,902,903,904,906,911,917,921,923,933,937,938,940,949,956,959,970,971,972,977,991,1001,1004,1005,1006,1012,1017,1041,1051,1063,1169,1173,1175,1183,1185,1186,1188,1189,1191,1204,1205,1218],types_to_iteratively_nest:[40,41,42],uint8:[1022,1024,1028],uint8_img_to_float_img:1022,unchang:[15,16,17,18,19],unif:1063,unifi:[40,41,829,858,859,860,861,873,1063,1175],uniform:[40,41,1119,1120,1122,1123,1183,1185,1186,1189,1190],uniformli:[1119,1121,1123],unify_arrai:1063,unify_it:1063,unify_nest:1063,union:[15,18,19,40,41,43,367,369,370,771,772,773,775,776,785,786,788,813,827,828,829,847,852,853,854,855,873,874,879,883,884,885,889,890,891,892,893,894,895,902,903,904,905,906,908,909,910,911,912,913,915,917,918,919,920,921,922,924,925,926,927,930,931,932,933,935,936,937,938,939,940,941,942,946,948,949,950,957,958,959,960,961,962,964,965,966,967,970,971,972,975,976,977,978,979,984,985,986,987,990,992,993,995,996,997,998,1000,1001,1002,1003,1004,1005,1063,1107,1108,1109,1115,1116],uniqu:[829,838,839,1059,1060,1061,1062,1063,1107,1111],unique_kwarg:1063,unit:[829,1041,1042,1044,1063,1136,1137,1138,1139],unitari:[1029,1034],unless:[903,970,972,1005],unlik:[829,1063],unnorm:[1119,1120],unpack:[903,1000],unrol:[1144,1154],unset:1218,unset_debug_mod:44,unset_default_devic:829,unset_default_dtyp:879,unset_default_float_dtyp:879,unset_default_int_dtyp:879,unset_framework:[59,1218],unset_with_grad:1006,unstack:[40,41,112,265,396,508,622,903],unus:[827,828],updat:[40,41,829,838,903,954,978,979,1006,1008,1009,1011,1013,1014,1015,1059,1060,1061,1063,1107,1112,1113,1117,1118,1144,1154,1181,1182,1208,1209,1210,1211,1212,1213,1218,1221],update_backend:[40,41],update_config:[40,41],update_inference_tim:1169,upper:[40,41,1119,1123],upper_depth:[1204,1205],usabl:[1175,1221],usag:[829,873,1063],use:[40,41,42,43,829,838,839,864,876,903,975,988,989,1063,1144,1155,1161,1162,1175,1206,1207,1218,1221],used:[40,41,43,829,838,868,871,872,878,879,890,903,944,945,963,972,978,979,980,981,1005,1006,1013,1014,1029,1032,1059,1060,1061,1062,1063,1107,1116,1192,1203,1208,1210,1211,1217,1218],used_dev:[829,838],used_mem_on_dev:829,used_mem_on_nod:1063,used_node_str:1063,used_node_strs_dict:1063,useful:[40,41,829,873,1063,1144,1153,1175,1218],user:[1175,1192,1203,1204,1205,1218,1221],uses:1175,using:[40,41,1006,1008,1009,1107,1110,1114,1126,1127,1144,1152,1156,1175,1192,1200,1217,1218,1221],util:[829,862,1063],utility_funct:[785,786],v_with_top_v_key_chain:[1204,1205],val:[40,41,788,823,903,952,953,954,980,981,1173],valid:[785,786,879,884,903,988,989,1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],valid_dtyp:879,valu:[40,41,829,841,872,873,903,904,906,908,909,910,918,919,920,922,923,929,933,939,940,941,942,957,958,959,961,962,965,967,974,975,976,977,978,979,980,981,982,998,1001,1002,1003,1006,1010,1013,1022,1028,1029,1034,1037,1038,1039,1040,1041,1052,1053,1054,1059,1060,1061,1063,1107,1111,1112,1113,1117,1118,1119,1122,1123,1126,1128,1130,1144,1155,1156,1161,1162,1169,1192,1203,1206,1207,1208,1210],value_is_nan:903,vanilla:[1059,1061],var_shap:1183,variabl:[15,16,17,18,19,40,41,319,433,549,694,903,914,952,953,954,955,956,991,1006,1009,1010,1011,1012,1013,1014,1015,1017,1020,1059,1060,1061,1062,1144,1155,1161,1162,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],variable_data:[694,1006],varianc:[40,41,1126,1134,1221],varieti:1218,variou:[43,1175],vector:[40,41,903,920,925,1029,1034,1035,1036,1144,1153,1192,1202],vector_norm:[40,41,1029],vector_to_skew_symmetric_matrix:[155,328,442,558,704,1029],verbos:1220,veri:[43,1175],version:43,via:[1107,1108,1115,1218],view:[1022,1027],vision:1175,visual:1218,volum:[1144,1149],vw_tm1:[1006,1009,1013],wai:[1218,1221],wait:[40,41,42],want:[1175,1218,1221],warn:[59,66,67,68,69,70],warp:[1022,1023],watch:1217,weight:[1006,1008,1009,1011,1013,1014,1015,1144,1153,1154,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1208,1210,1211],weight_initi:[1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],weights_path:[1204,1205],well:[40,41,903,948],were:[40,41,1063],what:1175,when:[40,41,42,43,829,903,916,989,1002,1029,1034,1063,1175,1204,1205,1218,1221],where:[40,41,43,265,622,785,786,788,813,903,906,915,918,922,935,950,957,958,970,1003,1029,1034,1107,1108,1115,1119,1120],wherea:43,wherebi:[1107,1116],whether:[15,18,19,40,41,42,785,786,827,828,829,847,860,864,868,873,876,878,879,889,893,894,895,902,903,905,912,913,926,929,934,939,946,948,951,955,956,963,984,991,1000,1001,1006,1009,1010,1011,1012,1013,1014,1015,1017,1059,1060,1061,1062,1063,1107,1108,1109,1111,1115,1116,1119,1120,1136,1137,1144,1152,1175,1181,1182,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],which:[40,41,42,43,771,772,773,785,786,827,828,829,838,839,847,852,853,854,855,858,859,860,861,863,865,869,871,872,873,879,884,889,893,902,903,906,911,921,923,925,926,927,929,936,940,941,942,943,949,950,960,961,962,969,970,971,972,973,975,978,979,986,990,1000,1002,1004,1005,1006,1009,1010,1011,1013,1014,1015,1017,1019,1020,1022,1024,1029,1032,1035,1041,1047,1063,1107,1111,1112,1113,1117,1118,1119,1120,1121,1122,1123,1126,1128,1129,1130,1131,1132,1133,1134,1136,1141,1144,1155,1156,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1217,1218],whitespac:[40,41,42],whose:[43,788,813,903,911,916,1126,1127,1128,1129,1130,1132,1134],why:[1175,1176],width:[1022,1027],wiki:1221,wikipedia:1221,window:[1022,1027,1144,1145,1146,1147,1148,1149,1150,1151,1192,1193,1194,1195,1196,1197,1198,1199],wise:[40,41,43,788,813,903,917,918,933,937,938,959,965,967,977,1006,1009,1011,1013,1015,1037,1038,1039,1040,1041,1042,1044,1046,1047,1049,1051,1052,1053,1054,1055,1057,1136,1137,1138,1139,1140,1141,1142,1143],wish:1218,with_arg_label:[1163,1165,1169,1204,1205],with_array_cach:[1163,1164,1165,1169],with_bia:[1192,1202],with_cal:[903,929],with_default_key_color:[40,41],with_edge_label:[1163,1165,1169,1204,1205],with_entries_as_list:[40,41],with_grad:[1006,1016,1204,1205],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1063,with_output_label:[1163,1165,1169,1204,1205],with_partial_v:[1204,1205],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,903,986,1063],with_to_kv_fn:[1192,1203],with_to_out_fn:[1192,1203],with_to_q_fn:[1192,1203],within:[15,18,19,903,906,1029,1034,1119,1123],without:[40,41,43,903,974,976,982,1107,1109,1218],wonder:1175,word:[15,16,17,903,906,1119,1123,1181,1182],work:[43,1217],worker:[829,838,839,1063],worker_class:[829,838,839,1063],worker_kwarg:1063,would:[43,903,910,1136,1141,1175,1218,1221],wrap:[15,40,41,42,43,903,916,1006,1020,1175],wrapper:43,write:[40,41,43,1175,1176,1221],written:[43,1175,1221],ws_new:[1006,1009,1011,1013,1014,1015],x1_i:[903,933,959,1041,1051],x2_i:[903,933,959,1041,1051],x_feat_dim:[1144,1155],x_i:[775,776],x_in:[1175,1217],x_inv:[1029,1031],x_max:[903,918],x_min:[903,918],x_sub:1063,xkk:1221,xkkm1:1221,xkm1km1:1221,xs0:1063,xs_t:1063,year:[1175,1221],yet:[1107,1116,1221],yield:[903,1002],you:[1175,1217,1218,1221],your:[1175,1217,1218,1221],your_awesome_project:1218,yourself:1175,zero:[40,41,112,265,396,508,622,785,786,903,922,970,972,978,979,1003,1005,1006,1008,1009,1013,1014,1144,1152,1175,1183,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1208,1209,1210,1211],zero_pad:[265,508,622,903],zeros_lik:[112,265,396,508,622,903],zip:1063,zk_e:1221},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","less_equal","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":929,"function":[77,78,83,85,87,88,89,90,91,92,93,192,193,198,200,202,203,204,205,206,207,208,366,367,372,374,376,377,378,379,380,381,382,473,474,479,481,483,484,485,486,487,488,489,586,587,592,594,596,597,598,599,600,601,602,770,771,775,777,779,780,781,782,783,784,785],Ones:1188,Using:1218,abs:[266,509,623,904],aco:[716,1042],acosh:[717,1043],activ:[176,353,459,578,748,1136,1178],adam:1209,adam_step:1008,adam_upd:1009,algebra:[86,87,201,202,375,376,482,483,595,596,778,779],all:[94,209,383,490,603,786],all_equ:905,all_nested_indic:1108,api:[0,43,75,96,190,211,364,385,471,492,584,605,768],arang:[113,267,397,510,624,906],arg_nam:907,argmax:[114,398,511,625,908],argmin:[115,399,512,626,909],args_to_ivi:16,args_to_n:17,argsort:[627,910],arithmet:[1,97,212,386,493,606],arrai:[0,3,43,75,95,96,98,116,190,210,211,213,220,268,364,384,385,387,400,471,491,492,494,513,584,604,605,607,628,768,788,911],array_equ:[269,629,912],arrays_equ:913,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[718,1044],asinh:[719,1045],assert_supports_inplac:914,atan2:[721,1047],atan:[720,1046],atanh:[722,1048],attribut:[5,99,214,388,495,608],backend:[43,73],bilinear_resampl:[152,325,439,555,701,1023],binary_cross_entropi:1158,bitwis:[7,100,215,389,496,609],broadcast_to:[270,630,915],builder:51,builtin:[95,210,220,384,491,604,788],builtin_ab:[221,789],builtin_add:[222,790],builtin_and:[223,791],builtin_bool:[224,792],builtin_contain:[225,793],builtin_deepcopi:[226,794],builtin_dir:[227,795],builtin_eq:[228,796],builtin_float:[229,797],builtin_floordiv:[230,798],builtin_g:[231,799],builtin_getattr:[232,800],builtin_getattribut:[233,801],builtin_getitem:[234,802],builtin_gt:[235,803],builtin_int:[236,804],builtin_invert:[237,805],builtin_l:[238,806],builtin_lt:[239,807],builtin_mul:[240,808],builtin_n:[241,809],builtin_neg:[242,810],builtin_or:[243,811],builtin_po:[244,812],builtin_pow:[245,813],builtin_radd:[246,814],builtin_rand:[247,815],builtin_rfloordiv:[248,816],builtin_rmul:[249,817],builtin_ror:[250,818],builtin_rpow:[251,819],builtin_rsub:[252,820],builtin_rtruediv:[253,821],builtin_rxor:[254,822],builtin_setitem:[255,823],builtin_sub:[256,824],builtin_truediv:[257,825],builtin_xor:[258,826],cache_fn:916,cast:[117,271,401,514,631,883],ceil:[272,632,917],choleski:[705,1030],choose_random_framework:61,citat:1175,clear_framework_stack:62,clear_mem_on_dev:[616,845],clip:[273,633,918],clip_matrix_norm:919,clip_vector_norm:920,clone:1078,clone_arrai:1079,clone_it:1080,clone_nest:1081,clonedit:1065,cloneditem:1064,clonednest:1066,closest_valid_dtyp:884,code:1221,comparison:[9,101,216,390,497,610],compil:[274,402,634,827,828,1163],compile_graph:1164,concaten:[118,275,403,515,635,921],constant:[76,191,365,472,585,769],constant_pad:[276,516,636,922],contain:[40,41],container_typ:[637,923],content:1175,contribut:43,conv1d:[182,356,463,760,1145,1193],conv1d_transpos:[183,357,464,761,1146],conv1dtranspos:1194,conv2d:[184,358,465,580,762,1147,1195],conv2d_transpos:[185,359,466,763,1148],conv2dtranspos:1196,conv3d:[186,360,467,581,764,1149,1197],conv3d_transpos:[187,361,468,765,1150],conv3dtranspos:1198,convers:15,convert:[178,756,1181],convert_dtyp:885,copy_arrai:[638,924],copy_nest:1109,core:[104,219,393,500,613,787],cos:[723,1049],cosh:[724,1050],cprint:1220,creation:[77,192,366,473,586,770],cross:[277,639,925],cross_entropi:1159,cumprod:[119,278,404,640,926],cumsum:[641,927],current_framework:63,current_framework_str:[642,928],data:[78,82,193,197,367,371,474,478,587,591,771,774],debug_mod:45,debugg:44,default_devic:846,default_dtyp:886,default_float_dtyp:887,default_int_dtyp:888,default_nod:1082,depthwise_conv2d:[188,362,469,582,766,1151],depthwiseconv2d:1199,design:43,dev:[107,261,503,617,847],dev_clon:848,dev_clone_arrai:849,dev_clone_it:850,dev_clone_nest:851,dev_dist:852,dev_dist_arrai:853,dev_dist_it:854,dev_dist_nest:855,dev_from_str:[108,262,504,618,856],dev_to_str:[109,263,505,619,857],dev_unifi:858,dev_unify_arrai:859,dev_unify_it:860,dev_unify_nest:861,dev_util:862,devclonedit:832,devcloneditem:831,devclonednest:833,devdistit:835,devdistitem:834,devdistnest:836,devic:[20,105,259,394,501,614,829],devmapp:838,devmappermultiproc:839,distribute_nest:1083,divid:1051,document:1175,dropout:[1152,1200],dtype:[120,279,405,517,643,879,889],dtype_bit:[121,280,406,518,644,890],dtype_from_str:[122,281,407,519,645,891],dtype_to_str:[123,282,408,520,646,892],ecosystem:52,einops_rearrang:930,einops_reduc:931,einops_repeat:932,einsum:[168,344,451,570,740,1127],elementwis:[83,198,372,479,592,775],equal:933,erf:[447,725,1052],execute_with_gradi:[149,320,434,550,695,1010],exist:934,exp:[726,1053],expand_dim:[283,647,935],extens:[86,201,375,482,595,778],finfo:[80,195,369,476,589,772],firstlayersiren:1185,flip:[124,284,409,521,648,936],float_img_to_uint8_img:1024,floor:[285,649,937],floormod:[286,650,938],fomaml_step:1060,fourier_encod:939,framework:59,full:[125,287,410,522,651,940],func:72,gather:[126,288,411,523,652,941],gather_nd:[127,289,412,524,653,942],geglu:1179,gelu:[354,460,749,1137,1180],gener:[22,112,265,396,508,622,903],get_all_arrays_in_memori:943,get_all_arrays_on_dev:863,get_framework:64,get_min_bas:944,get_min_denomin:945,get_num_dim:[654,946],get_referrers_recurs:947,global:1166,glorotuniform:1186,gpu_is_avail:[864,1084],gradient:[24,148,319,433,549,694,1006],gradient_descent_upd:1011,gradient_imag:[153,326,440,556,702,1025],graph:1169,gym:53,handler:59,has_nan:948,helper:1171,ident:[128,290,413,525,655,949],iinfo:[81,196,370,477,590,773],imag:[26,151,324,438,554,700,1022],index_nest:1110,indices_wher:[129,291,414,656,950],initi:1183,inplac:[11,102,217,391,498,611],inplace_arrays_support:951,inplace_decr:[130,292,415,526,657,952],inplace_incr:[131,293,416,527,658,953],inplace_upd:[132,294,417,528,659,954],inplace_variables_support:955,inv:[706,1031],invalid_dtyp:893,is_arrai:[133,295,418,529,660,956],is_float_dtyp:894,is_int_dtyp:895,is_vari:[150,321,435,551,696,1012],isfinit:[84,199,373,480,593,776],isinf:[296,530,661,957],isnan:[297,531,662,958],ivi:[43,50,51,52,53,54,55,56,57,58,767,1217,1218,1221],ivymodul:[179,757],jax:74,lamb:1210,lamb_upd:1013,lar:1211,lars_upd:1014,layer:[181,355,462,579,759,1144,1192],layer_norm:1162,layernorm:1207,leaky_relu:[750,1138],less_equ:959,linalg:[28,155,328,442,558,704,1029],linear:[86,87,201,202,375,376,482,483,595,596,778,779,1153,1202],linear_resampl:[134,298,419,532,663,960],linspac:[135,299,420,533,664,961],log:[727,1054,1172],log_global_inference_abs_tim:1167,log_global_inference_rel_tim:1168,logic:[30,158,333,445,562,711,1037],logical_and:[334,712,1038],logical_not:[335,713,1039],logical_or:[336,714,1040],logspac:[136,300,421,534,665,962],loss:1157,lstm:1201,lstm_updat:1154,maml_step:1061,manipul:[88,203,377,484,597,780],map:1111,map_nest_at_index:1112,map_nest_at_indic:1113,match_kwarg:963,math:[32,159,337,446,563,715,1041],matmul:[301,535,666,964],matrix_norm:[156,329,443,559,707,1032],maximum:[667,965],mech:54,memori:55,meshgrid:[302,668,966],meta:[34,1059],method:[85,200,374,481,594,777],minimum:[669,967],model:56,modul:[1204,1205,1217],multi:1063,multi_head_attent:1155,multi_index_nest:1114,multidevcontain:42,multidevit:842,multidevitem:841,multidevnest:843,multiheadattent:1203,multinodeit:1069,multinodeitem:1068,multinodenest:1070,multinomi:[161,339,449,565,733,1120],multiprocess:[670,968],mxnet:189,nativ:1217,nest:1107,nested_indices_wher:1115,nested_map:1116,network:1217,next:1175,node:[1063,1085],node_dist:1086,node_dist_arrai:1087,node_dist_it:1088,node_str:1089,node_to_str:1090,node_util:1091,nodedistit:1072,nodedistitem:1071,nodedistnest:1073,nodemapp:1075,nodemappermultiproc:1076,norm:[1161,1206],num_arrays_in_memori:969,num_arrays_on_dev:865,num_cpu_cor:866,num_gpu:[110,867,1092],numpi:363,nutshel:1175,one_hot:[137,422,536,671,970],ones:[138,303,423,537,672,971],ones_lik:[139,304,424,538,673,972],oper:[1,3,7,9,11,13,43,97,98,100,101,102,103,212,213,215,216,217,218,386,387,389,390,391,392,493,494,496,497,498,499,606,607,609,610,611,612],optim:[1208,1212],optimizer_upd:1015,overview:1175,param:1173,percent_used_mem_on_dev:868,percent_used_mem_on_nod:1093,pinv:[330,708,1033],portabl:1221,print_all_arrays_in_memori:973,print_all_arrays_on_dev:869,profil:[106,260,395,502,615,844,1077],queue_timeout:974,randint:[162,340,566,734,1121],random:[36,160,338,448,564,732,1119],random_crop:1026,random_norm:[163,341,567,735,1122],random_uniform:[164,342,568,736,1123],reduce_max:[169,345,452,571,741,1128],reduce_mean:[170,346,453,572,742,1129],reduce_min:[171,347,454,573,743,1130],reduce_prod:[172,348,455,574,744,1131],reduce_std:[349,1132],reduce_sum:[173,350,456,575,745,1133],reduce_var:[174,351,457,576,746,1134],reduct:[38,167,343,450,569,739,1126],reflect:[13,103,218,392,499,612],relu:[751,1139],repeat:[305,674,975],reptile_step:1062,reshap:[675,976],robot:57,round:[306,676,977],run:1218,scaled_dot_product_attent:1156,scatter_flat:[140,307,425,539,677,978],scatter_nd:[141,308,426,540,678,979],search:[89,204,378,485,598,781],seed:[165,737,1124],sequenti:[1214,1215],set:[90,205,379,486,599,782],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:870,set_default_dtyp:896,set_default_float_dtyp:897,set_default_int_dtyp:898,set_default_nod:1094,set_exception_debug_mod:48,set_framework:65,set_min_bas:980,set_min_denomin:981,set_nest_at_index:1117,set_nest_at_indic:1118,set_queue_timeout:982,set_split_factor:[871,1095],set_tmp_dir:983,set_with_grad:1016,sgd:1213,shape:[679,984],shape_to_tupl:985,show_graph:1165,shuffl:[166,738,1125],sigmoid:[752,1140],signatur:[85,200,374,481,594,777],sin:[728,1055],sinh:[729,1056],siren:1189,softmax:[177,461,753,1141],softplu:[754,1142],sort:[91,206,380,487,600,783],sparse_cross_entropi:1160,split:[142,309,427,541,680,986],split_factor:[872,1096],split_func_cal:[873,1097],squeez:[143,310,428,542,681,987],stable_divid:988,stable_pow:989,stack:[311,682,990],stack_imag:[154,327,441,557,703,1027],statist:[92,207,381,488,601,784],stop_gradi:[322,436,552,697,1017],str_to_nod:1098,submodul:43,supports_inplac:991,svd:[331,560,709,1034],swapax:[543,683,992],tan:[730,1057],tanh:[731,755,1058,1143],tensorflow:470,tile:[312,544,684,993],tmp_dir:994,to_dev:[111,264,506,620,874],to_ivi:18,to_ivy_modul:[180,758,1182],to_list:[685,995],to_n:19,to_nod:1099,to_numpi:[686,996],to_scalar:[687,997],torch:583,total_mem_on_dev:875,total_mem_on_nod:1100,tpu_is_avail:[507,621,876,1101],train:1217,trainabl:1217,transpos:[144,313,429,688,998],tree:1175,try_else_non:999,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,193,197,367,371,474,478,587,591,771,774],uint8_img_to_float_img:1028,unifi:1102,unify_arrai:1103,unify_it:1104,unify_nest:1105,unset_debug_mod:49,unset_default_devic:877,unset_default_dtyp:899,unset_default_float_dtyp:900,unset_default_int_dtyp:901,unset_framework:71,unset_with_grad:1018,unstack:[145,314,430,545,689,1000],used_mem_on_dev:878,used_mem_on_nod:1106,util:[93,208,382,489,602,785],valid_dtyp:902,value_is_nan:1001,variabl:[323,437,553,698,1019],variable_data:[699,1020],vector_norm:1035,vector_to_skew_symmetric_matrix:[157,332,444,561,710,1036],verbos:1219,vision:58,where:[315,690,1002,1175],why:1221,with_grad:1021,wrapper:72,write:1218,zero:[146,317,431,547,692,1004,1191],zero_pad:[316,546,691,1003],zeros_lik:[147,318,432,548,693,1005]}})