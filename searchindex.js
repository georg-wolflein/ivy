Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[775,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[367,0,0,"-"],creation_functions:[368,0,0,"-"],data_type_functions:[369,0,0,"-"],data_types:[373,0,0,"-"],elementwise_functions:[374,0,0,"-"],function_and_method_signatures:[378,0,0,"-"],linear_algebra_extension:[379,0,0,"-"],linear_algebra_functions:[380,0,0,"-"],manipulation_functions:[381,0,0,"-"],searching_functions:[382,0,0,"-"],set_functions:[383,0,0,"-"],sorting_functions:[384,0,0,"-"],statistical_functions:[385,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[369,1,1,""],finfo:[371,2,1,""],iinfo:[372,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[369,3,1,""],bits:[369,3,1,""],eps:[369,3,1,""],max:[369,3,1,""],min:[369,3,1,""],smallest_normal:[369,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{equal:[375,2,1,""],isfinite:[376,2,1,""],less_equal:[377,2,1,""]},"ivy.functional.ivy":{array_api:[776,0,0,"-"],core:[796,0,0,"-"],nn:[1143,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[777,0,0,"-"],creation_functions:[778,0,0,"-"],data_type_functions:[779,0,0,"-"],data_types:[782,0,0,"-"],elementwise_functions:[783,0,0,"-"],function_and_method_signatures:[786,0,0,"-"],linear_algebra_extension:[787,0,0,"-"],linear_algebra_functions:[788,0,0,"-"],manipulation_functions:[789,0,0,"-"],searching_functions:[790,0,0,"-"],set_functions:[791,0,0,"-"],sorting_functions:[792,0,0,"-"],statistical_functions:[793,0,0,"-"],utility_functions:[794,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[780,2,1,""],iinfo:[781,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[784,2,1,""],less_equal:[785,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[795,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[797,0,0,"-"],compilation:[836,0,0,"-"],device:[838,0,0,"-"],dtype:[888,0,0,"-"],general:[912,0,0,"-"],gradients:[1014,0,0,"-"],image:[1030,0,0,"-"],linalg:[1037,0,0,"-"],logic:[1045,0,0,"-"],math:[1049,0,0,"-"],meta:[1067,0,0,"-"],multi_node:[1071,0,0,"-"],nest:[1115,0,0,"-"],random:[1127,0,0,"-"],reductions:[1134,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[798,2,1,""],builtin_add:[799,2,1,""],builtin_and:[800,2,1,""],builtin_bool:[801,2,1,""],builtin_contains:[802,2,1,""],builtin_deepcopy:[803,2,1,""],builtin_dir:[804,2,1,""],builtin_eq:[805,2,1,""],builtin_float:[806,2,1,""],builtin_floordiv:[807,2,1,""],builtin_ge:[808,2,1,""],builtin_getattr:[809,2,1,""],builtin_getattribute:[810,2,1,""],builtin_getitem:[811,2,1,""],builtin_gt:[812,2,1,""],builtin_int:[813,2,1,""],builtin_invert:[814,2,1,""],builtin_le:[815,2,1,""],builtin_lt:[816,2,1,""],builtin_mul:[817,2,1,""],builtin_ne:[818,2,1,""],builtin_neg:[819,2,1,""],builtin_or:[820,2,1,""],builtin_pos:[821,2,1,""],builtin_pow:[822,2,1,""],builtin_radd:[823,2,1,""],builtin_rand:[824,2,1,""],builtin_rfloordiv:[825,2,1,""],builtin_rmul:[826,2,1,""],builtin_ror:[827,2,1,""],builtin_rpow:[828,2,1,""],builtin_rsub:[829,2,1,""],builtin_rtruediv:[830,2,1,""],builtin_rxor:[831,2,1,""],builtin_setitem:[832,2,1,""],builtin_sub:[833,2,1,""],builtin_truediv:[834,2,1,""],builtin_xor:[835,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[837,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[838,1,1,""],DevClonedItem:[840,1,1,""],DevClonedIter:[841,1,1,""],DevClonedNest:[842,1,1,""],DevDistItem:[843,1,1,""],DevDistIter:[844,1,1,""],DevDistNest:[845,1,1,""],DevManager:[838,1,1,""],DevMapper:[847,1,1,""],DevMapperMultiProc:[848,1,1,""],MultiDev:[838,1,1,""],MultiDevItem:[850,1,1,""],MultiDevIter:[851,1,1,""],MultiDevNest:[852,1,1,""],Profiler:[853,1,1,""],clear_mem_on_dev:[854,2,1,""],default_device:[855,2,1,""],dev:[856,2,1,""],dev_clone:[857,2,1,""],dev_clone_array:[858,2,1,""],dev_clone_iter:[859,2,1,""],dev_clone_nest:[860,2,1,""],dev_dist:[861,2,1,""],dev_dist_array:[862,2,1,""],dev_dist_iter:[863,2,1,""],dev_dist_nest:[864,2,1,""],dev_from_str:[865,2,1,""],dev_to_str:[866,2,1,""],dev_unify:[867,2,1,""],dev_unify_array:[868,2,1,""],dev_unify_iter:[869,2,1,""],dev_unify_nest:[870,2,1,""],dev_util:[871,2,1,""],get_all_arrays_on_dev:[872,2,1,""],gpu_is_available:[873,2,1,""],num_arrays_on_dev:[874,2,1,""],num_cpu_cores:[875,2,1,""],num_gpus:[876,2,1,""],percent_used_mem_on_dev:[877,2,1,""],print_all_arrays_on_dev:[878,2,1,""],set_default_device:[879,2,1,""],set_split_factor:[880,2,1,""],split_factor:[881,2,1,""],split_func_call:[882,2,1,""],to_dev:[883,2,1,""],total_mem_on_dev:[884,2,1,""],tpu_is_available:[885,2,1,""],unset_default_device:[886,2,1,""],used_mem_on_dev:[887,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[838,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[838,3,1,""],da_tune_step:[838,3,1,""],dim_size:[838,3,1,""],ds_tune_step:[838,3,1,""],map:[838,3,1,""],repeated_config_check:[838,3,1,""],tune_step:[838,3,1,""],tuned:[838,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[847,3,1,""],map:[847,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[848,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[838,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[850,3,1,""],items:[850,3,1,""],keys:[850,3,1,""],shape:[850,3,1,""],values:[850,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[851,3,1,""],at_dev:[851,3,1,""],at_devs:[851,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[852,3,1,""],at_dev:[852,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[853,3,1,""],start:[853,3,1,""],stop:[853,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[888,1,1,""],DefaultFloatDtype:[888,1,1,""],DefaultIntDtype:[888,1,1,""],astype:[888,2,1,""],cast:[892,2,1,""],closest_valid_dtype:[893,2,1,""],convert_dtype:[894,2,1,""],default_dtype:[895,2,1,""],default_float_dtype:[896,2,1,""],default_int_dtype:[897,2,1,""],dtype:[898,2,1,""],dtype_bits:[899,2,1,""],dtype_from_str:[900,2,1,""],dtype_to_str:[901,2,1,""],invalid_dtype:[902,2,1,""],is_float_dtype:[903,2,1,""],is_int_dtype:[904,2,1,""],set_default_dtype:[905,2,1,""],set_default_float_dtype:[906,2,1,""],set_default_int_dtype:[907,2,1,""],unset_default_dtype:[908,2,1,""],unset_default_float_dtype:[909,2,1,""],unset_default_int_dtype:[910,2,1,""],valid_dtype:[911,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[888,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[888,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[888,3,1,""]},"ivy.functional.ivy.core.general":{"default":[938,2,1,""],abs:[913,2,1,""],all_equal:[914,2,1,""],arange:[915,2,1,""],arg_names:[916,2,1,""],argmax:[917,2,1,""],argmin:[918,2,1,""],argsort:[919,2,1,""],array:[920,2,1,""],array_equal:[921,2,1,""],arrays_equal:[922,2,1,""],asarray:[912,2,1,""],assert_supports_inplace:[923,2,1,""],broadcast_to:[924,2,1,""],cache_fn:[925,2,1,""],ceil:[926,2,1,""],clip:[927,2,1,""],clip_matrix_norm:[928,2,1,""],clip_vector_norm:[929,2,1,""],concatenate:[930,2,1,""],constant_pad:[931,2,1,""],container_types:[932,2,1,""],copy_array:[933,2,1,""],cross:[934,2,1,""],cumprod:[935,2,1,""],cumsum:[936,2,1,""],current_framework_str:[937,2,1,""],einops_rearrange:[939,2,1,""],einops_reduce:[940,2,1,""],einops_repeat:[941,2,1,""],equal:[942,2,1,""],exists:[943,2,1,""],expand_dims:[944,2,1,""],flip:[945,2,1,""],floor:[946,2,1,""],floormod:[947,2,1,""],fourier_encode:[948,2,1,""],full:[949,2,1,""],gather:[950,2,1,""],gather_nd:[951,2,1,""],get_all_arrays_in_memory:[952,2,1,""],get_min_base:[953,2,1,""],get_min_denominator:[954,2,1,""],get_num_dims:[955,2,1,""],get_referrers_recursive:[956,2,1,""],has_nans:[957,2,1,""],identity:[958,2,1,""],indices_where:[959,2,1,""],inplace_arrays_supported:[960,2,1,""],inplace_decrement:[961,2,1,""],inplace_increment:[962,2,1,""],inplace_update:[963,2,1,""],inplace_variables_supported:[964,2,1,""],is_array:[965,2,1,""],isinf:[966,2,1,""],isnan:[967,2,1,""],linear_resample:[968,2,1,""],linspace:[969,2,1,""],logspace:[970,2,1,""],match_kwargs:[971,2,1,""],matmul:[972,2,1,""],maximum:[973,2,1,""],meshgrid:[974,2,1,""],minimum:[975,2,1,""],multiprocessing:[976,2,1,""],num_arrays_in_memory:[977,2,1,""],one_hot:[978,2,1,""],ones:[979,2,1,""],ones_like:[980,2,1,""],print_all_arrays_in_memory:[981,2,1,""],queue_timeout:[982,2,1,""],repeat:[983,2,1,""],reshape:[984,2,1,""],round:[985,2,1,""],scatter_flat:[986,2,1,""],scatter_nd:[987,2,1,""],set_min_base:[988,2,1,""],set_min_denominator:[989,2,1,""],set_queue_timeout:[990,2,1,""],set_tmp_dir:[991,2,1,""],shape:[992,2,1,""],shape_to_tuple:[993,2,1,""],split:[994,2,1,""],squeeze:[995,2,1,""],stable_divide:[996,2,1,""],stable_pow:[997,2,1,""],stack:[998,2,1,""],supports_inplace:[999,2,1,""],swapaxes:[1000,2,1,""],tile:[1001,2,1,""],tmp_dir:[1002,2,1,""],to_list:[1003,2,1,""],to_numpy:[1004,2,1,""],to_scalar:[1005,2,1,""],transpose:[1006,2,1,""],try_else_none:[1007,2,1,""],unstack:[1008,2,1,""],value_is_nan:[1009,2,1,""],where:[1010,2,1,""],zero_pad:[1011,2,1,""],zeros:[1012,2,1,""],zeros_like:[1013,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1014,1,1,""],adam_step:[1016,2,1,""],adam_update:[1017,2,1,""],execute_with_gradients:[1018,2,1,""],gradient_descent_update:[1019,2,1,""],is_variable:[1020,2,1,""],lamb_update:[1021,2,1,""],lars_update:[1022,2,1,""],optimizer_update:[1023,2,1,""],set_with_grads:[1024,2,1,""],stop_gradient:[1025,2,1,""],unset_with_grads:[1026,2,1,""],variable:[1027,2,1,""],variable_data:[1028,2,1,""],with_grads:[1029,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1014,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1031,2,1,""],float_img_to_uint8_img:[1032,2,1,""],gradient_image:[1033,2,1,""],random_crop:[1034,2,1,""],stack_images:[1035,2,1,""],uint8_img_to_float_img:[1036,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1038,2,1,""],inv:[1039,2,1,""],matrix_norm:[1040,2,1,""],pinv:[1041,2,1,""],svd:[1042,2,1,""],vector_norm:[1043,2,1,""],vector_to_skew_symmetric_matrix:[1044,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1046,2,1,""],logical_not:[1047,2,1,""],logical_or:[1048,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1050,2,1,""],acosh:[1051,2,1,""],asin:[1052,2,1,""],asinh:[1053,2,1,""],atan2:[1055,2,1,""],atan:[1054,2,1,""],atanh:[1056,2,1,""],cos:[1057,2,1,""],cosh:[1058,2,1,""],divide:[1059,2,1,""],erf:[1060,2,1,""],exp:[1061,2,1,""],log:[1062,2,1,""],sin:[1063,2,1,""],sinh:[1064,2,1,""],tan:[1065,2,1,""],tanh:[1066,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1068,2,1,""],maml_step:[1069,2,1,""],reptile_step:[1070,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1071,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1116,2,1,""],copy_nest:[1117,2,1,""],index_nest:[1118,2,1,""],map:[1119,2,1,""],map_nest_at_index:[1120,2,1,""],map_nest_at_indices:[1121,2,1,""],multi_index_nest:[1122,2,1,""],nested_indices_where:[1123,2,1,""],nested_map:[1124,2,1,""],set_nest_at_index:[1125,2,1,""],set_nest_at_indices:[1126,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1128,2,1,""],randint:[1129,2,1,""],random_normal:[1130,2,1,""],random_uniform:[1131,2,1,""],seed:[1132,2,1,""],shuffle:[1133,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1135,2,1,""],reduce_max:[1136,2,1,""],reduce_mean:[1137,2,1,""],reduce_min:[1138,2,1,""],reduce_prod:[1139,2,1,""],reduce_std:[1140,2,1,""],reduce_sum:[1141,2,1,""],reduce_var:[1142,2,1,""]},"ivy.functional.ivy.nn":{activations:[1144,0,0,"-"],layers:[1152,0,0,"-"],losses:[1165,0,0,"-"],norms:[1169,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1145,2,1,""],leaky_relu:[1146,2,1,""],relu:[1147,2,1,""],sigmoid:[1148,2,1,""],softmax:[1149,2,1,""],softplus:[1150,2,1,""],tanh:[1151,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1153,2,1,""],conv1d_transpose:[1154,2,1,""],conv2d:[1155,2,1,""],conv2d_transpose:[1156,2,1,""],conv3d:[1157,2,1,""],conv3d_transpose:[1158,2,1,""],depthwise_conv2d:[1159,2,1,""],dropout:[1160,2,1,""],linear:[1161,2,1,""],lstm_update:[1162,2,1,""],multi_head_attention:[1163,2,1,""],scaled_dot_product_attention:[1164,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1166,2,1,""],cross_entropy:[1167,2,1,""],sparse_cross_entropy:[1168,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1170,2,1,""]},"ivy.graph_compiler":{compiler:[1171,0,0,"-"],globals:[1174,0,0,"-"],graph:[1177,0,0,"-"],helpers:[1179,0,0,"-"],op_logging:[1180,0,0,"-"],param:[1181,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1172,2,1,""],show_graph:[1173,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1175,2,1,""],log_global_inference_rel_times:[1176,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1177,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1177,3,1,""],add_fn_to_dict:[1177,3,1,""],add_param:[1177,3,1,""],compiled:[1177,3,1,""],connect:[1177,3,1,""],debug_info:[1177,3,1,""],get_param:[1177,3,1,""],get_param_recursive:[1177,3,1,""],include_generators:[1177,3,1,""],increment_param_count:[1177,3,1,""],log_all_ops:[1177,3,1,""],params_all_empty:[1177,3,1,""],save_debug_info:[1177,3,1,""],set_param:[1177,3,1,""],show:[1177,3,1,""],show_debug_info:[1177,3,1,""],update_inference_times:[1177,3,1,""],with_array_caching:[1177,3,1,""]},"ivy.graph_compiler.param":{Param:[1181,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1181,3,1,""],count:[1181,3,1,""],depth:[1181,3,1,""],get:[1181,3,1,""],is_var:[1181,3,1,""],ptype:[1181,3,1,""],set:[1181,3,1,""],set_count:[1181,3,1,""],shape:[1181,3,1,""]},"ivy.stateful":{activations:[1186,0,0,"-"],converters:[1189,0,0,"-"],initializers:[1191,0,0,"-"],layers:[1200,0,0,"-"],module:[1212,0,0,"-"],norms:[1214,0,0,"-"],optimizers:[1216,0,0,"-"],sequential:[1222,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1187,1,1,""],GELU:[1188,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1187,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1188,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1190,2,1,""]},"ivy.stateful.initializers":{Constant:[1191,1,1,""],FirstLayerSiren:[1193,1,1,""],GlorotUniform:[1194,1,1,""],KaimingNormal:[1191,1,1,""],Ones:[1196,1,1,""],Siren:[1197,1,1,""],Uniform:[1191,1,1,""],Zeros:[1199,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1191,3,1,""],create_variables:[1191,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1193,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1194,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1191,3,1,""],create_variables:[1191,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1196,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1197,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1191,3,1,""],create_variables:[1191,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1199,3,1,""]},"ivy.stateful.layers":{Conv1D:[1201,1,1,""],Conv1DTranspose:[1202,1,1,""],Conv2D:[1203,1,1,""],Conv2DTranspose:[1204,1,1,""],Conv3D:[1205,1,1,""],Conv3DTranspose:[1206,1,1,""],DepthwiseConv2D:[1207,1,1,""],Dropout:[1208,1,1,""],LSTM:[1209,1,1,""],Linear:[1210,1,1,""],MultiHeadAttention:[1211,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1205,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1206,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1207,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1208,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1209,3,1,""],get_initial_state:[1209,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1210,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1211,3,1,""]},"ivy.stateful.module":{Module:[1213,1,1,""]},"ivy.stateful.module.Module":{__init__:[1213,3,1,""],build:[1213,3,1,""],build_mode:[1213,3,1,""],built:[1213,3,1,""],check_submod_rets:[1213,3,1,""],compile_graph:[1213,3,1,""],compile_on_next_step:[1213,3,1,""],get_mod_key:[1213,3,1,""],mod_depth:[1213,3,1,""],mod_height:[1213,3,1,""],mod_with_top_mod_key_chain:[1213,3,1,""],save_weights:[1213,3,1,""],show_graph:[1213,3,1,""],show_mod_in_top_mod:[1213,3,1,""],show_structure:[1213,3,1,""],show_v_in_top_v:[1213,3,1,""],sub_mods:[1213,3,1,""],track_submod_call_order:[1213,3,1,""],track_submod_rets:[1213,3,1,""],v_with_top_v_key_chains:[1213,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1215,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1215,3,1,""]},"ivy.stateful.optimizers":{Adam:[1217,1,1,""],LAMB:[1218,1,1,""],LARS:[1219,1,1,""],Optimizer:[1220,1,1,""],SGD:[1221,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1217,3,1,""],set_state:[1217,3,1,""],state:[1217,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1218,3,1,""],set_state:[1218,3,1,""],state:[1218,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1219,3,1,""],set_state:[1219,3,1,""],state:[1219,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1220,3,1,""],compile_graph:[1220,3,1,""],compile_on_next_step:[1220,3,1,""],set_state:[1220,3,1,""],show_graph:[1220,3,1,""],step:[1220,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1221,3,1,""],set_state:[1221,3,1,""],state:[1221,3,1,""]},"ivy.stateful.sequential":{Sequential:[1223,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1223,3,1,""]},"ivy.verbosity":{cprint:[1228,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1227,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1216,1217,1218],"02886":1183,"100":[1071,1183,1225],"2021":1183,"2102":1183,"360":[1049,1057,1063,1065],"754":[779,780],"999":[1014,1016,1017,1021,1216,1217,1218],"abstract":[838,853,1183,1216,1220],"boolean":[40,41,797,815,838,873,885,888,902,911,912,914,921,922,957,959,960,964,965,966,967,999,1009,1014,1020,1045,1046,1047,1048,1067,1068,1069,1071],"break":43,"case":[15,18,19,40,41,42,43,838,877,884,887,912,915,984,986,987,1037,1040,1043,1071,1115,1118,1122,1183,1200,1211,1212,1213,1216,1220,1229],"catch":[912,938],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,369,779,781,838,840,841,842,843,844,845,847,848,850,851,852,853,865,866,888,912,916,971,979,1014,1028,1071,1115,1117,1124,1165,1167,1168,1177,1181,1183,1186,1187,1188,1189,1190,1191,1193,1194,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1229],"default":[15,18,19,40,41,42,43,794,795,836,837,838,847,848,855,856,860,861,862,863,864,867,868,869,870,877,880,881,882,887,888,895,896,897,898,912,914,915,917,918,919,928,929,930,931,934,935,936,945,948,949,950,955,957,958,968,970,971,974,976,979,982,983,986,987,990,992,994,996,997,1006,1008,1009,1012,1014,1017,1019,1020,1021,1022,1023,1025,1029,1037,1040,1043,1067,1068,1069,1070,1071,1115,1116,1117,1119,1123,1124,1127,1128,1130,1131,1134,1136,1137,1138,1139,1140,1141,1142,1144,1145,1149,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],"final":[40,41,912,948,969,970,1071,1200,1211,1226],"float":[40,41,42,43,779,780,797,815,822,838,847,848,871,877,880,884,887,888,896,903,912,915,928,929,931,948,949,953,954,970,988,989,990,996,997,1014,1016,1017,1019,1021,1022,1023,1030,1032,1036,1049,1059,1067,1068,1069,1070,1071,1127,1130,1131,1144,1146,1152,1160,1163,1164,1165,1166,1167,1168,1169,1170,1200,1208,1211,1214,1215,1216,1217,1218,1219,1220,1221],"function":[15,40,41,43,371,372,375,376,377,780,781,784,785,795,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1183,1186,1187,1188,1216,1219,1220,1221,1225,1226,1229],"import":[43,1183,1226,1229],"int":[40,41,42,43,779,780,781,794,795,797,815,822,836,837,838,860,861,862,863,864,867,868,869,870,875,876,882,888,897,899,904,912,917,918,919,924,930,931,935,936,939,940,941,944,945,948,949,950,955,958,968,969,970,978,979,983,984,986,987,992,993,994,995,998,1000,1001,1006,1008,1011,1012,1014,1016,1017,1021,1030,1034,1035,1037,1040,1043,1067,1068,1069,1070,1071,1115,1124,1127,1128,1129,1131,1132,1134,1136,1137,1138,1139,1140,1141,1142,1144,1149,1152,1153,1154,1155,1156,1157,1158,1159,1163,1165,1167,1168,1169,1170,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1214,1215],"long":[1152,1162],"new":[40,41,43,888,892,912,913,924,939,940,941,944,948,949,950,951,979,984,986,987,988,989,996,997,998,1012,1014,1017,1019,1021,1022,1023,1030,1032,1034,1036,1049,1051,1053,1056,1058,1064,1066,1071,1115,1125,1126,1127,1128,1169,1170,1183,1189,1190,1200,1210,1214,1215,1216,1217,1218,1219,1220,1221,1226,1229],"public":[912,932],"return":[15,16,17,18,19,40,41,42,43,779,780,781,783,784,785,794,795,797,815,822,836,837,838,847,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,876,877,881,882,883,884,885,887,888,892,893,894,895,896,897,898,899,900,901,902,903,904,911,912,913,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,983,984,985,986,987,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1115,1116,1117,1119,1123,1124,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1183,1189,1190,1200,1209,1210,1216,1220,1225,1226,1229],"short":[1152,1162,1183,1229],"static":[40,41,836,837],"super":1071,"true":[40,41,42,783,784,794,795,836,837,838,912,914,923,925,943,948,957,959,1009,1010,1014,1017,1019,1020,1021,1022,1023,1025,1037,1040,1043,1067,1068,1069,1070,1071,1115,1116,1123,1127,1128,1134,1136,1137,1138,1139,1140,1141,1142,1144,1145,1152,1160,1165,1166,1167,1168,1171,1172,1173,1177,1200,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],"try":[40,41,912,1007,1071],"var":[40,41,1067,1068,1069,1229],"while":[40,41,42,1071],AND:[794,795,1045,1046],But:1229,For:[43,912,915,927,998,1014,1020,1028,1049,1050,1183,1189,1190,1226,1229],Its:[1049,1054],NOT:[1045,1047],One:[40,41,912,940,984,1127,1129,1229],Ones:[1183,1191],Such:[912,932],That:1226,The:[15,16,17,18,19,40,41,42,43,783,784,785,794,795,797,815,822,836,837,838,847,848,854,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,877,880,881,882,883,884,887,888,892,893,894,899,900,901,902,911,912,915,919,920,921,924,925,928,929,930,931,933,934,937,938,942,945,948,950,951,958,961,962,963,965,968,970,972,974,976,979,980,983,984,986,987,988,989,990,993,994,995,996,997,998,1001,1009,1012,1013,1014,1016,1017,1019,1021,1022,1023,1025,1028,1030,1032,1034,1036,1037,1040,1042,1049,1050,1052,1054,1057,1059,1060,1061,1062,1063,1065,1067,1068,1069,1070,1071,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1183,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1226,1229],There:[43,1183,1226],These:[43,1183],Used:[1115,1116,1123,1212,1213],Using:[1183,1184,1229],With:[40,41,1037,1040,1043,1134,1136,1137,1138,1139,1140,1141,1142,1183,1225,1229],__array__:[912,920],__call__:[1200,1211,1212,1213],__del__:1071,__dict__:[1071,1226],__enter__:1071,__exit__:1071,__getitem__:1071,__getstate__:1071,__init__:[40,41,42,43,59,60,79,196,369,370,479,594,838,839,846,847,848,849,850,851,852,853,888,889,890,891,1014,1015,1071,1075,1082,1177,1178,1181,1182,1183,1186,1187,1188,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1229],__iter__:1071,__len__:1071,__next__:1071,__pow__:43,__repr__:1071,_assign_vari:1225,_axi:1071,_base:[1115,1116,1123],_compute_node_da_ratio:1071,_compute_node_strs_da:1071,_concat_unify_arrai:1071,_counter:1071,_cur_framework:[43,1071],_da_direct:1071,_da_directions_flip:1071,_da_step_tim:1071,_da_tim:1071,_da_tune_count:1071,_data:1071,_delta_da_dim_s:1071,_delta_sf:1071,_dict:1071,_dim_siz:1071,_first_da_tune_step:1071,_first_ns_tune_step:1071,_fn:1071,_forward:[1183,1225],_get_kalman_param:1229,_get_prior:1229,_get_some_model:1229,_handle_flat_arrays_in_out:43,_index:[1115,1116,1123],_input_queu:1071,_length:1071,_max_depth:1071,_max_node_dim_step_ratio:1071,_max_node_dim_step_s:1071,_max_split_factor_step_s:1071,_mean_unify_arrai:1071,_min_bas:[912,997,1169,1170,1214,1215],_min_denomin:[912,996],_min_node_dim_s:1071,_min_sf_tune_step:1071,_min_unit_node_tune_step:1071,_model:1229,_native_wrapp:43,_node_mapp:1071,_node_percent_mem:1071,_node_str:1071,_node_str_da_ratio:1071,_node_strs_da:1071,_node_strs_kei:1071,_node_strs_n:1071,_node_util:1071,_ns_step_tim:1071,_ns_time:1071,_ns_tune_count:1071,_num_nod:1071,_num_work:1071,_observed_config:1071,_output_queu:1071,_paramet:1225,_percent_mem_inc_per_sf:1071,_percent_mem_inc_per_unit_da_dim:1071,_percent_util_inc_per_unit_da_dim:1071,_ret_fn:1071,_safety_factor:1071,_save_dir:1071,_shift_da_split:1071,_shift_n:1071,_slice:1071,_step:[1216,1220],_sum_unify_arrai:1071,_timeout:1071,_tune:1071,_tune_da:1071,_tune_n:1071,_tune_step:1071,_unit_da_tune_count:1071,_unroll_step:1229,_with_node_mappig:1071,_worker:1071,_worker_class:1071,_worker_fn:1071,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,838,847,853,1071,1212,1213,1216,1220],abil:1183,abl:[40,41],about:[779,780,781],abov:[43,1127,1129],above_height:[40,41],abs:[267,514,630,912,1071],absolut:[40,41,912,913],abstractmethod:1071,accept:[15,43,1183],access:[40,41,1226],accord:[40,41,779,780,912,931,950,986,987,1006,1011],accordingli:[794,795],accur:[59,369,838,850,851,852,853,888,1014,1177,1181,1191,1193,1194,1196,1197,1199],aco:[723,1049],acosh:[723,1049],across:[40,41,838,847,848,857,858,860,861,862,863,864,870,880,881,912,917,918,921,922,1071,1115,1119],activ:[1145,1146,1147,1148,1149,1150,1151,1183,1187,1188],actual:1226,adam:[1014,1016,1017,1021,1183,1216,1218,1225],adam_step:1014,adam_upd:1014,adapt:[1014,1022,1216,1219],add:[40,41,43,1071,1165,1166,1167,1168,1169,1170,1183,1214,1215,1226],add_fn_to_dict:1177,add_param:1177,added:[43,912,996,997,1222,1223],adding:[912,924],addit:[40,41,43,912,939,940,941,1169,1170,1200,1210],adher:43,adjac:[912,915],adopt:[912,932],affect:[912,915],affin:[1214,1215],after:[912,968,1014,1017,1018,1019,1021,1022,1023,1030,1031,1169,1170,1216,1217,1218,1219,1220,1221,1229],after_1:[912,931,1011],after_n:[912,931,1011],again:43,against:[40,41,1037,1040,1043,1134,1136,1137,1138,1139,1140,1141,1142],agnost:[43,1183,1225,1226],aim:1229,algebra:1037,algorithm:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207,1229],align:[40,41,43,912,924],aliv:[838,872,874,878,912,952,977,981],all:[15,16,17,18,19,40,41,43,95,210,386,495,610,794,836,837,838,847,872,878,912,913,914,921,922,932,945,952,958,981,995,1067,1068,1069,1070,1071,1115,1116,1117,1123,1124,1127,1128,1131,1134,1136,1137,1138,1139,1140,1141,1142,1152,1162,1183,1226,1229],all_depth:[40,41],all_equ:912,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1115,all_tru:[40,41],alloc:[838,1071],allow:[912,969,970,971,1212,1213],allow_dupl:[912,971],alon:[838,877,887,1071,1183],along:[40,41,43,794,795,838,861,862,863,864,867,868,869,870,882,912,919,930,935,936,945,950,968,969,970,983,994,998,1001,1008,1037,1040,1043,1067,1068,1069,1070,1071,1127,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142],alongsid:[1225,1226],alpha:[1144,1146],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,838,1071],also:[40,41,43,912,915,1014,1017,1067,1068,1069,1070,1115,1116,1117,1123,1124,1152,1161,1200,1210,1225],altern:1225,alwai:[40,41,43,1014,1020,1025],among:[40,41],amount:[838,884,1071,1183],angl:[1049,1050,1055],ani:[15,16,17,18,19,40,41,43,783,785,836,837,838,840,843,847,848,850,859,860,863,864,869,912,914,915,920,938,939,940,941,942,943,957,965,971,996,997,1014,1018,1071,1115,1116,1119,1123,1124,1125,1126,1127,1131,1183,1189,1190,1212,1213,1225,1226,1229],anoth:[40,41,888,894,1183],another_backend:43,anyth:[43,1229],anywai:43,apart:43,api:[1183,1184],appear:[912,944],append:[40,41,1071],appli:[15,18,19,40,41,912,939,940,941,1014,1021,1022,1037,1042,1045,1046,1047,1048,1067,1068,1069,1115,1119,1122,1124,1144,1145,1146,1147,1148,1149,1150,1151,1152,1161,1163,1164,1169,1170,1183,1186,1187,1188,1214,1215],applic:[1115,1119,1124,1152,1163,1164,1183,1229],approxim:[43,797,822,1144,1145],arang:[114,267,400,514,630,912,969,970],arbitrari:[40,41,838,867,868,870,1071],arc:[1049,1055],arcco:[1049,1050],arctan:[1049,1054],area:1183,arg:[15,16,17,40,41,43,59,63,838,847,860,864,870,882,912,939,940,941,987,1071,1171,1172,1173,1177,1189,1190,1212,1213],arg_nam:912,arg_stateful_idx:[1171,1172,1173,1177,1212,1213],argmax:[114,400,514,630,912],argmin:[114,400,514,630,912],args_clon:1071,args_dist:1071,args_to_ivi:[15,1183],args_to_n:[15,1183],args_uni:1071,argsort:[630,912],argument:[15,16,17,18,19,40,41,42,43,59,63,836,837,838,847,848,860,864,870,912,915,916,925,938,971,987,1049,1050,1071,1115,1119,1189,1190,1212,1213],aris:[1183,1229],arithmet:[43,1134,1137,1140,1142],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,114,267,400,514,630,779,780,781,783,784,785,794,795,815,822,838,856,857,858,861,862,863,864,867,868,869,870,872,874,878,882,883,888,892,898,903,904,912,913,914,915,917,918,919,921,922,923,924,926,927,928,929,930,931,933,934,935,936,939,940,941,942,944,945,946,947,948,949,950,951,952,955,957,958,959,960,961,962,963,965,966,967,968,969,970,972,973,974,975,977,978,979,980,981,983,984,985,986,987,992,994,995,998,999,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1016,1017,1020,1021,1025,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1071,1115,1117,1124,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1183,1184,1200,1208,1209,1211,1216,1220,1225,1226],arrang:[912,939],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,369,371,372,374,375,376,377,779,780,781,783,784,785,794,795],array_builtin:[43,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835],array_equ:[267,630,912],array_lik:[912,920],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,912],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1183],arraywithgener:[22,1183],arraywithgradi:[24,1183],arraywithimag:[26,1183],arraywithlinalg:[28,1183],arraywithlog:[30,1183],arraywithmath:[32,1183],arraywithmeta:[34,1183],arraywithrandom:[36,1183],arraywithreduct:[38,1183],arriv:[40,41,42],articl:1183,arxiv:1183,as_arrai:[40,41,912,955,992],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[838,856,888,895,896,897,898],as_vari:[40,41],as_zero:[40,41],asarrai:912,asin:[723,1049],asinh:[723,1049],aspect:[1030,1035],assert:[40,41,912,923,1071],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:912,associ:[43,1037,1044],assum:[1226,1229],astyp:888,asynchron:[40,41,42],at_dev:[40,42,838,851,852],at_kei:[40,41],at_key_chain:[40,41],at_nod:1071,atan2:[723,1049],atan:[723,1049],atanh:[723,1049],attent:[1152,1163,1164,1200,1211],attribut:[0,6,40,41,779,780,781,912,980,1013],audienc:[1183,1226],author:1183,avail:[40,41,838,873,875,876,885,912,940,1071],averag:[1014,1016,1017,1021,1067,1068,1069,1134,1137],average_across_step:[1067,1068,1069],avoid:[838,1071,1226],axes:[40,41,43,794,795,838,882,912,917,918,931,944,945,1000,1006,1011,1037,1040,1043,1071,1134,1136,1137,1138,1139,1140,1141,1142],axes_length:[40,41,912,939,940,941],axi:[40,41,794,795,838,840,843,850,861,862,863,864,867,868,869,870,882,912,917,918,919,930,931,934,935,936,944,945,950,968,969,970,983,994,995,998,1000,1001,1008,1011,1037,1043,1071,1127,1133,1134,1136,1137,1138,1139,1140,1141,1142,1144,1149,1165,1167,1168],axis0:[40,41,912,1000],axis1:[40,41,912,1000],back:[1212,1213,1216,1220],backend:[15,17,19,40,41,369,371,372,374,375,376,377,838,873,876,885,888,894,902,911,912,960,964,1014,1017,1019,1021,1022,1023,1028,1071,1183,1184,1189,1190,1216,1217,1218,1219,1220,1221,1225,1226,1229],background:[1183,1226],backprop:1229,backward:[794,795,1225],band:[912,948],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,369,797,822,838,840,841,842,843,844,845,847,848,850,851,852,853,888,912,953,970,988,997,1014,1071,1134,1135,1177,1181,1183,1186,1187,1188,1191,1193,1194,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1229],batch:[40,41,838,880,881,912,945,948,958,1030,1034,1037,1042,1067,1068,1069,1070,1071,1152,1161,1169,1170,1214,1215],batch_shap:[912,945,958,978,1030,1031,1032,1033,1034,1035,1036,1037,1044,1127,1128,1152,1162,1163,1164,1200,1209],batch_siz:[1071,1127,1128,1152,1153,1154,1155,1156,1157,1158,1159],bayesian:1229,becaus:[43,912,915],becom:[912,927,1049,1055,1229],been:[912,939,940,941,1127,1128],befor:[40,41,43,838,882,1067,1068,1069,1071,1115,1124,1134,1136,1137,1138,1139,1140,1141,1142,1152,1163,1164,1229],before_1:[912,931,1011],before_n:[912,931,1011],begin:[1115,1116,1123,1226],behaviour:[43,1229],behind:[1014,1017,1019,1021,1022,1023,1183],being:[40,41,43,912,915,982,990,1071],belong:[40,41],below:[43,1183,1226,1229],below_depth:[40,41],benefit:1183,bernoul:[1152,1160,1200,1208],best:[912,971,1183],beta1:[1014,1016,1017,1021,1216,1217,1218],beta2:[1014,1016,1017,1021,1216,1217,1218],beta:[1169,1170],between:[40,41,42,779,780,912,915,1115,1119,1127,1129,1165,1167,1168,1216,1218],bia:[1152,1161,1162,1200,1201,1202,1203,1204,1205,1206,1207,1210],bias_initi:[1200,1201,1202,1203,1204,1205,1206,1207,1210],bilinear:[1030,1031],bilinear_resampl:[153,326,442,560,708,1030],bilinearli:[1030,1031],binari:[1165,1166],binary_cross_entropi:1165,bit:[369,779,780,781,888,899,1030,1032,1036,1183],bitwise_oper:[0,7,8],block:[1183,1226],bool:[15,18,19,40,41,42,43,783,784,785,794,795,836,837,838,856,869,873,877,882,885,887,888,898,912,914,921,922,935,938,942,943,948,955,957,965,971,992,994,1008,1009,1010,1014,1017,1018,1019,1020,1021,1022,1023,1025,1037,1040,1043,1067,1068,1069,1070,1071,1115,1116,1117,1119,1123,1124,1127,1128,1134,1136,1137,1138,1139,1140,1141,1142,1144,1145,1152,1160,1189,1190,1200,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],both:[43,912,934],bottom:1183,boundari:[40,41,1127,1131],branch:[836,837],brittl:43,broadcast:[40,41,43,783,785,794,795,797,815,822,912,924,942,973,974,975,983,1037,1040,1043,1049,1055,1059,1134,1136,1137,1138,1139,1140,1141,1142],broadcast_to:[267,630,912],build:[1071,1183,1200,1211,1212,1213],build_mod:[1200,1211,1212,1213],builder:1183,built:[838,912,915,1071,1200,1211,1212,1213],builtin:43,builtin_ab:[222,797],builtin_add:[222,797],builtin_and:[222,797],builtin_bool:[222,797],builtin_contain:[222,797],builtin_deepcopi:[222,797],builtin_dir:[222,797],builtin_eq:[222,797],builtin_float:[222,797],builtin_floordiv:[222,797],builtin_g:[222,797],builtin_getattr:[222,797],builtin_getattribut:[222,797],builtin_getitem:[222,797],builtin_gt:[222,797],builtin_int:[222,797],builtin_invert:[222,797],builtin_l:[222,797],builtin_lt:[222,797],builtin_mul:[222,797],builtin_n:[222,797],builtin_neg:[222,797],builtin_or:[222,797],builtin_po:[222,797],builtin_pow:[43,222,797],builtin_radd:[222,797],builtin_rand:[222,797],builtin_rfloordiv:[222,797],builtin_rmul:[222,797],builtin_ror:[222,797],builtin_rpow:[222,797],builtin_rsub:[222,797],builtin_rtruediv:[222,797],builtin_rxor:[222,797],builtin_setitem:[222,797],builtin_some_op:43,builtin_sub:[222,797],builtin_truediv:[222,797],builtin_xor:[222,797],bypass:1226,cach:[838,854,912,925],cache_fn:912,calcul:[40,41,42,43,797,815,822,1049,1059],call:[43,838,882,912,982,990,1007,1014,1018,1071,1115,1116,1119,1123,1200,1211,1212,1213,1216,1220,1226,1229],callabl:[40,41,836,837,838,847,848,882,912,925,938,940,971,1007,1067,1068,1069,1070,1071,1115,1119,1120,1121,1123,1124,1152,1163],can:[43,838,880,881,882,912,984,1030,1032,1071,1183,1225,1226,1229],cancel_join_thread:1071,captur:1183,cast:[40,41,114,267,400,514,630,888,912,930,1030,1032,1036],catch_except:[912,938],categori:43,ceil:[267,630,912,915],cell:[1152,1162,1200,1209],certain:[40,41,912,915,969,970],chain:[40,41,1067,1068,1069,1222,1223],chang:[838,912,984,1071,1115,1117,1124,1183,1225],channel:[912,948,1030,1032,1033,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210],check:[15,16,17,18,19,40,41,838,877,887,888,893,902,911,912,923,943,957,965,999,1009,1014,1020,1071,1115,1116,1123,1183,1226],check_nest:[1115,1123],check_shap:[40,41],check_submod_ret:[1212,1213],check_typ:[40,41],choic:[1183,1226],choleski:[712,1037],choos:[912,1010,1049,1055,1183],choose_random_framework:59,chosen:[40,41,912,915,1010],chunk:[838,880,881,882,1071],chunk_siz:[838,882,1071],circl:[1049,1050,1052],clark:1183,clear:[838,854,1071],clear_framework_stack:59,clear_mem_on_dev:[622,838],click:1183,clip:[40,41,267,630,912,928,929,973,975,1183],clip_matrix_norm:912,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,912],clipped_delta:1071,clone:[40,41,838,857,858,859,860,1071],clone_arrai:1071,clone_it:1071,clone_nest:1071,clonedit:1071,cloneditem:1071,clonednest:1071,close:[43,1030,1035,1049,1052,1071,1229],closest:[888,893],closest_valid_dtyp:888,code:[40,41,42,43,1183,1184,1225,1226],codebas:[838,880,881,1071,1183,1226,1229],collect:[15,40,41,797,836,838,888,912,1014,1030,1037,1045,1049,1071,1115,1127,1134,1144,1152,1165,1169,1186,1200,1214,1216],color:[40,41,42,1227,1228],column:[912,958],combin:[40,41,42,1030,1035,1183,1229],combined_batch_s:1071,come:1226,command:1183,commit:1229,common:[40,41,1049,1055],common_key_chain:[40,41],commun:[1183,1226],compar:[40,41,797,815,912,914,921,922],comparison_oper:[0,9,10],compat:[43,783,785,794,795,797,815,822,912,942,984,1049,1059,1183,1229],compil:[267,400,630,1172,1173,1177,1183,1212,1213,1216,1217,1218,1219,1220,1221],compile_graph:[1171,1183,1212,1213,1216,1220],compile_on_next_step:[1212,1213,1216,1217,1218,1219,1220,1221],complet:[40,41,1071],complex:[1226,1229],compon:[912,934],composit:43,comput:[40,41,783,785,838,882,912,928,929,935,936,942,972,1014,1016,1017,1018,1019,1021,1022,1023,1025,1027,1030,1033,1037,1038,1039,1040,1041,1043,1045,1046,1047,1048,1049,1050,1052,1054,1055,1057,1060,1061,1062,1063,1065,1115,1119,1134,1135,1136,1137,1138,1139,1140,1141,1142,1152,1153,1154,1155,1156,1157,1158,1159,1161,1163,1165,1166,1167,1168],concat:[40,41,838,867,868,869,870,882,912,948,1071],concaten:[40,41,114,267,400,514,630,912,948,1071,1183],concatten:[40,41,838,867,868,869,870,882,1071],condit:[836,837,912,1010,1115,1123],conditon:[1115,1123],config:[40,41,1071],config_list:1071,configur:[40,41],conjunct:1226,connect:[1177,1200,1210,1211],consid:[40,41,1037,1043,1225,1229],consist:[40,41,838,870,1071,1134,1135,1212,1213,1226],constant:[838,847,848,912,931,1071,1115,1119,1165,1166,1167,1168,1169,1170,1191,1192,1196,1199,1212,1213,1214,1215,1226],constant_kwarg:1071,constant_pad:[267,514,630,912],constitu:[40,41],construct:[912,1001,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225],constructor:[40,41,42,912,916,1222,1223],consum:[838,1071],cont_feat_dim:[1152,1163],contaienr:[40,41],contain:[15,18,19,42,43,783,784,785,794,795,797,815,822,838,857,861,882,888,892,912,913,917,918,919,927,928,929,932,942,957,973,975,985,996,997,1014,1016,1017,1019,1021,1022,1023,1049,1059,1067,1068,1069,1070,1071,1127,1128,1134,1136,1137,1138,1140,1142,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[630,912],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[912,976,1152,1163,1200,1211],context_dim:[1200,1211],contextmanag:[59,60],continu:[43,1071,1226],contract:[40,41,1134,1135],contribut:[1183,1184],contributor:1183,control:1183,conv1d:[183,357,466,767,1152,1183,1200],conv1d_transpos:[183,357,466,767,1152],conv1dtranspos:[1183,1200],conv2d:[183,357,466,585,767,1152,1183,1200],conv2d_transpos:[183,357,466,767,1152],conv2dtranspos:[1183,1200],conv3d:[183,357,466,585,767,1152,1183,1200],conv3d_transpos:[183,357,466,767,1152],conv3dtranspos:[1183,1200],convent:[40,41,1134,1135],conver:[838,854,865,877,884,887,1071],convers:[16,17,18,19,40,41,1071,1183],convert:[15,16,17,18,19,40,41,43,838,865,866,888,894,900,901,912,993,1004,1005,1030,1032,1036,1037,1044,1071,1115,1117,1124,1183,1190],convert_dtyp:888,convolut:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],cool:43,cooler:43,coordin:[912,974,1049,1050,1052,1055],copi:[40,41,912,933,1071,1115,1117],copy_arrai:[630,912],copy_nest:1115,core:[797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1183],correct:[43,1183,1226],correctli:[40,41,1037,1040,1043,1049,1055,1134,1136,1137,1138,1139,1140,1141,1142],correspond:[40,41,43,797,822,912,930,1127,1128],cos:[723,912,948,1049,1050,1065,1226],cosh:[723,1049],cosin:[1049,1050,1051,1057,1058],cost:[1014,1016,1017,1019,1021,1022,1023,1067,1068,1069,1070],cost_fn:[1067,1070],could:1229,count:[40,41,794,795,1071,1134,1139,1141,1181],cprint:1227,cpu:[40,41,43,838,875,877,883,884,887,912,915,920,950,951,958,969,970,978,979,980,986,987,1012,1013,1071,1127,1128,1129,1130,1131,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223,1225,1226],creat:[40,41,838,847,848,912,915,920,949,950,951,958,969,970,978,979,980,986,987,1003,1012,1013,1014,1027,1071,1127,1128,1129,1130,1131,1183,1189,1190,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1229],create_if_abs:[40,41],create_vari:1191,creation:[40,41,42,43],crop:[1030,1034],crop_siz:[1030,1034],cross:[267,630,912,1165,1166,1167,1168],cross_entropi:1165,cuda:[40,41,838,847,866,883,912,915,920,950,951,958,969,970,978,979,980,986,987,1012,1013,1071,1127,1128,1129,1130,1131,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223],cumprod:[114,267,400,630,912],cumsum:[630,912],cumul:[912,935,936],current:[40,41,42,43,838,847,871,872,874,878,888,894,902,911,912,937,952,960,964,977,981,1071,1115,1116,1123,1183,1229],current_framework:59,current_framework_str:[630,912,1071],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1177,d_in:[1152,1153,1154,1155,1156,1157,1158],d_out:[1152,1153,1154,1155,1156,1157,1158],da_can_termin:1071,da_dim_s:[838,1071],da_direct:1071,da_tune_step:[838,1071],dai:1229,daniel:1183,data:[40,41,42,43,780,781,783,784,785,794,795,797,815,822,838,840,841,842,843,844,845,850,851,852,866,888,892,893,894,898,899,900,901,902,903,904,911,912,915,920,942,949,958,965,979,980,984,995,999,1012,1013,1014,1020,1028,1049,1059,1071,1152,1161,1183],data_format:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],data_type_funct:[369,371,372,779,780,781],dataset:[40,41],datatyp:[40,41,888,893,903,904],dcdw:[1014,1016,1017,1019,1021,1022],debug_info:1177,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1014,1021,1022,1216,1218,1219],decay_lambda:[1014,1021,1022,1216,1218,1219],decid:[40,41,1229],decompos:[1037,1038],decomposit:[1037,1038,1042],decor:43,decrement:[912,961],dedic:[1014,1028,1189,1190],deep:[40,41,1183],deep_copi:[40,41],deeper:[838,860,864,870,1071,1115,1124,1183],deepli:[1115,1117],def:[43,60,79,196,370,479,594,839,846,849,889,890,891,1015,1071,1075,1082,1178,1182,1183,1192,1195,1198,1225,1226,1229],default_dev:43,default_devic:838,default_dtyp:[43,888],default_float_dtyp:888,default_int_dtyp:888,default_key_color:[40,41,42],default_nod:1071,default_v:[912,938],defaultdevic:[838,839],defaultdtyp:[888,889],defaultfloatdtyp:[888,890],defaultintdtyp:[888,891],defer:43,defin:[43,912,934,978,980,1013,1127,1129],degre:[1049,1057,1063,1065],del:1071,delta:[1014,1016,1071,1177],delta_dim_s:1071,delta_percent_mem:1071,delta_sf:1071,delta_util:1071,demo:1183,denomin:[912,947,954,989,996,997,1169,1170,1214,1215],dens:[1200,1210],depend:[43,797,822,912,1010,1037,1042,1183],depth:[40,41,838,860,864,870,912,956,978,1071,1115,1124,1177,1181,1212,1213],depth_cutoff:[40,41],depthwis:[1152,1159,1200,1207],depthwise_conv2d:[183,357,466,585,767,1152],depthwiseconv2d:[1183,1200],deriv:[1014,1016,1017,1019,1021,1022,1023,1115,1117,1124,1183,1212,1216,1220,1222],descend:[1037,1042],descent:[1014,1019,1216,1221],describ:[40,41,1134,1135],design:[1183,1184],desir:[40,41,838,883,888,892,912,915,920,958,959,979,980,1012,1013,1030,1035,1071,1134,1136,1137,1138,1140,1142],desired_aspect_ratio:[1030,1035],desired_percent_increas:1071,detail:1229,detect:[40,41,1115,1116,1123],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,783,784,794,795,797,822,838,873,875,876,885,888,892,893,899,902,903,904,911,912,914,915,920,921,922,957,960,964,965,999,1009,1014,1020,1049,1059,1067,1068,1069,1070,1071,1152,1163],dev:[40,41,42,43,107,261,507,622,838,841,842,844,845,847,848,851,852,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,877,878,879,880,881,882,883,884,887,912,915,920,950,951,958,969,970,978,979,980,986,987,1012,1013,1014,1029,1127,1128,1129,1130,1131,1189,1190,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223],dev_clon:[40,41,838],dev_clone_arrai:838,dev_clone_it:838,dev_clone_nest:838,dev_dist:[40,41,838],dev_dist_arrai:838,dev_dist_it:838,dev_dist_nest:838,dev_from_str:[43,107,261,507,622,838],dev_mapp:838,dev_str:[40,41],dev_to_str:[107,261,507,622,838],dev_unifi:838,dev_unify_arrai:838,dev_unify_it:838,dev_unify_nest:838,dev_util:838,devclonedit:838,devcloneditem:838,devclonednest:838,devdistit:838,devdistitem:838,devdistnest:838,develop:[1183,1226,1229],deviat:[40,41,1127,1130,1134,1140,1169,1170,1214,1215],devic:[21,40,41,43,840,841,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,912,915,920,949,950,951,958,969,970,978,979,980,986,987,1012,1013,1014,1029,1127,1128,1129,1130,1131,1183,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223],devmanag:[838,846],devmapp:[838,848],devmappermultiproc:838,diag:[1037,1042],diagon:[912,958],dict:[15,16,17,18,19,40,41,42,838,840,843,847,848,850,860,861,862,863,864,912,939,940,941,971,1067,1068,1069,1071,1115,1117,1118,1119,1122,1124,1189,1190],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,779,780,838,857,858,861,862,1071,1152,1161,1183,1226,1229],differenti:[1183,1226],dilat:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],dim:[40,41,43,912,978,1030,1031,1035,1037,1042,1071,1200,1211],dim_siz:[40,41,838,1071],dimens:[40,41,42,794,795,838,869,912,924,930,934,939,940,941,944,948,955,968,978,983,984,994,995,998,1006,1008,1030,1034,1037,1040,1042,1043,1067,1068,1069,1070,1071,1127,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1149,1152,1153,1154,1155,1156,1157,1158,1159,1162,1165,1167,1168,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211],dimension:[40,41,794,795,912,994,995,1037,1042],direct:1071,directli:[43,1115,1124,1226,1229],directori:[912,991,1002],discret:[1165,1167],disk:[40,41,1030,1032],distanc:[912,915],distribut:[40,41,838,857,861,862,863,864,1071,1127,1128,1129,1130,1131,1152,1160,1200,1208,1212,1213],distribute_nest:1071,distributedarrai:[40,41],distrubt:[1165,1167],dive:[1183,1226],divid:[40,41,912,994,996,1049],dividend:[1049,1059],divis:[912,947,954,989,996,997,1014,1016,1017,1021,1049,1059,1216,1217,1218],divisor:[1014,1016,1017,1021,1049,1059,1216,1217,1218],doc:1183,docstr:43,doe:[40,41,43,912,915,994,1225],doesn:1183,doing:43,domain:[1049,1050],don:1183,door:1229,dot:[1037,1039,1152,1163,1164,1200,1211],down:1225,downscal:[912,928,929],drag:[1183,1229],draw:[1127,1128,1130,1131],drawn:[1127,1128,1129,1130,1131],drop:[1183,1229],dropout:[1152,1183,1200,1211],dropout_r:[1200,1211],ds_tune_step:838,dtype:[40,41,43,114,267,369,371,372,400,514,630,779,780,781,892,893,894,895,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,915,920,949,958,978,979,980,1012,1013],dtype_bit:[114,267,400,514,630,888],dtype_from_str:[43,114,267,400,514,630,888],dtype_in:[888,894,899,900,901,902,903,904,911],dtype_to_str:[114,267,400,514,630,888],duplic:[40,41],dure:[40,41,43,836,837,912,1007,1014,1016,1017,1021,1067,1068,1069,1070,1212,1213,1216,1217,1218,1220],dynam:[836,837],each:[40,41,42,43,783,784,785,797,822,838,847,848,857,858,859,860,861,862,863,869,881,882,912,913,914,919,931,942,983,994,998,1001,1011,1014,1017,1019,1021,1022,1023,1030,1033,1037,1042,1049,1052,1059,1061,1062,1071,1115,1119,1127,1128,1134,1135,1152,1153,1154,1155,1156,1157,1158,1159,1160,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1226],eager:1226,easi:1229,easili:1183,econom:1229,ecosystem:1183,edg:[912,927,931,1011],effect:[1014,1023],effective_grad:[1014,1023],effici:1229,einop:[40,41,912,939,940,941],einops_rearrang:[40,41,912],einops_reduc:[40,41,912],einops_repeat:[40,41,912],einstein:[40,41,1134,1135],einsum:[40,41,169,345,454,575,747,1134],either:[40,41,912,938,971,974,976,1067,1068,1069,1070,1071,1200,1211,1212,1213,1226],eleg:1071,element:[40,41,43,783,784,785,794,795,797,815,822,838,859,863,869,888,892,912,913,915,917,918,919,921,922,926,927,928,929,935,936,942,945,946,947,958,959,973,975,983,985,994,1005,1010,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1071,1134,1135,1137,1139,1141,1144,1145,1146,1147,1148,1149,1150,1151,1152,1160,1200,1208],elementwis:[40,41,797,815],elementwise_affin:[1214,1215],elementwise_funct:[374,375,376,377,783,784,785],elemtn:[1127,1128],elif:1071,els:[912,923,938,943,1071],elsewher:[912,1010],emphas:1183,empti:[40,41,1071],enabl:[40,41,42,1183],encapsul:[779,781],encod:[912,948,1030,1032],end:[912,915,1183,1226],ensur:43,entir:[40,41,794,795,838,882,1071,1183,1200,1209],entri:[40,41,912,945,969,970,994,995],entropi:[1165,1166,1167,1168],enumer:1071,environ:1183,eps:[369,779,780],epsilon:[1014,1016,1017,1021,1165,1166,1167,1168,1169,1170,1214,1215,1216,1217,1218],equal:[40,41,83,374,483,598,783,784,912,914,921,922,931,994,1011,1049,1057,1063,1065,1127,1131],equality_matrix:[912,914],equat:[40,41,1134,1135],equival:[912,915,1049,1065],erf:[450,723,1049],error:[40,41,838,912,995,1049,1060,1071,1144,1145,1212,1213,1216,1220],essenti:43,etc:[40,41,43,838,883,912,915,920,950,951,958,969,970,978,979,980,986,987,1012,1013,1071,1127,1128,1129,1130,1131,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223,1229],evalu:[40,41,794,795,912,974,1115,1116,1123],even:1229,evenli:[40,41,912,915,969,970,994],everi:[912,914,1229],exact:[40,41],exampl:[43,836,837,912,927,998,1183,1225,1226,1229],example_input:[836,837],exc_tb:1071,exc_typ:1071,exc_val:1071,exce:[912,975],except:[40,41,44,47,794,795,912,915,923,930,938,1007,1071],excess_s:1071,excit:[1183,1226],exclud:[59,61,912,915,1127,1131],exclus:[40,41,912,935,965,1014,1020,1127,1129],execut:[43,912,1007,1226],execute_with_gradi:[150,321,437,555,702,1014,1183,1225],exist:[40,41,912,938,1071,1183,1216,1220,1229],exp:[723,1049],expand:[40,41,912,944,948],expand_dim:[40,41,267,630,912,1071],expect:[912,916],explain:1226,explicitli:[1200,1209,1211,1212,1213,1226],expon:[43,797,822,912,997],exponenti:[43,797,822,1049,1060,1061],expos:[912,920,932],express:[912,974],exsit:[40,41],extend:43,extra:[40,41,42,1014,1018],eye:[1037,1039],fabian:1183,fabio:1183,factor:[838,847,880,881,882,1014,1016,1017,1021,1022,1037,1042,1071,1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207,1216,1217,1218,1219],falck:1183,fall:[1212,1213,1216,1220],fallback_to_non_compil:[1212,1213,1216,1220],fals:[15,18,19,40,41,42,59,66,67,68,69,70,783,784,794,795,838,856,869,877,882,887,888,895,896,897,898,912,914,935,938,943,948,955,965,971,992,994,1008,1010,1014,1017,1018,1019,1020,1021,1022,1023,1037,1040,1043,1067,1068,1069,1070,1071,1115,1116,1117,1119,1123,1124,1134,1136,1137,1138,1139,1140,1141,1142,1171,1172,1173,1177,1181,1189,1190,1212,1213,1216,1217,1218,1219,1220,1221],fan_in:1191,fan_mod:1191,fan_out:1191,far:[1115,1116,1123,1225],faster:[836,837],favourit:[1183,1225],feasibl:1229,feat_dim:[1152,1163,1164],fed:[838,882,1071],feed:[838,882,1071],field:1229,file:[40,41,43,912,991,1002,1212,1213],filepath:[40,41],fill:[40,41,912,949,979,1012,1127,1129],fill_valu:[912,949],filter:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207,1229],filter_s:[1200,1201,1202],filter_shap:[1200,1203,1204,1205,1206,1207],find:[40,41,1229],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,195,196,369,370,478,479,593,594,779],finish:[1183,1229],finit:[783,784],first:[40,41,783,785,797,815,836,837,838,869,912,921,930,934,942,969,970,998,1000,1014,1018,1037,1042,1067,1068,1069,1070,1071,1115,1116,1123,1127,1133,1134,1139,1141,1200,1211,1212,1213,1216,1220,1226,1229],firstlayersiren:[1183,1191],firstli:[1226,1229],fist:[838,882,1071],fit:[40,41,912,983,1030,1035],fkt:1229,flag:[40,41,1014,1020],flat:[40,41,43,912,983,986],flat_list:[40,41],flatten:[40,41,912,948,983,1037,1043,1134,1136,1137,1138,1140,1142],flatten_key_chain:[40,41,1212,1213],flexibl:[1183,1226],flip:[40,41,114,267,400,514,630,912],float32:[43,888,892,900,901,912,915,920,958,979,980,1012,1013],float_dtyp:[888,896,906],float_img_to_uint8_img:1030,floor:[267,630,912,947,1071],floormod:[267,630,912],fluid:1229,fname:[1171,1173,1177,1212,1213],folder:[43,1183],follow:[40,41,43,779,781,838,882,912,961,962,963,996,997,1014,1017,1019,1021,1022,1023,1071,1115,1119,1124,1152,1163,1164,1183,1200,1210,1216,1220],followng:[779,780],fomaml_step:1067,forget:[1014,1016,1017,1021,1216,1217,1218],fork:[912,976],forkserv:[912,976,1071],form:[15,16,17,18,19,40,41,912,920,1014,1017,1019,1021,1022,1023,1115,1117,1124,1152],format:[40,41,43,838,856,888,892,894,898,912,915,920,958,979,980,1012,1013,1071,1134,1135,1183,1225,1226],format_fn:[40,41],format_key_chain:[40,41],forward:[1212,1213,1216,1220,1225],found:[40,41,42],fourier:[912,948],fourier_encod:912,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,86,96,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,163,164,165,166,167,168,170,171,172,173,174,175,176,179,181,182,184,185,186,187,188,189,190,196,197,198,201,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,327,328,329,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,370,371,372,375,376,377,387,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,451,453,455,456,457,458,459,460,461,464,465,467,468,469,470,471,472,473,479,480,481,484,485,486,496,508,509,510,511,512,513,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,556,557,558,559,561,562,563,565,566,567,571,572,573,574,576,577,578,579,580,581,582,586,587,588,594,595,596,599,600,601,611,623,624,625,626,627,628,629,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,709,710,711,713,714,715,716,717,718,720,721,722,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,741,742,743,744,745,746,748,749,750,751,752,753,754,757,758,759,760,761,762,763,765,766,768,769,770,771,772,773,774,780,781,784,785,795,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1170,1172,1173,1175,1176,1178,1182,1183,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1228,1229],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1071,framewrk:[912,976],freeli:43,frequenc:[912,948],from:[40,41,42,43,794,795,838,847,848,882,888,894,912,938,945,950,951,958,984,995,1003,1010,1014,1017,1021,1030,1034,1067,1068,1069,1070,1071,1115,1117,1124,1127,1128,1129,1130,1131,1134,1139,1141,1152,1160,1163,1183,1189,1190,1200,1208,1211,1216,1220,1225,1226],from_cal:[1212,1213],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[114,267,400,514,630,779,780,912,1183],full_matric:[1037,1042],fulli:[43,1183,1200,1210,1211,1225],func:[40,41,836,837,838,882,912,925,1014,1018,1071],further:1229,furthermor:1229,futur:1229,gain:1191,gamma:[1169,1170],gather:[40,41,114,267,400,514,630,912,951],gather_nd:[40,41,114,267,400,514,630,912],gauss:[1049,1060],gaussian:[1144,1145],geglu:[1183,1186],gelu:[355,463,756,1144,1183,1186],gener:[23,40,41,43,836,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1020,1127,1129,1131,1132,1183,1216,1220],geometr:[912,948],get:[40,41,779,780,781,838,847,848,856,871,872,877,881,884,887,888,898,899,912,916,952,953,954,982,1071,1181,1183,1200,1209,1229],get_all_arrays_in_memori:912,get_all_arrays_on_dev:838,get_framework:59,get_initial_st:[1200,1209],get_min_bas:912,get_min_denomin:912,get_mod_kei:[1212,1213],get_num_dim:[630,912],get_param:1177,get_param_recurs:1177,get_referrers_recurs:912,getfullargspec:1071,gist:1183,give:[912,919,984,1226],given:[40,41,43,838,871,877,880,881,882,884,887,888,892,912,915,919,920,927,935,936,945,951,969,970,979,980,983,986,987,994,1001,1006,1008,1012,1013,1014,1016,1017,1019,1021,1022,1023,1037,1039,1044,1049,1050,1071,1115,1120,1121,1127,1130,1131,1133,1134,1137,1139,1140,1141,1142,1152,1153,1154,1155,1156,1157,1158,1159,1189,1190,1229],global:[40,41,42,838,847,848,855,880,881,882,888,895,896,897,912,937,953,954,982,988,989,990,996,997,1014,1029,1071,1169,1170,1175,1176,1183,1214,1215],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1183,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210],got:1183,gpu0:43,gpu2:43,gpu:[838,873,876,1071],gpu_is_avail:[838,1071],grad:[1183,1216,1220,1225],gradient:[25,40,41,838,882,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1033,1067,1068,1069,1070,1183,1216,1217,1218,1219,1220,1221,1225,1229],gradient_descent_upd:[1014,1067,1068,1069,1070],gradient_imag:[153,326,442,560,708,1030],gradienttrack:[1014,1015],graph:[1014,1017,1019,1021,1022,1023,1171,1172,1173,1178,1183,1212,1213],graph_compil:[1171,1172,1173,1174,1175,1176,1177,1181],greater:[40,41,912,915,946,995,1127,1131],green:[40,41,42,1227,1228],grid:[912,974],group:[1030,1035],guid:[1183,1184,1229],gym:1183,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1229,half:[912,915,1071,1127,1131],hand:1183,handl:[40,41,42,43,836,837,838,854,856,865,866,877,884,887,1014,1017,1019,1021,1022,1023,1071,1216,1217,1218,1219,1220,1221],has:[40,41,43,912,998,1049,1054],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,912],hasattr:1071,have:[40,41,43,779,780,783,784,785,794,795,797,815,822,912,930,934,939,940,941,942,949,998,1014,1020,1028,1037,1042,1049,1059,1071,1183,1225,1226],hdf5:[40,41,1212,1213],head:[1152,1163,1200,1211],head_dim:[1200,1211],height:[1030,1035],height_cutoff:[40,41],help:[59,369,838,850,851,852,853,888,1014,1177,1181,1183,1191,1193,1194,1196,1197,1199],helper:1183,here:[43,1183],hidden:[1152,1162,1200,1209],hierarch:[912,932],hierarchi:[40,41],high:[40,41,1127,1129,1131],higher:[1014,1017,1019,1021,1022,1023,1037,1042],highest:[1127,1129],highest_util:1071,highest_util_nod:1071,highli:1183,highlight:1229,highlight_subgraph:[1171,1173,1177],hint:43,hkt:1229,hold:[888,892,912,915,920,986,987],host:1183,hot:[912,978],how:[1183,1200,1211,1212,1213,1226,1229],howev:[43,1226],http:1229,hyperbol:[1049,1051,1053,1056,1058,1064,1066,1144,1151],hypothet:1229,icon:1183,idea:1183,ident:[40,41,43,114,267,400,514,630,912],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[779,780],if_exist:[40,41],ignor:[40,41,1216,1220],ignore_key_error:[40,41],ignore_miss:[1216,1220],ignore_non:[40,41],iinfo:[78,195,369,478,593,779],imag:[27,912,968,1031,1032,1033,1034,1035,1036,1152,1153,1154,1155,1156,1158,1159,1183,1229],image_dim:[1030,1034],imkkhk:1229,immedi:[1183,1226,1229],implement:[43,797,822,1183,1226,1229],in_featur:[1152,1161],includ:[40,41,43,794,795,912,915,957,996,997,1009,1115,1116,1127,1131,1200,1210,1211,1214,1215,1225],include_deriv:[1115,1117,1124],include_empti:[40,41],include_gener:[1171,1172,1173,1177,1212,1213],include_inf:[40,41,912,957,1009],include_nest:[1115,1116],include_self:[40,41],inclus:[1127,1129],incom:[1152,1161],increas:[838,860,864,870,912,931,944,1011,1071,1115,1124],increasingli:1229,increment:[912,962,1071],increment_param_count:1177,inde:1183,indent:[40,41,42],independ:[1127,1128],index:[40,41,912,917,918,950,951,974,995,998,1115,1118,1120,1121,1122,1125],index_nest:1115,indic:[40,41,912,917,918,919,950,951,959,978,986,987,1115,1116,1118,1120,1121,1122,1123,1125,1126,1127,1128,1144,1149,1152,1153,1154,1155,1156,1157,1158,1159,1169,1170,1200,1201,1202,1203,1204,1205,1206,1207,1212,1213],indices_wher:[114,267,400,630,912],inevit:1229,inf:[40,41,912,957,966,1009,1049,1054],infer:[836,837,912,945,955,958,984,992,1030,1034,1226,1229],infin:[783,784,912,966],inform:[779,780,781,1014,1025],init_c:[1152,1162],init_h:[1152,1162],init_on_first_step:[1216,1220],initi:[40,41,42,59,369,838,850,851,852,853,888,1014,1071,1152,1162,1177,1181,1183,1193,1194,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1216,1220],initialz:[1212,1213],inner:[1067,1068,1069,1070],inner_batch_fn:[1067,1068,1069],inner_batch_shap:[1152,1161],inner_cost_fn:[1067,1068,1069],inner_grad_step:[1067,1068,1069,1070],inner_learning_r:[1067,1068,1069,1070],inner_optimization_step:[1067,1068,1069,1070],inner_v:[1067,1068,1069],inp:1071,inplac:[40,41,912,923,960,964,999,1014,1017,1019,1021,1022,1023,1189,1190,1216,1217,1218,1219,1220,1221],inplace_arrays_support:912,inplace_decr:[114,267,400,514,630,912],inplace_incr:[114,267,400,514,630,912],inplace_oper:[0,11,12],inplace_upd:[40,41,114,267,400,514,630,912,1189,1190],inplace_variables_support:912,input:[15,18,19,40,41,42,43,783,784,785,794,795,836,837,838,847,848,855,856,857,860,861,864,870,882,883,888,892,893,895,896,897,898,899,903,904,912,913,914,917,918,919,921,922,923,924,926,927,928,929,930,931,933,935,936,938,939,940,941,942,943,944,945,946,947,948,955,957,958,959,961,962,963,965,966,967,968,972,973,974,975,983,985,992,993,995,998,999,1000,1001,1003,1004,1005,1006,1008,1009,1011,1014,1018,1020,1025,1029,1030,1031,1032,1033,1034,1036,1037,1040,1042,1043,1045,1046,1047,1048,1049,1051,1053,1054,1056,1057,1058,1059,1063,1064,1065,1066,1067,1068,1069,1070,1071,1127,1128,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1169,1170,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1214,1215,1226],input_ax:[838,882,1071],input_channel:[1200,1201,1202,1203,1204,1205,1206,1209,1210],input_queu:1071,inputs_split:1071,insert:[912,944],insid:43,inspect:1071,inspir:1229,instal:1183,instanc:[15,16,17,18,19,40,41,43,797,815,822,838,847,1071,1189,1190,1222,1223],instead:[40,41,1134,1136,1137,1138,1139,1140,1141,1142,1229],int32:43,int64:[888,892,912,915,920,958,979,980,1012,1013],int_dtyp:[888,897,907],integ:[40,41,779,781,794,795,888,904,912,915,926,946,985,994,1037,1043,1127,1129,1132],integr:1183,intend:43,inter:1183,interchang:[40,41,912,1000],interest:1183,interfac:[912,920,1226],intermedi:[40,41],intern:[40,41,838,1014,1028,1071,1115,1116,1123,1124,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1222,1223],interpol:[912,968],intersect:[1049,1050],interv:[40,41,794,795,912,915,927,969,970,1049,1052,1127,1131],introduc:1229,inv:[712,1037,1229],invalid:[794,795],invalid_dtyp:888,invers:[1037,1039,1041,1049,1050,1051,1052,1053,1054,1056,1229],invert:[1037,1039,1041],invest:1229,invoc:[836,837],irrespect:1183,is_al:1071,is_arrai:[114,267,400,514,630,912,1071],is_float_dtyp:888,is_int_dtyp:888,is_mean:1071,is_sum:1071,is_var:[1177,1181],is_vari:[150,321,437,555,702,1014],isfinit:[83,200,374,483,598,783],isinf:[267,514,630,912],isinst:1071,isnan:[267,514,630,912],isnumer:1071,item:[15,19,40,41,797,809,810,838,847,848,850,857,859,861,863,869,888,895,912,932,956,996,997,1071,1115,1119,1120,1121,1124,1125,1126,1183,1212,1213,1225],iter:[15,16,17,18,19,40,41,42,836,837,838,841,842,844,845,847,848,851,852,859,861,862,863,864,869,882,912,914,924,930,931,945,958,974,979,983,984,987,992,994,998,1001,1006,1011,1012,1071,1115,1116,1117,1119,1123,1124],iterbal:[838,859,863,869,1071],its:[838,882,912,919,958,984,1000,1006,1071,1183],itself:[43,1115,1124],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,369,371,372,374,375,376,377,779,780,781,783,784,785,794,795,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1181,1183,1184,1186,1187,1188,1189,1190,1191,1193,1194,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1227,1228],ivy_backend:[40,41],ivy_bay:1229,ivyfcmodel:1225,ivyh:[40,41,42],ivymodul:[180,764],jame:1183,jax:[1014,1020,1183,1229],jax_concat:1183,jnp:1183,join:[40,41,912,930,998,1071],journal:1183,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1183,1200,1209,1229],kaimingnorm:[1191,1195],kalman:1229,kalman_filt:1229,kalman_filter_step:1229,kalman_filter_upd:1229,keep:[40,41,838,883,912,1008,1071,1183,1229],keep_inner_v:[1067,1068,1069],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1067,1068,1069],keepdim:[40,41,794,795,912,1008,1037,1040,1043,1134,1136,1137,1138,1139,1140,1141,1142],kei:[15,16,17,40,41,42,797,802,838,850,912,932,1067,1068,1069,1071,1115,1118,1122,1152,1163,1164,1183,1189,1190,1200,1211,1216,1220],kept:[40,41,42,1067,1068,1069],kera:1229,kernel:[1152,1162],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,838,847,848,860,864,870,912,916,939,940,941,971,1071,1115,1119,1212,1213],keyword_color_dict:[40,41,42],kind:[779,780,781,1229],kwarg:[15,16,17,40,41,42,59,63,838,847,860,864,870,912,971,1071,1171,1172,1173,1177,1189,1190,1212,1213],kwarg_stateful_idx:[1171,1172,1173,1177,1212,1213],kwargs_clon:1071,kwargs_dist:1071,kwargs_uni:1071,label:[1165,1166,1167,1168],lamb:[1014,1021,1183,1216],lamb_upd:1014,lambda:[1071,1216,1219,1221,1225],lar:[1014,1021,1022,1183,1216],larger:[779,780,912,927],largest:[40,41,779,780,781,912,917,946],lars_upd:1014,last:[40,41,794,795,912,915,934,968,994,998,1037,1040,1042,1134,1139,1141,1144,1149,1152,1162,1200,1210],later:[40,41,912,925],latest:[1200,1209],layer:[1014,1017,1019,1021,1023,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1169,1170,1183,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223,1229],layer_norm:1169,layernorm:[1183,1214],layerwis:[1014,1022,1216,1219],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1115,1116,1123],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1144,1145,1146],leaky_relu:[756,1144],learn:[1014,1017,1019,1021,1022,1023,1067,1068,1069,1070,1127,1133,1183,1216,1217,1218,1219,1220,1221,1226,1229],learnabl:[1169,1170,1214,1215],leav:[15,18,19,40,41,1115,1116,1117,1123,1124],left:[40,41,1037,1040,1043,1134,1136,1137,1138,1139,1140,1141,1142,1183],leftmost:[40,41],len:1071,length:[40,41,42,912,915,984,995,1006],lenton2021ivi:1183,lenton:1183,less:[40,41,43,912,926,1071,1127,1131],less_equ:[83,374,483,598,783],less_util_node_str:1071,let:[1226,1229],level:1183,librari:[1183,1225,1229],lightweight:1183,like:[43,1014,1020,1127,1131,1183,1225,1226,1229],limit:[40,41,42,779,780,781,912,927,928,929],linalg:[29,1038,1039,1040,1041,1042,1043,1044,1183],linear0:[1183,1225],linear1:1183,linear2:1225,linear:[912,948,968,1037,1144,1145,1146,1147,1152,1160,1183,1200,1201,1202,1203,1204,1205,1206,1207,1225],linear_resampl:[114,267,400,514,630,912],linearli:[912,948],link:1183,linspac:[114,267,400,514,630,912,915],list:[15,18,19,40,41,43,794,795,838,847,848,857,858,860,861,862,864,867,868,882,912,915,920,922,974,993,994,1003,1008,1067,1068,1069,1071,1115,1116,1117,1119,1123,1124,1152,1153,1154,1155,1156,1157,1158,1159,1183,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207],list_join:[40,41,42],list_stack:[40,41],littl:1226,load:[40,41],loaded_kwarg:1071,loader:1183,local_set:[912,956],locat:[43,912,966,967,1127,1128],log:[723,912,970,1049,1071,1165,1166,1167,1168,1183],log_all_op:1177,log_global_inference_abs_tim:[1174,1183],log_global_inference_rel_tim:[1174,1183],logarithm:[1049,1062],logic:[31,794,795,1046,1047,1048,1183],logical_and:[335,719,1045],logical_not:[335,719,1045],logical_or:[335,719,1045],logit:[1165,1168],logspac:[114,267,400,514,630,912],look:[43,1226,1229],loop:[1067,1068,1069,1070],loss:[1166,1167,1168,1183,1225],loss_fn:[1183,1225],lot:1226,low:[40,41,1127,1129,1131],lower:[40,41,912,973,1127,1131],lower_depth:[1212,1213],lowest:[15,18,19,40,41,1115,1124,1127,1129],lstm:[1152,1162,1183,1200],lstm_updat:[43,1152],machin:[779,780,781,1127,1133,1183,1226,1229],mai:[783,785,912,915,938,942,1183,1226,1229],main:[912,958,1183],mainli:1183,make:[43,838,1071,1183,1226],maml:[1067,1068,1069],maml_step:1067,manag:[838,1071],mani:[40,41,43,912,994,1183],manner:[15,18,19,40,41,43,1115,1124],manual:[1115,1116,1123,1229],map:[40,41,42,838,847,912,966,967,1071,1115,1120,1121,1124,1200,1211,1225],map_cont:[40,41],map_nest_at_index:1115,map_nest_at_indic:1115,map_sequ:[40,41],mapper:[838,847,848,1071],mask:[1152,1163,1164],match:[40,41,912,971],match_kwarg:912,math:[33,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1071,1183],mathbb:[1037,1044],mathbf:[1037,1044],matmul:[43,267,514,630,912,1229],matplotlib:1226,matric:[1152,1161],matrix:[40,41,912,914,928,972,1037,1038,1039,1040,1041,1044,1152,1161,1200,1210],matrix_norm:[40,41,157,330,446,564,712,1037],matter:1183,max:[40,41,369,779,780,781,912,928,929,940,973,986,987,1071,1134,1136,1216,1218],max_batch_s:[40,41],max_chunk_s:[838,882,1071],max_depth:[40,41,838,842,845,852,860,864,870,912,956,1071,1115,1124],max_dev_dim_step_ratio:838,max_freq:[912,948],max_length:[40,41],max_node_dim_step_ratio:1071,max_norm:[40,41,912,928,929],max_split_factor_step_s:[838,1071],max_trust_ratio:[1014,1021,1216,1218],maxim:[1183,1226,1229],maximis:1183,maximum:[40,41,42,630,838,860,864,870,882,912,917,927,928,929,948,1014,1021,1071,1115,1124,1134,1136],mayb:[15,18,19],mdi:1071,mean:[40,41,838,867,868,869,870,882,912,940,1067,1068,1069,1070,1071,1115,1119,1127,1130,1134,1137,1140,1142,1191,1225,1229],measur:[1152,1163,1200,1211],mech:1183,mechan:[1183,1229],medic:1229,memori:[838,854,877,882,884,887,1071,1152,1162,1183],meshgrid:[267,630,912],messag:[1227,1228],meta:[35,1068,1069,1070,1183],method:[40,41,42,43,912,920,932,974,986,987,1014,1021,1022,1071,1115,1116,1123,1124,1183,1200,1211,1212,1213,1226],might:[912,938,1229],min:[40,41,369,779,780,781,912,940,975,986,987,996,1071,1134,1138],min_bas:[912,997],min_denomin:[912,996],min_dev_dim_s:838,min_node_dim_s:1071,min_sf_tune_step:[838,1071],min_unit_dev_tune_step:838,min_unit_node_tune_step:1071,mind:1183,mini:[1169,1170,1214,1215],minimum:[40,41,630,838,888,892,912,915,918,920,927,953,954,988,989,996,997,1071,1134,1138],miss:[1216,1220],ml_framework:[912,915],mod:[912,947],mod_depth:[1212,1213],mod_height:[1212,1213],mod_with_top_mod_key_chain:[1212,1213],mode:[40,41,836,837,838,867,868,869,870,882,1037,1042,1071,1226],model:[1183,1225],modul:[40,41,42,59,912,976,1071,1183,1184,1186,1187,1188,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1214,1215,1222,1223,1229],moment:[1014,1016,1017,1021,1216,1217,1218],more:[43,912,998,1071,1183,1226,1229],more_util_node_str:1071,most:[40,41,43,1183,1229],move:[40,41,43,838,883,1071],much:[1183,1229],multi:[912,976,1152,1163,1200,1211],multi_head_attent:1152,multi_index_nest:1115,multi_map:[40,41],multi_nod:1071,multidev:[838,849,850,851,870],multidevcontain:[40,41],multidevic:[838,847],multidevit:[838,841,844,847,848,852],multidevitem:[838,840,843],multidevnest:[838,842,845],multiheadattent:[1183,1200],multinod:[1071,1075],multinodecontain:1071,multinodeit:1071,multinodeitem:1071,multinodenest:1071,multinomi:[162,340,452,570,740,1127],multipl:[40,41,794,795,912,971,994,1037,1039,1134,1136,1137,1138,1139,1140,1142,1169,1170,1200,1210,1226],multipli:[40,41,912,935,1134,1139],multiprocess:[40,41,42,630,838,847,912,1071],must:[40,41,42,43,783,784,785,794,795,797,815,822,838,867,868,869,870,882,912,915,930,932,934,942,973,975,987,998,1049,1055,1059,1071,1127,1132,1216,1220],mutabl:[1115,1117,1124],mutlidevic:[838,847],mutlinod:1071,mw_tm1:[1014,1017,1021],mx_concat:1183,mxnet:[43,1183,1229],my_func:43,mymodel:1183,name:[836,837,1171,1172,1173,1177,1225],namespac:[43,1226],nan:[40,41,783,784,912,957,967,1009],nativ:[15,17,18,19,40,41,43,838,854,856,865,866,877,884,887,888,893,900,901,1071,1183,1184,1189,1190],native_modul:[1189,1190],native_module_class:[1189,1190],nativearrai:[15,18,19,43,779,780,781,783,784,785,794,795,797,815,822,838,856,882,883,888,892,898,903,904,912,913,914,915,917,918,919,920,921,922,924,926,927,928,929,930,931,933,934,935,936,939,940,941,942,944,945,946,947,948,950,951,955,957,958,959,966,967,968,969,970,972,973,974,975,978,979,980,983,984,985,986,987,992,994,995,998,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1071,1115,1117,1124],natur:[1049,1062,1229],ncdhw:[1152,1157,1158,1200,1205,1206],nchw:[1152,1155,1156,1159,1200,1203,1204,1207],ncw:[1152,1153,1154,1200,1201,1202],ndarrai:[43,369,371,372,374,375,376,377,912,1004],ndhwc:[1152,1157,1158,1200,1205,1206],nearest:[912,985],need:[43,912,928,929,1152,1154,1156,1158,1183,1200,1202,1204,1206,1229],neg:[40,41,783,784,794,795,1134,1139,1141,1144,1146],negative_slop:1191,neither:1071,nest:[15,16,17,18,19,40,41,42,838,860,864,870,912,920,1003,1067,1068,1069,1071,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1212,1213,1216,1217,1218,1219,1220,1221],nested_indices_wher:1115,nested_map:[1071,1115],network:[1152,1161,1183,1184,1186,1200,1212,1213,1229],neural:[1152,1183,1186,1200,1225],new_node_percent_mem:1071,new_node_util:1071,new_node_utils_kei:1071,new_std:[1169,1170,1214,1215],newli:[836,837,912,924,925],newlin:[40,41,42],newshap:[912,924,984],next:[779,780,1071,1212,1213,1216,1217,1218,1219,1220,1221],nhwc:[1152,1155,1156,1159,1200,1203,1204,1207],node:[40,41,1115,1116,1123],node_clon:1071,node_dist:1071,node_dist_arrai:1071,node_dist_it:1071,node_in:1071,node_mapp:1071,node_str:1071,node_to_str:1071,node_util:1071,nodedistit:1071,nodedistitem:1071,nodedistnest:1071,nodemanag:[1071,1082],nodemapp:1071,nodemappermultiproc:1071,noinspect:[43,839,889,890,891,1015,1071,1178],non:[40,41,794,795,836,837,888,902,1212,1213,1216,1220,1226],none:[40,41,42,43,59,61,64,779,780,781,794,795,836,837,838,847,848,854,855,880,881,882,883,888,895,896,897,912,915,920,937,938,943,945,949,950,951,956,958,960,961,962,963,964,969,970,976,978,979,980,983,986,987,988,989,994,995,996,997,1006,1007,1012,1013,1014,1017,1019,1021,1022,1023,1029,1030,1034,1037,1040,1043,1067,1068,1069,1070,1071,1115,1116,1119,1123,1124,1127,1128,1129,1130,1131,1134,1136,1137,1138,1139,1140,1141,1142,1152,1154,1156,1158,1161,1162,1163,1164,1169,1170,1171,1172,1173,1177,1181,1189,1190,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],norm:[40,41,912,928,929,1037,1040,1043,1170,1183,1215,1216,1218],normal:[1127,1130,1169,1170,1214,1215],normalized_idx:[1169,1170],normalized_shap:[1214,1215],notat:[40,41,1134,1135],note:43,noth:[40,41,1226],notimplementederror:1071,now:[40,41,838,883,912,913,1071,1183,1200,1211,1212,1213,1225,1226,1229],np_concat:1183,np_finfo:369,ns_tune_step:1071,num:[912,969,970],num_arrai:[40,41],num_arrays_in_memori:912,num_arrays_on_dev:838,num_band:[912,948],num_channel:[1200,1207],num_chunk:1071,num_chunks_floor:1071,num_class:[1127,1128],num_cpu_cor:838,num_gpu:[107,838,1071],num_head:[1152,1163,1200,1211],num_kei:[1152,1163,1164],num_lay:[1200,1209],num_or_size_split:[40,41,912,994],num_output:1071,num_queri:[1152,1163,1164],num_sampl:[912,968,1030,1031,1127,1128],num_task:[1067,1068,1069,1070],number:[40,41,42,779,780,781,794,795,836,837,838,874,875,876,888,899,903,904,912,915,927,931,944,948,955,958,967,968,969,970,973,977,983,994,1001,1005,1009,1011,1037,1042,1067,1068,1069,1070,1071,1127,1128,1132,1134,1136,1137,1138,1140,1142,1152,1163,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1226,1229],numer:[43,783,784,797,822,912,953,954,988,989,996,997,1049,1059,1191],numhead:[1152,1163],numpi:[40,41,369,371,372,374,375,376,377,912,1004,1037,1042,1134,1135,1183,1225,1226,1229],nwc:[1152,1153,1154,1200,1201,1202],obj:[40,41],object:[40,41,42,59,369,779,780,781,838,888,892,912,915,920,1014,1115,1118,1120,1121,1122,1125,1126,1127,1133,1177,1181,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1212,1213],object_in:[912,920],observ:1071,occupi:[779,780,781,912,986,987],off:[912,915],offer:1183,offset:[1169,1170],often:1226,old:[40,41],on_init:[1200,1211,1212,1213],onc:[838,882,1071,1127,1128,1183],one:[40,41,43,838,867,868,869,870,882,888,894,912,958,971,978,986,987,995,998,1037,1040,1043,1071,1134,1135,1136,1137,1138,1139,1140,1141,1142,1183,1226,1229],one_hot:[114,400,514,630,912],onearrai:[912,944],ones:[40,41,114,267,400,514,630,912,958,978,980,1183],ones_lik:[114,267,400,514,630,912],ongo:43,onli:[40,41,43,838,1071,1115,1116,1117,1123,1216,1217,1218,1219,1220,1221,1225,1226],onlin:1183,onto:[838,867,868,883,1071,1115,1119,1124],oom:[838,1071],open:[912,915,1127,1131,1183,1229],opencv:1226,oper:[40,41,912,923,939,940,941,969,970,999,1014,1017,1019,1021,1022,1023,1045,1046,1047,1048,1152,1153,1154,1155,1156,1157,1158,1159,1161,1183,1184],operand:[40,41,1134,1135],oppos:[912,948],optim:[838,1014,1017,1019,1021,1022,1023,1067,1068,1069,1070,1071,1183,1217,1218,1219,1221,1225,1229],optimizer_upd:1014,option:[15,18,19,40,41,42,43,794,795,836,837,838,847,848,856,860,861,862,863,864,867,868,869,870,877,880,881,882,883,887,888,893,898,902,911,912,914,915,917,918,919,920,928,929,930,935,937,938,945,948,949,950,951,955,957,958,965,968,969,970,971,974,976,978,979,980,983,986,987,990,992,994,995,996,997,998,1006,1008,1009,1012,1013,1014,1017,1019,1020,1021,1022,1023,1025,1030,1034,1037,1040,1043,1067,1068,1069,1070,1071,1115,1116,1117,1119,1123,1124,1127,1128,1134,1136,1137,1138,1139,1140,1141,1142,1144,1145,1149,1152,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1226],ord:[912,945,1037,1042],order:[40,41,42,43,912,919,1014,1017,1019,1021,1022,1023,1037,1040,1043,1067,1068,1069,1222,1223],ordered_node_util_kei:1071,org:1229,organ:43,origin:[40,41,42,912,980,984,1013,1037,1040,1043],other:[40,41,43,797,799,800,805,807,808,812,814,815,816,817,818,820,822,823,824,825,826,827,829,830,831,833,834,835,836,837,912,914,915,958,1014,1018,1127,1131,1183,1225,1226,1229],other_i:[43,797,822],otherwis:[15,16,17,18,19,40,41,783,784,794,795,838,855,888,895,896,897,912,923,1006,1007,1010,1014,1020,1025,1029,1067,1068,1069,1071,1134,1136,1137,1138,1140,1142],our:[1183,1229],out:[912,915,1049,1054,1152,1160,1162,1183,1200,1208],out_feat_dim:[1152,1163],out_featur:[1152,1160,1161],out_i:[783,784],outdat:1229,outer:[1067,1068,1069,1070],outer_batch_fn:[1067,1068,1069],outer_batch_shap:[1152,1161],outer_cost_fn:[1067,1068,1069],outer_v:[1067,1068,1069],outlin:1226,output:[40,41,43,838,847,848,882,912,915,925,949,958,983,1001,1014,1018,1049,1055,1071,1127,1129,1130,1131,1152,1154,1156,1158,1160,1162,1163,1164,1183,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211],output_ax:[838,882,1071],output_axi:1071,output_channel:[1200,1201,1202,1203,1204,1205,1206,1209,1210],output_connected_onli:[1171,1173,1177,1212,1213],output_queu:1071,output_shap:[1152,1154,1156,1158,1200,1202,1204,1206],outsid:[912,927],over:[40,41,794,795,912,945,1037,1040,1043,1127,1131,1134,1136,1137,1138,1140,1142,1169,1170,1214,1215],overal:1226,overflow:[912,915],overhead:1226,overrid:[912,978,980,1013],overriden:[1216,1220],overwrit:[40,41,838,882,1071],overwrite_at_key_chain:[40,41],own:[1183,1226,1229],packag:[43,1226],pad:[912,931,948,1011,1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],pad_width:[912,931,1011],page:1183,pair:[1152,1164],parallel:[838,847,848,1071],parallelis:[838,847,848,1071],param:[40,41,42,43,838,882,912,913,950,951,978,979,1012,1071,1182,1183,1212,1213,1225],paramet:[15,16,17,18,19,40,41,42,779,780,781,783,784,785,794,795,797,815,822,836,837,838,847,848,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,877,880,881,882,883,884,887,888,892,893,894,898,899,900,901,902,903,904,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,957,958,959,961,962,963,965,966,967,968,969,970,971,972,973,974,975,976,979,980,983,984,985,986,987,988,989,990,992,993,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1025,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225],parameter:[1127,1130,1131],params_all_empti:1177,pardo:1183,pars:[912,932],part:[1014,1017,1019,1021,1022,1023,1049,1054,1183,1212,1213,1226],partial:[40,41,1212,1213],particl:1229,particular:1229,pass:[40,41,42,838,847,882,888,893,912,925,1014,1028,1067,1068,1069,1071,1189,1190,1212,1213,1216,1220,1222,1223],pattern:[40,41,912,939,940,941],per:[838,1071,1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],percent_used_mem_on_dev:838,percent_used_mem_on_nod:1071,percentag:[838,877,1071],perf_count:1071,perform:[40,41,43,794,795,838,912,917,918,919,935,939,940,941,961,962,963,968,969,970,1014,1017,1019,1021,1022,1023,1030,1031,1067,1068,1069,1070,1071,1115,1120,1121,1134,1136,1137,1138,1139,1140,1141,1142,1144,1149,1152,1160,1162],permissable_step:1071,permit:43,permut:[912,1000,1006],perpendicular:[912,934],person:1183,physci:1229,pickl:[40,41,1071],pickle_filepath:[40,41],pid:1177,pinv:[330,712,1037],pip:1183,pipelin:1225,pkk:1229,pkkm1:1229,pkm1km1:1229,place:[40,41,43,838,883,912,944,949,961,962,963,1071,1216,1217,1218,1219,1220,1221],placehold:[1115,1124],point:[779,780,888,903,912,915,1049,1059],popul:[40,41,1127,1128],popular:1229,population_s:[1127,1128],portabl:[1183,1184],posit:[15,16,17,779,780,783,784,838,860,864,870,912,913,915,944,948,1071,1127,1132,1189,1190],possibi:[40,41],possibl:[912,971,1003,1030,1035,1229],post:[1169,1170],post_shap:[40,41],power:[43,797,822,828,912,953,988,997,1191],practic:1183,pre:[838,1071,1183],pre_shap:[40,41],precis:[779,780],pred:[1165,1166,1167,1168],predict:[1165,1166,1167,1168,1229],preprint:1183,present:[40,41],preserv:[40,41,42,912,945,1014,1025],preserve_typ:[40,41,1014,1025],press:1183,prevent:[43,1014,1016,1017,1021,1071,1216,1217,1218],previou:[1014,1017,1021],previous:[912,925],prime:1183,print:[40,41,42,838,878,912,981,1183,1225],print_all_arrays_in_memori:912,print_all_arrays_on_dev:838,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1216,1220],prob:[1127,1128,1152,1160,1200,1208],probabl:[1127,1128,1152,1160,1200,1208],problem:[43,1229],process:[43,838,847,848,877,887,912,976,1071],process_specif:[838,877,887,1071],prod:[40,41,912,940],produc:[838,847,848,1071],product:[40,41,912,934,935,972,1134,1135,1152,1163,1164,1200,1211],profil:[107,261,398,507,622,838,1071],project:[1183,1225,1226,1229],promot:[43,797,822,1049,1059],prompt:1183,properli:43,properti:[40,41,369,838,850,1071,1177,1181,1212,1213,1216,1217,1218,1219,1221],provid:[40,41,43,794,795,836,837,838,855,888,895,896,897,902,911,912,938,978,980,987,1013,1014,1017,1019,1021,1022,1023,1029,1071,1183,1200,1209,1216,1217,1218,1219,1220,1221,1226],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1037,1041],ptype:[1177,1181],pure:[40,41,1183,1229],purpos:1229,put:1071,pybroadexcept:1071,pyprotectedmemb:[1071,1178],pyshadowingbuiltin:43,pyshadowingnam:[839,889,890,891,1015,1071],python:[40,41,838,877,887,912,915,1071,1183],pytorch:[1014,1017,1019,1021,1022,1023,1183,1216,1217,1218,1219,1220,1221,1225,1226,1229],pyunresolvedrefer:1071,quadrant:[1049,1055],queri:[40,41,797,811,832,838,871,881,1071,1152,1163,1164,1200,1211],query_dim:[1200,1211],query_kei:[40,41],queue:[40,41,42,838,847,848,912,982,990,1071],queue_class:[838,847,848,1071],queue_load_s:[40,41,42],queue_timeout:[40,41,42,912,1071],quick:1183,quickli:1225,radian:[1049,1050,1052,1055,1057,1063,1065],rai:[1049,1050],rais:[40,41,43,794,795,797,822,912,923,953,988,995,997,1007,1071,1212,1213,1216,1220],ram:[838,877,884,887,1071],randint:[162,340,570,740,1127],random:[37,40,41,1128,1129,1130,1131,1132,1133,1183],random_crop:1030,random_norm:[162,340,570,740,1127],random_uniform:[162,340,570,740,1127],randomli:[1030,1034,1152,1160,1200,1208],randomness_factor:[1171,1173,1177,1212,1213],rang:[912,915,969,970,1049,1055,1071,1183,1225,1229],rank:[794,795,912,931,1008,1011],rate:[1014,1017,1019,1021,1022,1023,1067,1068,1069,1070,1200,1211,1216,1217,1218,1219,1220,1221],rather:[40,41,838,882,912,915,965,1014,1020,1071],ratio:[838,1014,1021,1030,1035,1071,1216,1218],raw:[40,41],raw_delta:1071,reach:[838,860,864,870,1071,1115,1124],read:[40,41],readi:[1071,1225],real:[1049,1050,1054],realiti:1226,rearrang:[40,41,912,939,941],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1067,1069],receiv:[838,847,848,912,916,971,1071,1200,1210],receivess:[838,1071],receiving_fn:1177,receivng:[1067,1070],recev:[1067,1068,1069],recognit:1229,recommend:1183,rectifi:[1144,1146,1147],recurr:[1152,1162],recurrent_bia:[1152,1162],recurrent_kernel:[1152,1162],recurs:[40,41,1115,1116,1117,1123,1124],redefin:43,reduc:[40,41,794,795,838,882,912,940,1071,1134,1136,1137,1138,1139,1140,1141,1142],reduce_max:[40,41,169,345,454,575,747,1134],reduce_mean:[40,41,169,345,454,575,747,1134,1183,1225],reduce_min:[40,41,169,345,454,575,747,1134],reduce_prod:[40,41,169,345,454,575,747,1134],reduce_std:[40,41,345,1134],reduce_sum:[40,41,169,345,454,575,747,1071,1134],reduce_var:[40,41,169,345,454,575,747,1134],reduct:[39,40,41,794,795,912,940,986,987,1135,1136,1137,1138,1139,1140,1141,1142,1183],refactor:43,refer:[794,795,1014,1016,1017,1037,1044,1200,1210,1229],reflected_oper:[0,13,14],regard:[838,1071],regardless:[40,41,836,837],register_paramet:1225,reimplement:1229,rel:[1014,1017,1019,1021,1022,1023],rel_slice_obj:1071,relev:[1216,1217,1218,1219,1220,1221],relu:[756,1144,1145,1146,1183,1225],remain:[43,912,984,1115,1119],remaind:[40,41,912,947,994],remov:[40,41,912,995,1067,1068,1069],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,912,945],rep:[912,1001],repeat:[40,41,267,630,912,941,1001,1071,1226],repeated_config_check:[838,1071],repeatedli:[1115,1122],repetit:[40,41,912,983,1001],replac:[40,41,43,912,927,986,987,1127,1128],repo:1183,repres:[43,888,894,899,1152,1161],represent:[40,41,42,43,779,780,781,838,865,866,888,894,900,901,912,993,1003,1071],reptil:[1067,1070],reptile_step:1067,requir:[43,836,837,888,892,912,915,920,1189,1190],resampl:[912,968],reshap:[40,41,43,630,912],reshape_lik:[40,41],respect:[783,785,912,942,1014,1016,1017,1018,1019,1021,1022,1023,1049,1059,1067,1068,1069,1070],respons:1071,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,783,784,785,794,795,797,815,822,838,847,912,915,942,986,987,998,1037,1040,1043,1045,1046,1047,1048,1049,1059,1071,1134,1136,1137,1138,1139,1140,1141,1142,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1183],ret:1071,ret_dict:1071,ret_fn:[838,847,848,1071],retain:[1014,1018],retain_grad:[1014,1018],retreiv:1071,retrn:[912,993],return_cont:[40,41],return_dict:[40,41],return_graph:[1171,1172,1173],return_inner_v:[1067,1068,1069,1070],return_sequ:[1200,1209],return_st:[1200,1209],rev:[912,938],revers:[40,41,912,938,945,1006],right:[40,41],rk_e:1229,robot:1183,ronald:1183,round:[267,630,912,915,1071],row:[912,958,1127,1128],rule:[43,797,822,912,915,1049,1059],run:[838,847,1014,1016,1017,1021,1067,1068,1069,1070,1071,1183,1184,1200,1211,1212,1213],safe:[838,847,1071],safety_factor:[838,1071],same:[15,16,17,40,41,43,838,847,848,882,883,888,892,912,913,926,930,946,947,950,951,978,980,985,986,987,998,1013,1014,1020,1025,1037,1042,1049,1054,1067,1068,1069,1071,1134,1135,1152,1153,1154,1155,1156,1157,1158,1159,1183,1200,1201,1202,1203,1204,1205,1206,1207,1225,1229],same_arrai:[40,41],sampl:[912,968,1030,1031,1127,1128,1130,1131,1152,1160,1183,1200,1208],satisfi:[912,920,1037,1039,1044],save:[40,41,912,991,1002,1030,1032,1212,1213],save_debug_info:1177,save_dir:[838,853,1071],save_to_disk:[1171,1173,1177,1212,1213],save_weight:[1212,1213],scalar:[912,927,978,1005,1009],scale:[838,880,881,1014,1022,1071,1152,1160,1163,1164,1169,1170,1200,1208,1211,1216,1219],scaled_dot_product_attent:1152,scatter:[912,978,986,987],scatter_flat:[114,267,400,514,630,912],scatter_nd:[114,267,400,514,630,912],scene:[1014,1017,1019,1021,1022,1023],schemat:1183,screen:[40,41],search:[15,18,19,40,41],second:[40,41,783,785,838,869,912,921,934,942,982,990,1000,1014,1016,1017,1021,1067,1069,1071,1216,1217,1218],secondli:1229,see:[43,59,369,794,795,797,815,822,838,850,851,852,853,888,912,915,969,970,1014,1049,1059,1177,1181,1183,1191,1193,1194,1196,1197,1199],seed:[40,41,162,740,1127],seed_valu:[40,41,1127,1132],seem:1183,seen_set:[912,956],select:[912,920,995,1226,1229],self:[40,41,43,59,369,797,822,838,850,851,852,853,888,1014,1071,1177,1181,1183,1191,1193,1194,1196,1197,1199,1216,1220,1225,1229],sent:1071,seper:[912,948],seq:[40,41,42,1134,1135,1212,1213],sequenc:[15,16,17,40,41,42,43,836,837,838,847,848,857,858,859,860,861,862,863,864,867,868,882,888,892,912,915,920,922,924,930,931,945,958,971,974,979,983,984,987,994,998,1001,1006,1011,1012,1014,1018,1030,1034,1035,1037,1040,1043,1071,1115,1126,1127,1129,1131,1134,1136,1137,1138,1139,1140,1141,1142,1152,1153,1154,1155,1156,1157,1158,1159,1169,1170,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1209,1212,1213,1214,1215,1216,1220,1222,1223],sequenti:1183,set:[15,18,19,40,41,838,867,868,880,881,882,912,914,937,958,988,989,990,991,1014,1017,1019,1020,1021,1022,1023,1037,1040,1043,1071,1115,1116,1123,1125,1126,1127,1128,1132,1134,1136,1137,1138,1139,1140,1141,1142,1181,1183,1200,1209,1216,1217,1218,1219,1220,1221,1226,1229],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1181,set_debug_mod:44,set_default_devic:838,set_default_dtyp:888,set_default_float_dtyp:888,set_default_int_dtyp:888,set_default_nod:1071,set_exception_debug_mod:44,set_framework:[40,41,59,1071,1183,1225,1226,1229],set_ivy_backend:[40,41],set_min_bas:912,set_min_denomin:912,set_nest_at_index:1115,set_nest_at_indic:1115,set_param:1177,set_queue_timeout:912,set_split_factor:[838,1071],set_stat:[1216,1217,1218,1219,1220,1221],set_tmp_dir:912,set_with_grad:1014,setter:1071,sever:1229,sgd:[1183,1216],shape0:1071,shape:[40,41,43,630,838,850,888,892,912,913,924,926,930,931,944,945,946,947,949,951,955,958,978,979,980,983,984,985,986,987,993,995,998,1011,1012,1013,1030,1034,1037,1039,1049,1054,1055,1071,1127,1129,1130,1131,1134,1135,1152,1154,1156,1158,1177,1181,1200,1202,1203,1204,1205,1206,1207,1214,1215],shape_slic:[40,41],shape_to_tupl:912,share:[40,41,1183,1226],shift:1071,should:[40,41,42,43,783,784,797,815,822,836,837,838,912,924,925,932,978,984,1014,1017,1019,1021,1022,1023,1049,1059,1071,1134,1135,1183],show:[40,41,1177,1183,1229],show_debug_info:1177,show_graph:[1171,1183,1212,1213,1216,1220],show_mod_in_top_mod:[1212,1213],show_structur:[1212,1213],show_sub_contain:[40,41],show_v:[1212,1213],show_v_in_top_v:[1212,1213],shown:[40,41],shp:1071,shuffl:[40,41,162,740,1127],shuffle_h5_fil:[40,41],sigmoid:[756,1144,1183,1225],signatur:[43,59,369,838,850,851,852,853,888,1014,1177,1181,1191,1193,1194,1196,1197,1199],signific:1229,similar:[43,1152,1163,1200,1211],simpl:[43,912,943,1183,1226,1229],simplest:1226,simpli:[40,41,43,1183,1226,1229],simultan:1183,sin:[723,912,948,1049,1065,1226],sinco:1226,sine:[1049,1052,1053,1063,1064],singl:[40,41,836,837,838,847,848,867,868,869,870,912,995,1005,1009,1030,1035,1071,1127,1130,1131,1134,1136,1137,1138,1139,1140,1141,1142,1183,1226,1229],singleton:[794,795],singular:[1037,1042],sinh:[723,1049],siren:[1183,1191],size:[40,41,42,838,861,862,863,864,880,881,882,912,915,924,969,970,986,994,1030,1034,1037,1040,1042,1043,1071,1127,1128,1130,1131,1134,1136,1137,1138,1139,1140,1141,1142,1200,1201,1202],size_ordered_arrai:[40,41],skew:[1037,1044],skinv:1229,skip:[40,41],slice:[40,41,912,919,950,951,1071,1115,1122],slice_kei:[40,41],slice_obj:[40,41,1071],slice_via_kei:[40,41],slide:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],slope:[1144,1146],small:[1165,1166,1167,1168,1169,1170,1183,1214,1215,1226],smaller:[912,927],smallest:[40,41,779,780,781,912,918,926],smallest_norm:[369,779,780],softmax:[178,463,756,1144,1152,1163,1164],softplu:[756,1144],solv:1229,some:[40,41,43,912,915,1014,1016,1017,1019,1021,1022,1023,1028,1152,1160,1183,1200,1208,1226,1229],some_backend:43,some_namespac:43,someth:[43,1229],something_cool:43,somewher:[40,41],sort:[40,41,42,912,919,1037,1042,1071],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,369,371,372,374,375,376,377,779,780,781,783,784,785,794,795,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1181,1186,1187,1188,1189,1190,1191,1193,1194,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1227,1228,1229],space:[912,915,948,969,970],spars:[1165,1168],sparse_cross_entropi:1165,spawn:[912,976],specif:[40,41,43,838,880,912,932,939,940,941,976,1067,1068,1069,1070,1071,1127,1133,1183,1212,1213,1225,1226],specifc:[1127,1128],specifi:[40,41,43,794,795,838,857,858,859,860,861,862,863,864,867,868,872,874,878,881,882,883,888,892,894,912,915,917,918,920,927,930,931,949,950,951,957,969,970,998,1008,1011,1037,1040,1043,1071,1115,1120,1121,1125,1126,1134,1135,1136,1137,1138,1139,1140,1141,1142],split:[40,41,114,267,400,514,630,838,847,861,862,863,864,880,881,882,912,971,1071],split_arg:1071,split_factor:[838,847,1071],split_func_cal:[838,1071],split_siz:1071,spread:[838,870,1071],squar:[912,958,1037,1039],squeez:[114,267,400,514,630,912],stabil:[912,996,997],stabl:[912,953,954,988,989,996,997],stable_divid:912,stable_pow:912,stack:[40,41,267,630,912,1030,1035,1115,1116,1123,1200,1209],stack_imag:[153,326,442,560,708,1030],stacked_dim_s:1071,stage:43,standard:[40,41,43,779,780,1127,1130,1134,1140,1169,1170,1214,1215],start:[40,41,838,853,912,915,969,970,1071,1183,1226],starting_index:[40,41],starting_split_factor:[838,1071],state:[1071,1152,1162,1171,1172,1173,1177,1183,1186,1187,1188,1189,1190,1191,1193,1194,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225],statement:1226,static_argnam:[836,837],static_argnum:[836,837],std:[1127,1130],step:[40,41,838,912,915,969,970,1014,1016,1017,1019,1021,1022,1023,1067,1068,1069,1070,1071,1183,1216,1217,1218,1219,1220,1221,1225,1229],stephen:1183,stick:1183,still:[40,41],stochast:[1216,1221],stop:[40,41,838,853,882,912,915,969,970,1014,1017,1019,1021,1022,1023,1025,1067,1068,1069,1070,1071,1216,1217,1218,1219,1220,1221],stop_gradi:[40,41,321,437,555,702,838,882,1014,1017,1019,1021,1022,1023,1067,1068,1069,1070,1071,1216,1217,1218,1219,1220,1221],stopiter:1071,store:[40,41,912,948,994,1014,1028,1212,1213],store_var:[1212,1213],str:[15,16,17,40,41,42,43,369,371,372,779,780,781,836,837,838,847,848,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,882,888,893,894,899,900,901,902,903,904,911,912,920,937,939,940,941,974,976,979,986,987,1037,1040,1043,1067,1068,1069,1070,1071,1115,1119,1134,1135,1189,1190,1200,1211,1212,1213],str_to_nod:1071,straight:1226,strength:[1183,1229],stride:[1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],string:[40,41,43,838,854,856,865,866,871,877,883,884,887,888,892,898,900,901,902,911,912,915,920,937,958,979,980,1012,1013,1071,1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207,1212,1213],structur:[40,41,42,43,912,932],structural_diff:[40,41],sub:[40,41,838,861,862,867,868,869,870,912,994,1067,1068,1069,1070,1071],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1071,sub_mod:[1212,1213],sub_modul:[1222,1223],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1183,1184,1214,1215,1222,1223],subsequ:43,subset:43,substr:[40,41],suggest:1183,suitabl:[1030,1035],sum:[40,41,838,867,868,869,870,882,912,936,940,986,987,1071,1134,1135,1141],summat:[40,41,1134,1135],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,86,96,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,163,164,165,166,167,168,170,171,172,173,174,175,176,179,181,182,184,185,186,187,188,189,190,196,197,198,201,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,327,328,329,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,370,371,372,375,376,377,387,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,451,453,455,456,457,458,459,460,461,464,465,467,468,469,470,471,472,473,479,480,481,484,485,486,496,508,509,510,511,512,513,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,556,557,558,559,561,562,563,565,566,567,571,572,573,574,576,577,578,579,580,581,582,586,587,588,594,595,596,599,600,601,611,623,624,625,626,627,628,629,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,709,710,711,713,714,715,716,717,718,720,721,722,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,741,742,743,744,745,746,748,749,750,751,752,753,754,757,758,759,760,761,762,763,765,766,768,769,770,771,772,773,774,780,781,784,785,795,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,837,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1170,1172,1173,1175,1176,1178,1182,1183,1187,1188,1190,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1228,1229],supports_inplac:912,suppos:1229,svd:[330,564,712,1037],swap:[40,41,912,1000],swapax:[40,41,514,630,912,1229],symmetr:[1037,1044],tab:1183,take:[912,968],taken:[1134,1136,1137,1138,1140,1142],tan:[723,1049,1054],tangent:[1049,1054,1055,1056,1065,1066,1144,1151],tanh:[723,756,1049,1144],target:[40,41,838,854,857,858,859,860,861,862,863,864,867,868,869,870,883,1071,1183],target_dict:[40,41],task:[1067,1068,1069,1070],team:1229,templat:1183,temporari:[912,991,1002],tensor:[40,41,43,838,856,888,898,912,915,917,918,919,924,969,970,973,975,978,979,980,984,986,987,994,1012,1013,1071,1127,1128,1129,1152,1160,1162,1183,1200,1208,1210,1216,1217,1218,1219,1220,1221,1225,1226],tensorflow:[1152,1154,1156,1158,1183,1200,1202,1204,1206,1226,1229],term:[40,41,1152,1162,1183,1200,1210],termcolor:[40,41,42],termin:[40,41,42,1071],test:[783,784,794,795,888,903,904],tf_concat:1183,than:[40,41,779,780,838,882,912,915,926,927,946,965,973,995,998,1014,1020,1071,1127,1131,1183,1226],thei:[40,41,43,1049,1055,1067,1068,1069,1127,1128,1183,1222,1223,1226],them:[1183,1229],themselv:[1115,1116],therefor:43,thi:[40,41,42,43,838,860,864,870,877,882,887,912,915,948,982,984,990,1014,1017,1019,1020,1021,1022,1023,1028,1037,1040,1043,1071,1115,1119,1124,1134,1136,1137,1138,1139,1140,1141,1142,1152,1161,1183,1212,1213,1216,1217,1218,1219,1220,1221,1225,1226,1229],thing:[43,1183],those:[40,41,912,927,1014,1028,1037,1042,1071],though:43,threshold:[912,973,975],through:[40,41],tile:[267,514,630,912],time:[912,1001,1014,1017,1021,1067,1068,1069,1070,1071,1127,1128,1152,1162,1200,1211,1212,1213,1229],time_chronolog:[1171,1172,1177],time_infer:[1171,1172],timeout:[40,41,42,838,847,848,912,982,990,1071],timestep:[1152,1162,1200,1209],timing_fnam:[1171,1172],titl:1183,tmp_dir:912,tmp_dr:[912,991],to_appli:[40,41],to_clon:[838,1071],to_dev:[40,41,107,261,507,622,838],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[838,1071],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1183],to_ivy_modul:[180,764,1183,1189],to_json:[40,41],to_kv_fn:[1152,1163],to_kv_v:[1152,1163],to_list:[40,41,630,912],to_multi_dev:[40,41],to_mut:[1115,1117,1124],to_n:[15,40,41,1183],to_nod:1071,to_numpi:[40,41,630,912,1183,1225],to_out_fn:[1152,1163],to_out_v:[1152,1163],to_q_fn:[1152,1163],to_q_v:[1152,1163],to_raw:[40,41],to_scalar:[630,912],todo:1071,togeth:[40,41,1222,1223],tool:[1183,1226],top_mod:[1212,1213],topic:1229,torch:[43,836,837,1183,1225,1226,1229],torch_concat:1183,torchfcmodel:1225,total:[40,41,42,838,884,1071],total_mem_on_dev:838,total_mem_on_nod:1071,tpu:[838,885,1071],tpu_is_avail:[507,622,838,1071],tpye:[888,899],trace:[40,41,912,965],track:[838,1071,1115,1124,1212,1213],track_submod_call_ord:[1212,1213],track_submod_ret:[1212,1213],trail:[1214,1215],train:[1014,1016,1017,1021,1183,1184],trainabl:[1014,1020,1183,1184,1189,1190,1212,1213,1222],trainer:1183,tran:1229,transform:[1152,1160,1161],transpos:[40,41,114,267,400,630,838,869,912,1071,1152,1154,1156,1158,1200,1202,1204,1206],travers:[15,18,19,40,41,1115,1124],treat:[40,41,836,837],tree_depth:1181,tree_height:1177,tri:[40,41],trigonometr:[1049,1050,1054,1057,1063],trim_kei:[40,41],trust:[1014,1021,1216,1218],truth:[783,785,797,815,912,942,1045,1046,1047,1048],try_else_non:912,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[838,1071],tune_dev_alloc:838,tune_dev_split:838,tune_node_alloc:1071,tune_node_split:1071,tune_step:[838,1071],tupl:[15,16,17,18,19,40,41,43,794,795,836,837,912,931,948,949,993,1011,1071,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1129,1134,1136,1137,1138,1139,1140,1141,1142],two:[40,41,912,915,921,934,972,1000,1037,1040,1042],type:[15,18,40,41,42,43,59,371,372,780,781,783,784,785,794,795,797,815,822,838,850,851,852,853,865,866,870,882,888,892,893,894,898,899,900,901,902,903,904,911,912,913,915,920,926,930,932,942,946,947,949,958,965,978,979,980,985,999,1009,1012,1013,1014,1020,1025,1049,1059,1071,1177,1181,1183,1191,1193,1194,1196,1197,1199,1212,1213,1226],types_to_iteratively_nest:[40,41,42],uint8:[1030,1032,1036],uint8_img_to_float_img:1030,unchang:[15,16,17,18,19],unif:1071,unifi:[40,41,838,867,868,869,870,882,1071,1183],uniform:[40,41,1127,1128,1130,1131,1191,1193,1194,1197,1198],uniformli:[1127,1129,1131],unify_arrai:1071,unify_it:1071,unify_nest:1071,union:[15,18,19,40,41,43,369,371,372,779,780,781,783,784,785,794,795,797,815,822,836,837,838,856,861,862,863,864,882,883,888,892,893,894,898,899,900,901,902,903,904,911,912,913,914,915,917,918,919,920,921,922,924,926,927,928,929,930,931,933,934,935,936,939,940,941,942,944,945,946,947,948,949,950,951,955,957,958,959,966,967,968,969,970,972,973,974,975,978,979,980,983,984,985,986,987,992,993,994,995,998,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1071,1115,1116,1117,1123,1124],uniqu:[838,847,848,1067,1068,1069,1070,1071,1115,1119],unique_kwarg:1071,unit:[838,1049,1050,1052,1071,1144,1145,1146,1147],unitari:[1037,1042],unless:[912,978,980,1013],unlik:[838,1071],unnorm:[1127,1128],unpack:[912,1008],unrol:[1152,1162],unset:1226,unset_debug_mod:44,unset_default_devic:838,unset_default_dtyp:888,unset_default_float_dtyp:888,unset_default_int_dtyp:888,unset_framework:[59,1226],unset_with_grad:1014,unstack:[40,41,114,267,400,514,630,912],unus:[836,837],updat:[40,41,838,847,912,963,986,987,1014,1016,1017,1019,1021,1022,1023,1067,1068,1069,1071,1115,1120,1121,1125,1126,1152,1162,1189,1190,1216,1217,1218,1219,1220,1221,1226,1229],update_backend:[40,41],update_config:[40,41],update_inference_tim:1177,upper:[40,41,1127,1131],upper_depth:[1212,1213],usabl:[1183,1229],usag:[838,882,1071],use:[40,41,42,43,838,847,848,873,885,912,983,996,997,1071,1152,1163,1169,1170,1183,1214,1215,1226,1229],used:[40,41,43,838,847,877,880,881,887,888,899,912,953,954,971,980,986,987,988,989,1013,1014,1021,1022,1037,1040,1067,1068,1069,1070,1071,1115,1124,1200,1211,1216,1218,1219,1225,1226],used_dev:[838,847],used_mem_on_dev:838,used_mem_on_nod:1071,used_node_str:1071,used_node_strs_dict:1071,useful:[40,41,838,882,1071,1152,1161,1183,1226],user:[1183,1200,1211,1212,1213,1226,1229],uses:1183,using:[40,41,1014,1016,1017,1115,1118,1122,1134,1135,1152,1160,1164,1183,1200,1208,1225,1226,1229],util:[838,871,1071],utility_funct:[794,795],v_with_top_v_key_chain:[1212,1213],val:[40,41,797,832,912,961,962,963,988,989,1181],valid:[794,795,888,893,912,996,997,1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],valid_dtyp:888,valu:[40,41,783,785,797,815,838,850,881,882,912,913,915,917,918,919,927,928,929,931,932,938,942,948,949,950,951,966,967,969,970,973,975,982,983,984,985,986,987,988,989,990,1006,1009,1010,1011,1014,1018,1021,1030,1036,1037,1042,1045,1046,1047,1048,1049,1060,1061,1062,1067,1068,1069,1071,1115,1119,1120,1121,1125,1126,1127,1130,1131,1134,1136,1138,1152,1163,1164,1169,1170,1177,1200,1211,1214,1215,1216,1218],value_is_nan:912,vanilla:[1067,1069],var_shap:1191,variabl:[15,16,17,18,19,40,41,321,437,555,702,912,923,961,962,963,964,965,999,1014,1017,1018,1019,1020,1021,1022,1023,1025,1028,1067,1068,1069,1070,1152,1163,1169,1170,1189,1190,1191,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],variable_data:[702,1014],varianc:[40,41,1134,1142,1229],varieti:1226,variou:[43,1183],vector:[40,41,912,929,934,1037,1042,1043,1044,1152,1161,1200,1210],vector_norm:[40,41,1037],vector_to_skew_symmetric_matrix:[157,330,446,564,712,1037],verbos:1228,veri:[43,1183],version:43,via:[1115,1116,1123,1226],view:[1030,1035],vision:1183,visual:1226,volum:[1152,1157],vw_tm1:[1014,1017,1021],wai:[1226,1229],wait:[40,41,42],want:[1183,1226,1229],warn:[59,66,67,68,69,70],warp:[1030,1031],watch:1225,weight:[1014,1016,1017,1019,1021,1022,1023,1152,1161,1162,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1212,1213,1216,1218,1219],weight_initi:[1200,1201,1202,1203,1204,1205,1206,1207,1209,1210],weights_path:[1212,1213],well:[40,41,912,957],were:[40,41,1071],what:1183,when:[40,41,42,43,838,912,925,997,1010,1037,1042,1071,1183,1212,1213,1226,1229],where:[40,41,43,267,630,794,795,797,822,912,915,924,927,931,944,959,966,967,978,1011,1037,1042,1115,1116,1123,1127,1128],wherea:43,wherebi:[1115,1124],whether:[15,18,19,40,41,42,794,795,836,837,838,856,869,873,877,882,885,887,888,898,902,903,904,911,912,914,921,922,935,938,943,948,955,957,960,964,965,971,992,999,1008,1009,1014,1017,1018,1019,1020,1021,1022,1023,1025,1067,1068,1069,1070,1071,1115,1116,1117,1119,1123,1124,1127,1128,1144,1145,1152,1160,1183,1189,1190,1200,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],which:[40,41,42,43,779,780,781,794,795,836,837,838,847,848,856,861,862,863,864,867,868,869,870,872,874,878,880,881,882,888,893,898,902,911,912,915,920,930,932,934,935,936,938,945,949,950,951,952,958,959,968,969,970,977,978,979,980,981,983,986,987,994,998,1008,1010,1012,1013,1014,1017,1018,1019,1021,1022,1023,1025,1027,1028,1030,1032,1037,1040,1043,1049,1055,1071,1115,1119,1120,1121,1125,1126,1127,1128,1129,1130,1131,1134,1136,1137,1138,1139,1140,1141,1142,1144,1149,1152,1163,1164,1183,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1223,1225,1226],whitespac:[40,41,42],whose:[43,797,815,822,912,920,925,1134,1135,1136,1137,1138,1140,1142],why:[1183,1184],width:[1030,1035],wiki:1229,wikipedia:1229,window:[1030,1035,1152,1153,1154,1155,1156,1157,1158,1159,1200,1201,1202,1203,1204,1205,1206,1207],wise:[40,41,43,783,785,797,815,822,912,926,927,942,946,947,973,975,985,1014,1017,1019,1021,1023,1045,1046,1047,1048,1049,1050,1052,1054,1055,1057,1059,1060,1061,1062,1063,1065,1144,1145,1146,1147,1148,1149,1150,1151],wish:1226,with_arg_label:[1171,1173,1177,1212,1213],with_array_cach:[1171,1172,1173,1177],with_bia:[1200,1210],with_cal:[912,938],with_default_key_color:[40,41],with_edge_label:[1171,1173,1177,1212,1213],with_entries_as_list:[40,41],with_grad:[1014,1024,1212,1213],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1071,with_output_label:[1171,1173,1177,1212,1213],with_partial_v:[1212,1213],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,912,994,1071],with_to_kv_fn:[1200,1211],with_to_out_fn:[1200,1211],with_to_q_fn:[1200,1211],within:[15,18,19,912,915,1037,1042,1127,1131],without:[40,41,43,912,982,984,990,1115,1117,1226],wonder:1183,word:[15,16,17,912,915,1127,1131,1189,1190],work:[43,1225],worker:[838,847,848,1071],worker_class:[838,847,848,1071],worker_kwarg:1071,would:[43,912,919,1144,1149,1183,1226,1229],wrap:[15,40,41,42,43,912,925,1014,1028,1183],wrapper:43,write:[40,41,43,1183,1184,1229],written:[43,1183,1229],ws_new:[1014,1017,1019,1021,1022,1023],x1_i:[783,785,912,942,1049,1059],x2_i:[783,785,912,942,1049,1059],x_feat_dim:[1152,1163],x_i:[783,784],x_in:[1183,1225],x_inv:[1037,1039],x_max:[912,927],x_min:[912,927],x_sub:1071,xkk:1229,xkkm1:1229,xkm1km1:1229,xs0:1071,xs_t:1071,year:[1183,1229],yet:[1115,1124,1229],yield:[912,1010],you:[1183,1225,1226,1229],your:[1183,1225,1226,1229],your_awesome_project:1226,yourself:1183,zero:[40,41,114,267,400,514,630,794,795,912,931,978,980,986,987,1011,1013,1014,1016,1017,1021,1022,1152,1160,1183,1191,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1216,1217,1218,1219],zero_pad:[267,514,630,912],zeros_lik:[114,267,400,514,630,912],zip:1071,zk_e:1229},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","equal","isfinite","less_equal","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","equal","isfinite","less_equal","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","equal","isfinite","less_equal","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","equal","isfinite","less_equal","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","less_equal","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":938,"function":[77,78,83,87,89,90,91,92,93,94,95,194,195,200,202,204,205,206,207,208,209,210,368,369,374,378,380,381,382,383,384,385,386,477,478,483,487,489,490,491,492,493,494,495,592,593,598,602,604,605,606,607,608,609,610,778,779,783,786,788,789,790,791,792,793,794],Ones:1196,Using:1226,abs:[268,515,631,913],aco:[724,1050],acosh:[725,1051],activ:[178,355,463,584,756,1144,1186],adam:1217,adam_step:1016,adam_upd:1017,algebra:[88,89,203,204,379,380,488,489,603,604,787,788],all:[96,211,387,496,611,795],all_equ:914,all_nested_indic:1116,api:[0,43,75,98,192,213,366,389,475,498,590,613,776],arang:[115,269,401,516,632,915],arg_nam:916,argmax:[116,402,517,633,917],argmin:[117,403,518,634,918],args_to_ivi:16,args_to_n:17,argsort:[635,919],arithmet:[1,99,214,390,499,614],arrai:[0,3,43,75,97,98,100,118,192,212,213,215,222,270,366,388,389,391,404,475,497,498,500,519,590,612,613,615,636,776,797,920],array_equ:[271,637,921],arrays_equ:922,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[726,1052],asinh:[727,1053],assert_supports_inplac:923,atan2:[729,1055],atan:[728,1054],atanh:[730,1056],attribut:[5,101,216,392,501,616],backend:[43,73],bilinear_resampl:[154,327,443,561,709,1031],binary_cross_entropi:1166,bitwis:[7,102,217,393,502,617],broadcast_to:[272,638,924],builder:51,builtin:[97,212,222,388,497,612,797],builtin_ab:[223,798],builtin_add:[224,799],builtin_and:[225,800],builtin_bool:[226,801],builtin_contain:[227,802],builtin_deepcopi:[228,803],builtin_dir:[229,804],builtin_eq:[230,805],builtin_float:[231,806],builtin_floordiv:[232,807],builtin_g:[233,808],builtin_getattr:[234,809],builtin_getattribut:[235,810],builtin_getitem:[236,811],builtin_gt:[237,812],builtin_int:[238,813],builtin_invert:[239,814],builtin_l:[240,815],builtin_lt:[241,816],builtin_mul:[242,817],builtin_n:[243,818],builtin_neg:[244,819],builtin_or:[245,820],builtin_po:[246,821],builtin_pow:[247,822],builtin_radd:[248,823],builtin_rand:[249,824],builtin_rfloordiv:[250,825],builtin_rmul:[251,826],builtin_ror:[252,827],builtin_rpow:[253,828],builtin_rsub:[254,829],builtin_rtruediv:[255,830],builtin_rxor:[256,831],builtin_setitem:[257,832],builtin_sub:[258,833],builtin_truediv:[259,834],builtin_xor:[260,835],cache_fn:925,cast:[119,273,405,520,639,892],ceil:[274,640,926],choleski:[713,1038],choose_random_framework:61,citat:1183,clear_framework_stack:62,clear_mem_on_dev:[624,854],clip:[275,641,927],clip_matrix_norm:928,clip_vector_norm:929,clone:1086,clone_arrai:1087,clone_it:1088,clone_nest:1089,clonedit:1073,cloneditem:1072,clonednest:1074,closest_valid_dtyp:893,code:1229,comparison:[9,103,218,394,503,618],compil:[276,406,642,836,837,1171],compile_graph:1172,concaten:[120,277,407,521,643,930],constant:[76,193,367,476,591,777],constant_pad:[278,522,644,931],contain:[40,41],container_typ:[645,932],content:1183,contribut:43,conv1d:[184,358,467,768,1153,1201],conv1d_transpos:[185,359,468,769,1154],conv1dtranspos:1202,conv2d:[186,360,469,586,770,1155,1203],conv2d_transpos:[187,361,470,771,1156],conv2dtranspos:1204,conv3d:[188,362,471,587,772,1157,1205],conv3d_transpos:[189,363,472,773,1158],conv3dtranspos:1206,convers:15,convert:[180,764,1189],convert_dtyp:894,copy_arrai:[646,933],copy_nest:1117,core:[106,221,397,506,621,796],cos:[731,1057],cosh:[732,1058],cprint:1228,creation:[77,194,368,477,592,778],cross:[279,647,934],cross_entropi:1167,cumprod:[121,280,408,648,935],cumsum:[649,936],current_framework:63,current_framework_str:[650,937],data:[78,82,195,199,369,373,478,482,593,597,779,782],debug_mod:45,debugg:44,default_devic:855,default_dtyp:895,default_float_dtyp:896,default_int_dtyp:897,default_nod:1090,depthwise_conv2d:[190,364,473,588,774,1159],depthwiseconv2d:1207,design:43,dev:[109,263,509,625,856],dev_clon:857,dev_clone_arrai:858,dev_clone_it:859,dev_clone_nest:860,dev_dist:861,dev_dist_arrai:862,dev_dist_it:863,dev_dist_nest:864,dev_from_str:[110,264,510,626,865],dev_to_str:[111,265,511,627,866],dev_unifi:867,dev_unify_arrai:868,dev_unify_it:869,dev_unify_nest:870,dev_util:871,devclonedit:841,devcloneditem:840,devclonednest:842,devdistit:844,devdistitem:843,devdistnest:845,devic:[20,107,261,398,507,622,838],devmapp:847,devmappermultiproc:848,distribute_nest:1091,divid:1059,document:1183,dropout:[1160,1208],dtype:[122,281,409,523,651,888,898],dtype_bit:[123,282,410,524,652,899],dtype_from_str:[124,283,411,525,653,900],dtype_to_str:[125,284,412,526,654,901],ecosystem:52,einops_rearrang:939,einops_reduc:940,einops_repeat:941,einsum:[170,346,455,576,748,1135],elementwis:[83,200,374,483,598,783],equal:[84,375,484,599,942],erf:[451,733,1060],execute_with_gradi:[151,322,438,556,703,1018],exist:943,exp:[734,1061],expand_dim:[285,655,944],extens:[88,203,379,488,603,787],finfo:[80,197,371,480,595,780],firstlayersiren:1193,flip:[126,286,413,527,656,945],float_img_to_uint8_img:1032,floor:[287,657,946],floormod:[288,658,947],fomaml_step:1068,fourier_encod:948,framework:59,full:[127,289,414,528,659,949],func:72,gather:[128,290,415,529,660,950],gather_nd:[129,291,416,530,661,951],geglu:1187,gelu:[356,464,757,1145,1188],gener:[22,114,267,400,514,630,912],get_all_arrays_in_memori:952,get_all_arrays_on_dev:872,get_framework:64,get_min_bas:953,get_min_denomin:954,get_num_dim:[662,955],get_referrers_recurs:956,global:1174,glorotuniform:1194,gpu_is_avail:[873,1092],gradient:[24,150,321,437,555,702,1014],gradient_descent_upd:1019,gradient_imag:[155,328,444,562,710,1033],graph:1177,gym:53,handler:59,has_nan:957,helper:1179,ident:[130,292,417,531,663,958],iinfo:[81,198,372,481,596,781],imag:[26,153,326,442,560,708,1030],index_nest:1118,indices_wher:[131,293,418,664,959],initi:1191,inplac:[11,104,219,395,504,619],inplace_arrays_support:960,inplace_decr:[132,294,419,532,665,961],inplace_incr:[133,295,420,533,666,962],inplace_upd:[134,296,421,534,667,963],inplace_variables_support:964,inv:[714,1039],invalid_dtyp:902,is_arrai:[135,297,422,535,668,965],is_float_dtyp:903,is_int_dtyp:904,is_vari:[152,323,439,557,704,1020],isfinit:[85,201,376,485,600,784],isinf:[298,536,669,966],isnan:[299,537,670,967],ivi:[43,50,51,52,53,54,55,56,57,58,775,1225,1226,1229],ivymodul:[181,765],jax:74,lamb:1218,lamb_upd:1021,lar:1219,lars_upd:1022,layer:[183,357,466,585,767,1152,1200],layer_norm:1170,layernorm:1215,leaky_relu:[758,1146],less_equ:[86,377,486,601,785],linalg:[28,157,330,446,564,712,1037],linear:[88,89,203,204,379,380,488,489,603,604,787,788,1161,1210],linear_resampl:[136,300,423,538,671,968],linspac:[137,301,424,539,672,969],log:[735,1062,1180],log_global_inference_abs_tim:1175,log_global_inference_rel_tim:1176,logic:[30,160,335,449,568,719,1045],logical_and:[336,720,1046],logical_not:[337,721,1047],logical_or:[338,722,1048],logspac:[138,302,425,540,673,970],loss:1165,lstm:1209,lstm_updat:1162,maml_step:1069,manipul:[90,205,381,490,605,789],map:1119,map_nest_at_index:1120,map_nest_at_indic:1121,match_kwarg:971,math:[32,161,339,450,569,723,1049],matmul:[303,541,674,972],matrix_norm:[158,331,447,565,715,1040],maximum:[675,973],mech:54,memori:55,meshgrid:[304,676,974],meta:[34,1067],method:[87,202,378,487,602,786],minimum:[677,975],model:56,modul:[1212,1213,1225],multi:1071,multi_head_attent:1163,multi_index_nest:1122,multidevcontain:42,multidevit:851,multidevitem:850,multidevnest:852,multiheadattent:1211,multinodeit:1077,multinodeitem:1076,multinodenest:1078,multinomi:[163,341,453,571,741,1128],multiprocess:[678,976],mxnet:191,nativ:1225,nest:1115,nested_indices_wher:1123,nested_map:1124,network:1225,next:1183,node:[1071,1093],node_dist:1094,node_dist_arrai:1095,node_dist_it:1096,node_str:1097,node_to_str:1098,node_util:1099,nodedistit:1080,nodedistitem:1079,nodedistnest:1081,nodemapp:1083,nodemappermultiproc:1084,norm:[1169,1214],num_arrays_in_memori:977,num_arrays_on_dev:874,num_cpu_cor:875,num_gpu:[112,876,1100],numpi:365,nutshel:1183,one_hot:[139,426,542,679,978],ones:[140,305,427,543,680,979],ones_lik:[141,306,428,544,681,980],oper:[1,3,7,9,11,13,43,99,100,102,103,104,105,214,215,217,218,219,220,390,391,393,394,395,396,499,500,502,503,504,505,614,615,617,618,619,620],optim:[1216,1220],optimizer_upd:1023,overview:1183,param:1181,percent_used_mem_on_dev:877,percent_used_mem_on_nod:1101,pinv:[332,716,1041],portabl:1229,print_all_arrays_in_memori:981,print_all_arrays_on_dev:878,profil:[108,262,399,508,623,853,1085],queue_timeout:982,randint:[164,342,572,742,1129],random:[36,162,340,452,570,740,1127],random_crop:1034,random_norm:[165,343,573,743,1130],random_uniform:[166,344,574,744,1131],reduce_max:[171,347,456,577,749,1136],reduce_mean:[172,348,457,578,750,1137],reduce_min:[173,349,458,579,751,1138],reduce_prod:[174,350,459,580,752,1139],reduce_std:[351,1140],reduce_sum:[175,352,460,581,753,1141],reduce_var:[176,353,461,582,754,1142],reduct:[38,169,345,454,575,747,1134],reflect:[13,105,220,396,505,620],relu:[759,1147],repeat:[307,682,983],reptile_step:1070,reshap:[683,984],robot:57,round:[308,684,985],run:1226,scaled_dot_product_attent:1164,scatter_flat:[142,309,429,545,685,986],scatter_nd:[143,310,430,546,686,987],search:[91,206,382,491,606,790],seed:[167,745,1132],sequenti:[1222,1223],set:[92,207,383,492,607,791],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:879,set_default_dtyp:905,set_default_float_dtyp:906,set_default_int_dtyp:907,set_default_nod:1102,set_exception_debug_mod:48,set_framework:65,set_min_bas:988,set_min_denomin:989,set_nest_at_index:1125,set_nest_at_indic:1126,set_queue_timeout:990,set_split_factor:[880,1103],set_tmp_dir:991,set_with_grad:1024,sgd:1221,shape:[687,992],shape_to_tupl:993,show_graph:1173,shuffl:[168,746,1133],sigmoid:[760,1148],signatur:[87,202,378,487,602,786],sin:[736,1063],sinh:[737,1064],siren:1197,softmax:[179,465,761,1149],softplu:[762,1150],sort:[93,208,384,493,608,792],sparse_cross_entropi:1168,split:[144,311,431,547,688,994],split_factor:[881,1104],split_func_cal:[882,1105],squeez:[145,312,432,548,689,995],stable_divid:996,stable_pow:997,stack:[313,690,998],stack_imag:[156,329,445,563,711,1035],statist:[94,209,385,494,609,793],stop_gradi:[324,440,558,705,1025],str_to_nod:1106,submodul:43,supports_inplac:999,svd:[333,566,717,1042],swapax:[549,691,1000],tan:[738,1065],tanh:[739,763,1066,1151],tensorflow:474,tile:[314,550,692,1001],tmp_dir:1002,to_dev:[113,266,512,628,883],to_ivi:18,to_ivy_modul:[182,766,1190],to_list:[693,1003],to_n:19,to_nod:1107,to_numpi:[694,1004],to_scalar:[695,1005],torch:589,total_mem_on_dev:884,total_mem_on_nod:1108,tpu_is_avail:[513,629,885,1109],train:1225,trainabl:1225,transpos:[146,315,433,696,1006],tree:1183,try_else_non:1007,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,195,199,369,373,478,482,593,597,779,782],uint8_img_to_float_img:1036,unifi:1110,unify_arrai:1111,unify_it:1112,unify_nest:1113,unset_debug_mod:49,unset_default_devic:886,unset_default_dtyp:908,unset_default_float_dtyp:909,unset_default_int_dtyp:910,unset_framework:71,unset_with_grad:1026,unstack:[147,316,434,551,697,1008],used_mem_on_dev:887,used_mem_on_nod:1114,util:[95,210,386,495,610,794],valid_dtyp:911,value_is_nan:1009,variabl:[325,441,559,706,1027],variable_data:[707,1028],vector_norm:1043,vector_to_skew_symmetric_matrix:[159,334,448,567,718,1044],verbos:1227,vision:58,where:[317,698,1010,1183],why:1229,with_grad:1029,wrapper:72,write:1226,zero:[148,319,435,553,700,1012,1199],zero_pad:[318,552,699,1011],zeros_lik:[149,320,436,554,701,1013]}})